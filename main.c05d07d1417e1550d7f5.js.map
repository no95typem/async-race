{"version":3,"sources":["webpack://async-race/./src/components/garage/garage.scss?dc9e","webpack://async-race/./src/components/garage/subcomps/car/car.scss?1a27","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.scss?4682","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.scss?1eb1","webpack://async-race/./src/components/garage/subcomps/track/track.scss?9419","webpack://async-race/./src/components/header/header.scss?92c0","webpack://async-race/./src/components/winners/winners.scss?feec","webpack://async-race/./src/styles.scss?cfb3","webpack://async-race/./src/app.ts","webpack://async-race/./src/components/garage/car-actions.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-action-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-created-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-remove-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-select-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-request-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-req-msg.def.ts","webpack://async-race/./src/components/garage/garage-controller.ts","webpack://async-race/./src/components/garage/garage-driver.ts","webpack://async-race/./src/components/garage/garage-servant.ts","webpack://async-race/./src/components/garage/garage.ts","webpack://async-race/./src/components/garage/subcomps/car/car.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-create.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-proto.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.ts","webpack://async-race/./src/components/garage/subcomps/track/track.ts","webpack://async-race/./src/components/header/header.ts","webpack://async-race/./src/components/header/subcomps/nav-item/nav-item.ts","webpack://async-race/./src/components/winners/subcomps/winner-entry.ts","webpack://async-race/./src/components/winners/winners.ts","webpack://async-race/./src/definitions/car-random-data.def.ts","webpack://async-race/./src/lib/components/base-comp/base-comp.ts","webpack://async-race/./src/lib/generators/generators.ts","webpack://async-race/./src/lib/gui/animation.ts","webpack://async-race/./src/lib/processors/obj-processor.ts","webpack://async-race/./src/lib/services/dbus/dbus.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-common-responses.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-errors.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-hub-names.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-interface.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-rx/dbus-rx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-topics.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data-headers.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/msgs/dbus-msg.def.ts","webpack://async-race/./src/lib/services/pager/pager.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/dbus-msg-routing-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg.ts","webpack://async-race/./src/lib/services/simple-router/simple-router-agent.ts","webpack://async-race/./src/lib/services/simple-router/simple-router.ts","webpack://async-race/./src/services/rest-clients/client-engine/rest-client-engine.ts","webpack://async-race/./src/services/rest-clients/client-garage/dbus-msgs.defs/requests-msgs/create-car-msg.def.ts","webpack://async-race/./src/services/rest-clients/client-garage/dbus-msgs.defs/requests-msgs/delete-car-msg.def.ts","webpack://async-race/./src/services/rest-clients/client-garage/rest-client-garage.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.def.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.ts","webpack://async-race/./src/services/rest-clients/dbus-msgs/request-msgs/req-msg.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-errors.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-names.def.ts","webpack://async-race/webpack/bootstrap","webpack://async-race/webpack/runtime/define property getters","webpack://async-race/webpack/runtime/hasOwnProperty shorthand","webpack://async-race/webpack/runtime/make namespace object","webpack://async-race/./src/entry.ts"],"names":["rootElement","hubName","DBUS_HUB_NAMES","APP","loadedMainComponents","defaultRouterAgent","SimpleRouterAgent","this","loadMainComponent","router","SimpleRouter","mode","defaultRoot","defaultAgent","mainlineDBus","DBus","watchRouterMsgs","async","data","msg","DBusMsgRouteIsChangedMsg","newRoute","DBUS_COMMON_RESPONSES","VOID","classList","add","app","header","HeaderComponent","HEADER","append","attachHub","activateWantedAgents","intrfce","routeRX","getNewRX","plugRX","DBusTopics","ROUTING","name","GarageComp","WinnersComp","window","location","hash","newComponent","currMainComponent","remove","isDBusHub","CarActions","DBusMsgCarActionMsg","DBusMsg","action","rxIds","prefResponseRxIds","super","CAR_ACTION","DBusMsgCarActionCreatedMsg","car","CREATED","DBusMsgCarActionRemovedMsg","nullifiedContract","REMOVED","DBusMsgCarActionSelectedMsg","notifyChanges","SELECTED","DBusMsgGarageRaceMsg","GARAGE","DBusMsgRaceRequestMsg","DBusMsgGarageResetMsg","DBusMsgGarageResetReqMsg","tracksContainer","tracksNumberSelect","btnPrevPage","btnNextPage","carCtlsBlock","GARAGE_CONTROLLER","txs","Set","pageCarsLimitDefault","firstPageNumber","currPageNumber","lastPageNumber","racingRXFunc","performRace","resetState","carActionsRXFunc","readPageNumbers","refillContainer","createCarCtlBlock","index","btns","btnSelect","btnIgnite","btnStart","btnRm","forEach","btn","numberSpan","document","createElement","textContent","toString","container","garageManagersTeam","GarageManagersTeam","pageCarsLimit","setupBtns","int","getNewTX","autoConnect","carActionsMsgsRX","raceMsgsRX","REST_CLIENT_GARAGE","getCars","then","response","Number","parseInt","limit","toggleBtnsDisable","disabled","addEventListener","firstChild","cars","length","nullifyContracts","contracts","style","getComputedStyle","containerHeight","parseFloat","height","paddingBottom","paddingTop","carImgRatio","firstAutoHeight","innerWidth","heights","heightSum","carTrackHeight","push","excessHeight","heightsReversed","sort","a","b","intersectionBase","intersection","paddingBase","paddingAddShift","track","TrackComp","setProperty","carComp","CarComp","placeCar","map","contract","addContracts","catch","GarageDriverCommands","GarageDriver","Error","undefined","flags","currActionPromise","newPromise","Promise","res","rej","TurnOnTheIgnition","driveParams","drive","result","error","finally","params","REST_CLIENT_ENGINE","toggleEngine","currCar","id","console","log","time","rollBack","promise","calculateDriveTime","trackLength","getTrackLength","enterDriveMode","stop","rollForward","distance","velocity","freeDrivers","busyDrivers","Map","carCtlsClickListener","e","target","HTMLButtonElement","handleSelection","handleRemoving","handleDriving","handleRestoreState","handleWinner","winnerCar","REST_CLIENT_WINNERS","getWinner","winnerRecord","updatedWinnerData","wins","toFixed","updateWinner","message","REST_CLIENT_ERROR","NOT_FOUND","newWinnerData","createWinner","tx","tryFreeDrivers","delete","clear","—Åontracts","newContract","currRaceId","rollbackCars","setAllBtnsDisabled","driver","get","returnToStart","choosedDriver","find","isFree","set","putBehindTheWheel","performDrivingProtocol","deleteCar","deleteWinner","transmit","prepMode","DBusTXPrepModes","freeze","waitMode","DBusTXWaitModes","nowait","genSelectCallback","state","rollbacks","all","thisRaceId","genUniqId","arrivedByOrder","notArrived","isFinishVisible","participantsCount","size","getOutOfTheCar","has","updateData","BaseComp","mainControlsComp","MainControlsComp","carsCtlsBlock","_rootElement","garage","pager","selfCtlsBlock","bg","garage__bg","bgVideo","controls","loop","defaultMuted","muted","autoplay","src","controller","GarageComponentControllerAkaDirector","onloadeddata","startWorking","attachSubHub","_currCar","canvas","tireBack","_btnSelect","_btnRm","_spanCarName","_btnIgnite","_btnStart","hexToRgb","hex","c","test","split","r","slice","g","redrawCar","drawWheels","wheelImg","Image","CAR_WHEEL_IMG_SRC","onload","backwardWheelImg","OBJ_PROCESSOR","deepClone","carData","TIMING_FUNCTION","arrived","transitionPromise","elem","prop","val","valToWait","scaledTrackLength","carLengthCorrection","width","finalLength","broken","stopCoordinate","getPropertyValue","img","frameNumber","CAR_EXPLOSION_IMG_DATA","BASE_URL","EXTENSION","setTimeout","FRAME_TIME_MS","FRAMES_COUNT","CAR_BODY_IMG_SRC","ctx","getContext","shadowColor","color","shadowBlur","drawImage","repaint","imageData","getImageData","rgb","j","i","red","green","blue","blueDiff","blueDiffThreshold","threshold","putImageData","CreateCompController","CreateUpdateCompControllerProto","elements","inputText","inputColor","setupBtnCreate","unregCar","value","createCar","clone","UpdateCompController","rxs","chooseCarListener","choosedCar","notifyCb","setupBtnUpdate","rx","updateCar","CreateUpdateComponent","type","btnText","CREATE_UPDATE","textInput","colorInput","root","MAIN_CONTROLS","createComponent","updateComponent","btnRace","btnReset","btnGenerate","genRandomCarName","manufacturerNumber","getRandomInt","CAR_MODEL_LIST_KEYS","manufacturerName","models","CAR_MODEL_LIST","btnsBlock","renderBtns","generate","span","btnBlock","n","genLeft","unregCarData","winner","getRandomArbitraryInt","allSetled","topBlock","hasChildNodes","childNodes","child","spanCarName","carColumnWidth","gridTemplateColumns","CAR_GRID_COLUMN_NUMBER","buses","illuminateNavItem","anchors","anchor","getAttribute","logo","header__logo","firstSpan","secondSpan","navContainer","ul","li","svg","navItems","NavItem","item","illuminateRX","text","href","styles","iconSrc","_anchor","setAttribute","iconImage","WinnerRowComp","winnerData","idElem","carElem","nameElem","winsElem","bestTimeElem","table","tableBody","tableHead","thId","thCar","thName","thWins","thBestTime","currOrder","currSort","entriesPerPage","pagerCallback","dir","refillTable","tableHeadClickListener","REST_CLIENT_WINNERS_SORT_OPTIONS","contains","refreshTableHeader","currSortedElem","winners","pagerBtnsContainer","Pager","getBtnPrevPage","getBtnNextPage","pagerSpan","getPagerSpan","renderHeader","tr","specialSort","specialOrder","page","getCurrPageNumber","order","getWinners","setEntriesCount","getCar","row","TEXT_CONTENT_ENG","deepFreeze","Lamborghini","Ferrari","Koenigsegg","Object","keys","tag","arr","Uint8Array","crypto","getRandomValues","join","max","Math","floor","random","min","resolve","transformAndAutoresolve","delay","forceAutoresolveIn","transPropArr","replace","propIndex","lastIndexOf","eventHandler","propertyName","removeEventListener","transformAndWaitEvent","obj","record","isFrozen","Array","isArray","v","HTMLElement","cloneNode","Blob","k","setPrototypeOf","getPrototypeOf","network","idCounter","createdRXs","createdTXs","attachedHubs","occupiedNames","callRXFunc","headers","clonedData","func","handleClone","freezedData","handleFreeze","DBUS_ERRORS","UNEXPECTED_PREP_MODE","busId","hub","suffix","createInterfaceForHub","prefix","HUB_IS_ALREADY_ATTACHED","HUB_NAME_NOT_AUTHORIZED","HUB_NAME_IS_OCCUPIED","dbusInterface","DBusInterface","desc","genNewRX","topic","unplugRX","subHub","subSuffix","connect","regNumber","DBusTX","opts","head","DBusTXDataHeaders","DBusTXData","freezedTX","DBusRX","freezedRX","XENO_RX","TOPIC_IS_NOT_EXIST","TOPIC_HAS_NO_RXS","choosedRXs","includes","PREF_RXS_ARE_NOT_EXIST","allSettled","manual","BAD_REQUEST","ROUTER","object","objAsRecord","arrowedGetNewTX","arrowedGetNewRX","arrowedPlugRX","arrowedUnplugRX","RXs","TXs","RXsPlugMap","txId","txRegNumber","txDesc","listCallback","entriesCount","callbackIsCalled","btnNextSpan","btnPrevSpan","callCallback","toggleBtnsDisabled","ceil","DBusMsgRoutingMsg","path","callback","getStateCallback","setStateCallback","options","agents","restrictions","currRoute","wantedRoute","host","values","promises","arrow","cancelRouteChange","activatedCount","errors","onlyDBus","agentsArr","agent","baseUrl","resUrl","fullUrl","status","url","fetch","method","json","UNEXPECTED_RESULT","UNKNOWN_ERROR","DBusMsgRESTReqGarageCreateCarMsg","DBusMsgRESTReqMsg","REST_CLIENT_NAMES","DBusMsgRESTReqGarageDeleteCarMsg","clientName","requestRXFunc","destClient","requestRX","REST_CLIENT_REQUESTS","limitStr","limitResponse","body","JSON","stringify","regCar","winnerCarData","WINNERS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","d","definition","key","o","defineProperty","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","appDiv","App"],"mappings":"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","file":"main.c05d07d1417e1550d7f5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"garage\":\"_21SC4SGf5mTamWfNdNRR\",\"garage__bg\":\"_2VnbeeG4HKnZfSWUedizHh\",\"garage__track-container\":\"_1rsPT6UvHnbHI-FUFvPaSe\",\"garage-bg\":\"-BA3r_cxZwAYkgGQVVZeo\",\"garage-bg__video\":\"_3byu86MCf3s6B7JQuetNAw\",\"garage-bg__car-ctl-btn\":\"_3upDU-ngLjybmFg4wiVvfl\",\"garage-bg__car-ctl-block-number\":\"_3dT19pzigDW1UKuPVLEguq\",\"garage-bg__car-ctl-block\":\"_2e0Ox8Joh0jw60ztR_rVt5\",\"garage-bg__cars-ctls-block\":\"wMVLCRcoluFnZleBHWXlm\",\"garage-bg__self-ctls-block\":\"_2VQVmkB2amN4PG9XCyFye9\",\"garage-bg__pager\":\"_2avafWgl8XDS2KLJswKq0H\",\"synthwave-background\":\"_2pUKJme_w_0KTS_JoVNV5b\",\"move-grid\":\"_1MqERRNbzZtvdd9iE43L04\",\"synthwave-background_race-mode\":\"n1z9UH35nfilmkK2lmQvV\",\"race\":\"_375ItX4gjZY-ZT7KrEfBgG\"};","// extracted by mini-css-extract-plugin\nexport default {\"car-div\":\"_3pRKwGaRv59JcJqlApAnkk\",\"car-div__canvas\":\"rH6_OMXna8-zeemMHF11D\",\"car-div__wheel\":\"_3WNDl-LGGtViqzAfLLX4CB\",\"car-div__wheel_forward\":\"_3Rdh32fs7fi-95LcabV_Ed\",\"car-div__wheel_backward\":\"_3xptMXOOFn6YcMVYMigRMa\",\"car-div__explosion\":\"_3w8-mlW0m2zLABohqiDQ3e\",\"car-div_rollForward\":\"_3xWmq3Q2UpNiq2nICrGAIN\",\"car-div-anim\":\"_381V-1xCMVwSdGT0FxnQiO\",\"tire-anim\":\"_2Qs9DAZPIqZivw_0ON2Vot\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2uo9WXSTJyDD3jBlT_quev\",\"text-input\":\"_2YNdYEaErpy02Ske_bZONx\",\"color-input\":\"_3Ye7rbfoBnq4HZn4H-yDB8\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-controls\":\"_2b_svto1O0DGSO3_579_Xj\",\"btn-block\":\"_262VSHreYXfZUHLGeCJEvZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"track\":\"_2hDrLwwwZMiv2NrI-XZZqJ\",\"track__controls-block\":\"_3pqcODoHFqX9rxmLKBnhD4\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_3TTTWNe5aoHesw4iV0YUGU\",\"header__logo\":\"_2idUQTZia_1M_0xkhMkXf8\",\"header-nav\":\"_7vejZGT8OzUejTiWyGs1P\",\"header-nav__item\":\"_1NYwlHRXmh2YGu63soBsjx\",\"header-nav__anchor\":\"_2n39qEg5Iz5Tym2Z0Jrjz9\",\"header-nav__anchor_active\":\"_2bRvd3RlExbbSpyXLuxSdS\",\"header-nav__svg\":\"_2FCXcgNK7Jgl9f3ZK-O56I\",\"header-nav__span\":\"_1NVrpdaSQLvqho4VNqQqit\",\"header-nav__list\":\"_1vy8OijKt-Cy7SGXyM4ek9\",\"header-nav__list_disabled\":\"_25SilQm6mkAlbl-WpajKBY\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"HVDfoBgyIQ4teF5EKFzcD\",\"table\":\"_3mJKnd573Tt4WspNl7gf1J\",\"table__can-be-sorted\":\"_3Xa74hpyx3g6XUuZ9fB9Cm\",\"table__sorted-elem\":\"rfPuVNCW0Sd4nzQGO8-R8\",\"table__sorted-elem_asc\":\"N6296gY2c5AFEX4KjE4I4\",\"table__sorted-elem_desc\":\"_37bMOUs2OF28ZqMubJCPnM\",\"pager\":\"_2q-noyJbwIpKOMhl7AWlq5\",\"pager-span\":\"_1O8erRuDz9RWa3C9tqnUm-\",\"pager-btn\":\"_3OktYstRgXgDE6zlpOM6LA\"};","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"_2ljk-3_Qk7EjDct5a15qZP\",\"main-component\":\"_394erWdWCWrQmkYlaBZ1L5\",\"btn\":\"_3cliA46UjEIGfEKGRnJzCZ\",\"btn-6\":\"_35BryCkuNmCUsRxmBw_Y1\",\"btn-15\":\"TNTO3dtfSfS40M6g8U274\"};","import { BaseComp } from './lib/components/base-comp/base-comp';\nimport { SimpleRouterAgent } from './lib/services/simple-router/simple-router-agent';\nimport { SimpleRouter } from './lib/services/simple-router/simple-router';\nimport { DBus } from './lib/services/dbus/dbus';\nimport { DBusMsgRouteIsChangedMsg } from './lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { DBusTopics } from './lib/services/dbus/defs/dbus-topics.def';\nimport { DBUS_COMMON_RESPONSES } from './lib/services/dbus/defs/dbus-common-responses.def';\nimport { HeaderComponent } from './components/header/header';\n\nimport sharedStyles from './styles.scss';\nimport { DBusTXData } from './lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { GarageComp } from './components/garage/garage';\nimport {\n  DBusHub,\n  isDBusHub,\n  DBusInterface,\n} from './lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './lib/services/dbus/defs/dbus-hub-names.def';\nimport { WinnersComp } from './components/winners/winners';\n\nexport class App implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.APP;\n\n  protected loadedMainComponents: Record<string, BaseComp> = {};\n\n  protected currMainComponent: BaseComp | undefined;\n\n  protected defaultRouterAgent = new SimpleRouterAgent('hash', '', () =>\n    this.loadMainComponent('default'),\n  );\n\n  protected router = new SimpleRouter({\n    mode: '#',\n    defaultRoot: '',\n    defaultAgent: this.defaultRouterAgent,\n  });\n\n  protected mainlineDBus = new DBus();\n\n  // protected garageRestClient = new RestClientGarage('http://127.0.0.1:3000');\n\n  constructor(private readonly rootElement: HTMLElement) {\n    this.rootElement.classList.add(sharedStyles.app);\n\n    // asyncFunc();\n    const header = new HeaderComponent(DBUS_HUB_NAMES.HEADER);\n    this.rootElement.append(header.rootElement);\n\n    // this.garage.rootElement.classList.add(sharedStyles['main-component']);\n    // this.rootElement.append(this.garage.rootElement);\n\n    this.mainlineDBus.attachHub(header);\n    this.mainlineDBus.attachHub(this);\n    this.mainlineDBus.attachHub(this.router);\n\n    this.router.activateWantedAgents();\n  }\n\n  connect(intrfce: DBusInterface) {\n    const routeRX = intrfce.getNewRX(this.watchRouterMsgs);\n    intrfce.plugRX(DBusTopics.ROUTING, routeRX);\n  }\n\n  private watchRouterMsgs = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      // TODO: Rework with enum!?\n      this.loadMainComponent(msg.newRoute);\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private loadMainComponent(name: string): void {\n    if (!(name in this.loadedMainComponents)) {\n      switch (name) {\n        case '#garage':\n          this.loadedMainComponents[`${name}`] = new GarageComp();\n          break;\n        case '#winners':\n          this.loadedMainComponents[`${name}`] = new WinnersComp();\n          break;\n        default:\n          window.location.hash = '#garage';\n          break;\n      }\n    }\n    const newComponent = this.loadedMainComponents[`${name}`];\n\n    if (newComponent) {\n      if (this.currMainComponent) {\n        this.currMainComponent.rootElement.remove();\n      }\n\n      this.currMainComponent = newComponent;\n      newComponent.rootElement.classList.add(sharedStyles['main-component']);\n      this.rootElement.append(newComponent.rootElement);\n\n      if (isDBusHub(this.currMainComponent)) {\n        this.mainlineDBus.attachHub(this.currMainComponent);\n      }\n    }\n  }\n}\n","export enum CarActions {\n  CREATED,\n  SELECTED,\n  REMOVED,\n  UPDATED,\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { CarActions } from '../../../car-actions.def';\n\nexport class DBusMsgCarActionMsg extends DBusMsg {\n  constructor(\n    readonly action: CarActions,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.CAR_ACTION, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionCreatedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.CREATED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { GarageServicemanContract } from '../../../garage-serviceman-contract.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionRemovedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly nullifiedContract: GarageServicemanContract,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.REMOVED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionSelectedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly notifyChanges?: (car: RegCarData) => unknown,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.SELECTED, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgGarageRaceMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgRaceRequestMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgGarageResetMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageResetMsg } from './garage-reset-msg.def';\n\nexport class DBusMsgGarageResetReqMsg extends DBusMsgGarageResetMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { UnregCarData } from '../../definitions/car-data.def';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageManagersTeam } from './garage-servant';\nimport { CarComp } from './subcomps/car/car';\nimport { TrackComp } from './subcomps/track/track';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { DBusMsgCarActionCreatedMsg } from './dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport { DBusMsgRaceRequestMsg } from './dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport { DBusMsgGarageResetReqMsg } from './dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\n\nexport class GarageComponentControllerAkaDirector implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.GARAGE_CONTROLLER;\n\n  protected txs = new Set<DBusTX>();\n\n  private readonly pageCarsLimitDefault = 10;\n\n  private pageCarsLimit: number;\n\n  private firstPageNumber = 1;\n\n  private currPageNumber = this.firstPageNumber;\n\n  private lastPageNumber = 0;\n\n  private garageManagersTeam: GarageManagersTeam;\n\n  constructor(\n    private tracksContainer: HTMLElement,\n    private tracksNumberSelect: HTMLSelectElement,\n    private btnPrevPage: HTMLButtonElement,\n    private btnNextPage: HTMLButtonElement,\n    private carCtlsBlock: HTMLElement,\n  ) {\n    this.garageManagersTeam = new GarageManagersTeam(\n      tracksContainer,\n      carCtlsBlock,\n    );\n    this.pageCarsLimit = this.pageCarsLimitDefault; // !!! TODO ADD FROM SWITCHER\n  }\n\n  startWorking() {\n    this.readPageNumbers();\n    this.refillContainer();\n    this.setupBtns();\n  }\n\n  async connect(int: DBusInterface) {\n    this.txs.add(int.getNewTX('send requests to REST Garage client'));\n    this.garageManagersTeam.autoConnect(int);\n\n    const carActionsMsgsRX = int.getNewRX(\n      this.carActionsRXFunc,\n      'monitor cars removes',\n    );\n    int.plugRX(DBusTopics.CAR_ACTION, carActionsMsgsRX);\n\n    const raceMsgsRX = int.getNewRX(this.racingRXFunc, 'handle race requsets');\n    int.plugRX(DBusTopics.GARAGE, raceMsgsRX);\n  }\n\n  private readPageNumbers() {\n    REST_CLIENT_GARAGE.getCars().then(response => {\n      this.lastPageNumber =\n        Number.parseInt(response.limit, 10) / this.pageCarsLimit;\n      this.toggleBtnsDisable();\n    });\n  }\n\n  private racingRXFunc = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRaceRequestMsg) {\n      return this.performRace();\n    }\n    if (data.msg instanceof DBusMsgGarageResetReqMsg) {\n      return this.resetState();\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private async resetState() {\n    const reseted = await this.garageManagersTeam.resetState();\n    return reseted;\n  }\n\n  private async performRace() {\n    this.btnNextPage.disabled = true;\n    this.btnPrevPage.disabled = true;\n    await this.garageManagersTeam.performRace();\n  }\n\n  private carActionsRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgCarActionRemovedMsg ||\n      data.msg instanceof DBusMsgCarActionCreatedMsg\n    ) {\n      this.readPageNumbers();\n      this.refillContainer();\n    }\n\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private setupBtns() {\n    this.toggleBtnsDisable();\n    this.btnNextPage.addEventListener('click', () => {\n      this.currPageNumber++;\n      this.toggleBtnsDisable();\n      this.refillContainer();\n    });\n    this.btnPrevPage.addEventListener('click', () => {\n      this.currPageNumber--;\n      this.toggleBtnsDisable();\n      this.refillContainer();\n    });\n  }\n\n  private toggleBtnsDisable() {\n    if (this.currPageNumber > this.firstPageNumber)\n      this.btnPrevPage.disabled = false;\n    else this.btnPrevPage.disabled = true;\n\n    if (this.currPageNumber < this.lastPageNumber)\n      this.btnNextPage.disabled = false;\n    else this.btnNextPage.disabled = true;\n  }\n\n  private refillContainer() {\n    while (this.tracksContainer.firstChild)\n      this.tracksContainer.firstChild.remove();\n    while (this.carCtlsBlock.firstChild) this.carCtlsBlock.firstChild.remove();\n\n    REST_CLIENT_GARAGE.getCars(this.currPageNumber, this.pageCarsLimit)\n      .then(async response => {\n        const { limit, cars } = response;\n        if (cars.length === 0 && this.currPageNumber > this.firstPageNumber) {\n          this.currPageNumber--;\n          this.toggleBtnsDisable();\n          this.refillContainer();\n          return;\n        }\n\n        await this.garageManagersTeam.nullifyContracts();\n        const contracts: GarageServicemanContract[] = [];\n        const style = window.getComputedStyle(this.tracksContainer);\n\n        const containerHeight =\n          Number.parseFloat(style.height) -\n          Number.parseFloat(style.paddingBottom) -\n          Number.parseFloat(style.paddingTop);\n        // 40; // !!! CONSTANT\n\n        const carImgRatio = 3.78;\n\n        const firstAutoWidth = window.innerWidth * 0.2;\n        const firstAutoHeight = firstAutoWidth / carImgRatio;\n\n        const scaleFactor = 0.95;\n\n        const heights: number[] = [];\n        let heightSum = 0;\n\n        cars.forEach((car, index) => {\n          const factor = scaleFactor ** index;\n          const carTrackHeight = firstAutoHeight * factor;\n          heightSum += carTrackHeight;\n          heights.push(carTrackHeight);\n        });\n\n        const excessHeight = heightSum - containerHeight;\n\n        const heightsReversed = heights.sort((a, b) => a - b);\n\n        const intersectionBase = excessHeight / cars.length - 2;\n        let intersection = intersectionBase;\n\n        const paddingBase = (heightsReversed[0] as number) * carImgRatio;\n        const paddingAddShift = (20 * window.innerWidth) / 1920; // 20 - is good looking on 1920\n\n        cars.forEach((car, index) => {\n          const track = new TrackComp();\n\n          track.rootElement.style.setProperty(\n            'height',\n            `${heightsReversed[index]}px`,\n          );\n\n          if (index !== 0) {\n            track.rootElement.style.setProperty('top', `${-intersection}px`);\n            intersection += intersectionBase;\n          }\n\n          track.rootElement.style.setProperty('z-index', `${index + 1}`);\n\n          track.rootElement.style.setProperty(\n            'padding',\n            `0px ${\n              (heightsReversed[heightsReversed.length - 1 - index] as number) *\n                carImgRatio -\n              paddingBase +\n              paddingAddShift * (cars.length - 1 - index)\n            }px`,\n          );\n\n          const carComp = new CarComp(car);\n          track.placeCar(carComp);\n          contracts.push({ track, car: carComp });\n        });\n\n        this.tracksContainer.append(\n          ...contracts.map(contract => contract.track.rootElement),\n        );\n        this.carCtlsBlock.append(\n          ...contracts.map((contract, index) =>\n            this.createCarCtlBlock(contract.car, index + 1),\n          ),\n        );\n        this.garageManagersTeam.addContracts(...contracts);\n      })\n      .catch(() => {});\n  }\n\n  private createCarCtlBlock = (car: CarComp, index: number): HTMLElement => {\n    const btns = [car.btnSelect, car.btnIgnite, car.btnStart, car.btnRm];\n    btns.forEach(btn => {\n      btn.classList.add(sharedStyles.btn, styles['garage-bg__car-ctl-btn']);\n    });\n\n    const numberSpan = document.createElement('span');\n    numberSpan.classList.add(styles['garage-bg__car-ctl-block-number']);\n    numberSpan.textContent = index.toString();\n    const container = document.createElement('div');\n    container.classList.add(styles['garage-bg__car-ctl-block']);\n    container.append(numberSpan, ...btns);\n    return container;\n  };\n}\n","import { RegCarData } from '../../definitions/car-data.def';\nimport {\n  EngineResponse,\n  REST_CLIENT_ENGINE,\n} from '../../services/rest-clients/client-engine/rest-client-engine';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { CarComp } from './subcomps/car/car';\n\nexport enum GarageDriverCommands {\n  START_DRIVING,\n  STOP_DRIVING,\n}\n\nexport class GarageDriver {\n  private contract: GarageServicemanContract | undefined;\n\n  private currActionPromise: Promise<unknown> | undefined;\n\n  public isFree(): boolean {\n    if (!this.contract) return true;\n    return false;\n  }\n\n  putBehindTheWheel(contract: GarageServicemanContract): void {\n    if (this.contract) throw new Error('ALREADY IN CAR');\n    this.contract = contract;\n  }\n\n  async getOutOfTheCar() {\n    this.contract = undefined;\n  }\n\n  async performDrivingProtocol(flags?: Record<string, unknown>) {\n    if (this.currActionPromise) await this.currActionPromise;\n    const newPromise = new Promise<number | false>((res, rej) => {\n      this.TurnOnTheIgnition()\n        .then(driveParams => this.drive(driveParams, newPromise, flags))\n        .then(result => res(result))\n        .catch((error: Error) => rej(error));\n    }).finally(() => {\n      if (this.currActionPromise === newPromise)\n        this.currActionPromise = undefined;\n    });\n    this.currActionPromise = newPromise;\n    return newPromise;\n  }\n\n  private async TurnOnTheIgnition() {\n    if (!this.contract) throw new Error('NOT_BEHIND_THE_WHEEL');\n    const params = await REST_CLIENT_ENGINE.toggleEngine(\n      this.contract.car.currCar.id,\n      'started',\n    );\n    console.log('START ENGINE');\n    return params;\n  }\n\n  // !!! If animation fails, this promise never resolves!\n  async returnToStart() {\n    const newPromise = new Promise<true>((res, rej) => {\n      if (this.contract) {\n        const time = 1; // !!! TODO Replace somehow?\n        this.contract.car.rollBack(time).then(() => res(true));\n      }\n    }).finally(() => {\n      if (this.currActionPromise === newPromise)\n        this.currActionPromise = undefined;\n    });\n    this.currActionPromise = newPromise;\n    return newPromise;\n  }\n\n  private async drive(\n    driveParams: EngineResponse,\n    promise: Promise<unknown>,\n    flags?: Record<string, unknown>,\n  ): Promise<false | number> {\n    return new Promise<false | number>((res, rej) => {\n      if (this.contract) {\n        const { contract } = this;\n        const time = GarageDriver.calculateDriveTime(driveParams);\n        const trackLength = contract.track.getTrackLength();\n        REST_CLIENT_ENGINE.enterDriveMode(contract.car.currCar.id)\n          .then(() => {\n            if (\n              contract === this.contract &&\n              promise === this.currActionPromise\n            ) {\n              contract.car.stop();\n              res(time);\n            } else res(false);\n          })\n          .catch(() => {\n            console.log('broken');\n            if (\n              contract === this.contract &&\n              promise === this.currActionPromise\n            ) {\n              console.log('stop car');\n              contract.car.stop(true, flags);\n              rej(new Error('BROKEN'));\n            }\n          })\n          .finally(() => {\n            if (\n              contract === this.contract &&\n              promise === this.currActionPromise\n            ) {\n              REST_CLIENT_ENGINE.toggleEngine(\n                contract.car.currCar.id,\n                'stopped',\n              );\n            }\n          });\n        contract.car.rollForward(time, trackLength);\n      }\n    });\n  }\n\n  private static calculateDriveTime(params: EngineResponse) {\n    const time = params.distance / 1000 / params.velocity; /// !!! distance units???\n    return time;\n  }\n}\n","import { RegCarData, WinnerCarData } from '../../definitions/car-data.def';\nimport { DBusInterface } from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgCarActionSelectedMsg } from './dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { GarageDriver, GarageDriverCommands } from './garage-driver';\nimport { genUniqId } from '../../lib/generators/generators';\n\nimport styles from './garage.scss';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\n\nexport class GarageManagersTeam implements DBusPort {\n  protected txs = new Set<DBusTX>();\n\n  protected contracts = new Set<GarageServicemanContract>();\n\n  protected freeDrivers = new Set<GarageDriver>();\n\n  protected busyDrivers = new Map<GarageServicemanContract, GarageDriver>();\n\n  protected currRaceId: string | undefined;\n\n  constructor(\n    private readonly tracksContainer: HTMLElement,\n    private readonly carCtlsBlock: HTMLElement,\n  ) {\n    this.carCtlsBlock.addEventListener('click', this.carCtlsClickListener);\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('garage serviceman');\n    this.txs.add(tx);\n  }\n\n  async nullifyContracts(contracts?: GarageServicemanContract[]) {\n    if (contracts) {\n      this.tryFreeDrivers(...contracts);\n      contracts.forEach(contract => {\n        this.contracts.delete(contract);\n      });\n    } else {\n      this.tryFreeDrivers(...this.contracts);\n      this.contracts.clear();\n    }\n  }\n\n  addContracts(...—Åontracts: GarageServicemanContract[]) {\n    —Åontracts.forEach(newContract => this.contracts.add(newContract));\n  }\n\n  private carCtlsClickListener = (e: Event) => {\n    if (e.target instanceof HTMLButtonElement) {\n      this.contracts.forEach(contract => {\n        if (e.target === contract.car.btnSelect) this.handleSelection(contract);\n        if (e.target === contract.car.btnRm) this.handleRemoving(contract);\n        if (e.target === contract.car.btnIgnite) this.handleDriving(contract);\n        if (e.target === contract.car.btnStart)\n          this.handleRestoreState(contract);\n      });\n    }\n  };\n\n  async resetState() {\n    this.currRaceId = undefined;\n\n    await this.rollbackCars();\n\n    console.log(this.currRaceId);\n    if (!this.currRaceId) this.setAllBtnsDisabled(false);\n  }\n\n  private async handleRestoreState(contract: GarageServicemanContract) {\n    const driver = this.busyDrivers.get(contract);\n    if (driver) {\n      await driver.returnToStart();\n    }\n  }\n\n  private async handleDriving(\n    contract: GarageServicemanContract,\n    flags?: Record<string, unknown>,\n  ) {\n    let choosedDriver = this.busyDrivers.get(contract);\n\n    if (!choosedDriver) {\n      // !!! excess check?\n      choosedDriver = [...this.freeDrivers].find(driver => driver.isFree());\n\n      if (choosedDriver) {\n        this.freeDrivers.delete(choosedDriver);\n      } else {\n        choosedDriver = new GarageDriver();\n      }\n\n      this.busyDrivers.set(contract, choosedDriver);\n\n      choosedDriver.putBehindTheWheel(contract);\n    }\n\n    const result = await choosedDriver\n      .performDrivingProtocol(flags)\n      .catch((error: Error) => error);\n    return result;\n  }\n\n  private handleRemoving(contract: GarageServicemanContract) {\n    REST_CLIENT_GARAGE.deleteCar(contract.car.currCar.id).then(async () => {\n      await REST_CLIENT_WINNERS.deleteWinner(contract.car.currCar.id).catch(\n        () => {},\n      );\n      this.tryFreeDrivers(contract);\n      this.contracts.delete(contract);\n      const msg = new DBusMsgCarActionRemovedMsg(\n        contract.car.currCar,\n        contract,\n      );\n      this.txs.forEach(tx => {\n        tx.transmit({\n          msg,\n          prepMode: DBusTXPrepModes.freeze,\n          waitMode: DBusTXWaitModes.nowait,\n        });\n      });\n    });\n  }\n\n  private handleSelection(contract: GarageServicemanContract) {\n    const msg = new DBusMsgCarActionSelectedMsg(\n      contract.car.currCar,\n      this.genSelectCallback(contract),\n    );\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  private setAllBtnsDisabled(state: boolean) {\n    this.contracts.forEach(contract => {\n      contract.car.btnIgnite.disabled = state;\n      contract.car.btnRm.disabled = state;\n      contract.car.btnSelect.disabled = state;\n      contract.car.btnStart.disabled = state;\n    });\n  }\n\n  private async rollbackCars() {\n    this.tracksContainer.style.setProperty('--translate-x', '0px');\n    // rollback cars\n    const rollbacks: Promise<unknown>[] = [];\n    this.busyDrivers.forEach(driver => {\n      rollbacks.push(driver.returnToStart());\n    });\n    await Promise.all(rollbacks);\n  }\n\n  async performRace() {\n    const thisRaceId = genUniqId();\n    this.currRaceId = thisRaceId;\n\n    // prepare\n    this.setAllBtnsDisabled(true);\n    await this.rollbackCars();\n\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    // perform race\n    const arrivedByOrder: GarageServicemanContract[] = [];\n    const notArrived: GarageServicemanContract[] = [];\n    const flags: Record<string, unknown> = {\n      isFinishVisible: false,\n    };\n    await new Promise(res => {\n      this.tracksContainer.classList.add(\n        styles['synthwave-background_race-mode'],\n      );\n      const participantsCount = this.contracts.size;\n      this.contracts.forEach(contract => {\n        this.handleDriving(contract, flags).then(result => {\n          // check if user cancell a race\n          if (thisRaceId !== this.currRaceId) return;\n\n          if (result !== false && !(result instanceof Error)) {\n            if (arrivedByOrder.length === 0) {\n              flags.isFinishVisible = true;\n              this.tracksContainer.classList.remove(\n                styles['synthwave-background_race-mode'],\n              );\n              this.handleWinner(contract, result);\n            }\n            arrivedByOrder.push(contract);\n          } else {\n            notArrived.push(contract);\n          }\n          if (arrivedByOrder.length + notArrived.length === participantsCount)\n            res(true);\n        });\n      });\n    });\n    this.tracksContainer.classList.remove(\n      styles['synthwave-background_race-mode'],\n    );\n\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    this.setAllBtnsDisabled(false);\n    // TODO: Do something else?\n    console.log(arrivedByOrder, notArrived);\n  }\n\n  private handleWinner = (contract: GarageServicemanContract, time: number) => {\n    const winnerCar = contract.car.currCar;\n    REST_CLIENT_WINNERS.getWinner(winnerCar.id)\n      .then(winnerRecord => {\n        const updatedWinnerData: WinnerCarData = {\n          id: winnerRecord.id,\n          wins: winnerRecord.wins + 1,\n          time:\n            time < winnerRecord.time\n              ? Number.parseFloat(time.toFixed(2))\n              : winnerRecord.time,\n        };\n        REST_CLIENT_WINNERS.updateWinner(updatedWinnerData);\n      })\n      .catch((error: Error) => {\n        if (error.message === REST_CLIENT_ERROR.NOT_FOUND) {\n          const newWinnerData: WinnerCarData = {\n            id: winnerCar.id,\n            wins: 1,\n            time: Number.parseFloat(time.toFixed(2)),\n          };\n          REST_CLIENT_WINNERS.createWinner(newWinnerData);\n        }\n      });\n  };\n\n  private tryFreeDrivers(...contracts: GarageServicemanContract[]) {\n    contracts.forEach(contract => {\n      const driver = this.busyDrivers.get(contract);\n      if (driver) {\n        driver.getOutOfTheCar().then(() => {\n          this.busyDrivers.delete(contract);\n          this.freeDrivers.add(driver);\n        });\n      }\n    });\n  }\n\n  private genSelectCallback(contract: GarageServicemanContract) {\n    return (car: RegCarData) => {\n      if (!this.contracts.has(contract)) return;\n      contract.car.updateData(car);\n    };\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { GarageComponentControllerAkaDirector } from './garage-controller';\nimport { MainControlsComp } from './subcomps/main-controls/main-controls';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\n\nexport class GarageComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.GARAGE;\n\n  private controller: GarageComponentControllerAkaDirector;\n\n  private mainControlsComp = new MainControlsComp();\n\n  private carsCtlsBlock = document.createElement('div');\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.garage);\n\n    const btnNextPage = document.createElement('button');\n    btnNextPage.textContent = 'Next page';\n    btnNextPage.classList.add(sharedStyles.btn, sharedStyles['btn-6']);\n    const btnPrevPage = document.createElement('button');\n    btnPrevPage.textContent = 'Prev page';\n    btnPrevPage.classList.add(sharedStyles.btn, sharedStyles['btn-6']);\n\n    const pager = document.createElement('div');\n    pager.classList.add(styles['garage-bg__pager']);\n    const tracksNumberSelect = document.createElement('select');\n    const tracksContainer = document.createElement('div');\n    tracksContainer.classList.add(\n      styles['garage__track-container'],\n      styles['synthwave-background'],\n    );\n\n    pager.append(tracksNumberSelect, btnPrevPage, btnNextPage);\n\n    const selfCtlsBlock = document.createElement('div');\n    selfCtlsBlock.classList.add(styles['garage-bg__self-ctls-block']);\n    selfCtlsBlock.append(this.mainControlsComp.rootElement, pager);\n\n    const bg = document.createElement('div');\n    bg.classList.add(styles.garage__bg, styles['garage-bg']);\n\n    const bgVideo = document.createElement('video');\n    bgVideo.classList.add(styles['garage-bg__video']);\n\n    bgVideo.controls = false;\n    bgVideo.loop = true;\n    bgVideo.defaultMuted = true;\n    bgVideo.muted = true;\n\n    bgVideo.autoplay = true;\n\n    bgVideo.src = './assets/videos/bg/cyberpunk2077-garage.mp4';\n\n    this.controller = new GarageComponentControllerAkaDirector(\n      tracksContainer,\n      tracksNumberSelect,\n      btnPrevPage,\n      btnNextPage,\n      this.carsCtlsBlock,\n    );\n\n    bgVideo.onloadeddata = () => {\n      console.log('loaded');\n      this.controller.startWorking();\n    };\n    // bgVideo.play();\n\n    this.carsCtlsBlock.classList.add(styles['garage-bg__cars-ctls-block']);\n    bg.append(bgVideo, this.carsCtlsBlock, selfCtlsBlock);\n\n    this._rootElement.append(bg, tracksContainer);\n  }\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.controller);\n    int.attachSubHub(this.mainControlsComp);\n  }\n}\n","import { RegCarData, UnregCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { transitionPromise } from '../../../../lib/gui/animation';\nimport { OBJ_PROCESSOR } from '../../../../lib/processors/obj-processor';\nimport styles from './car.scss';\n\nexport class CarComp extends BaseComp {\n  static readonly TIMING_FUNCTION = 'cubic-bezier(.72,.2,.54,.77)';\n\n  static readonly CAR_BODY_IMG_SRC = './assets/imgs/cars/body.gif';\n\n  static readonly CAR_WHEEL_IMG_SRC = './assets/imgs/cars/tire back.gif';\n\n  static readonly CAR_EXPLOSION_IMG_DATA = {\n    BASE_URL: './assets/imgs/cars/explosion/',\n    EXTENSION: '.png',\n    FRAMES_COUNT: 9,\n    FRAME_TIME_MS: 200,\n  };\n\n  protected canvas = document.createElement('canvas');\n\n  protected tireBack = document.createElement('img');\n\n  private _btnSelect = document.createElement('button');\n\n  private _btnRm = document.createElement('button');\n\n  private _spanCarName = document.createElement('span');\n\n  private _btnIgnite = document.createElement('button');\n\n  private _btnStart = document.createElement('button');\n\n  private startDrivingTime: number | undefined;\n\n  private destinationCoordinate: number | undefined;\n\n  constructor(private _currCar: RegCarData) {\n    super('div');\n\n    this._rootElement.classList.add(styles['car-div']);\n    this.canvas.classList.add(styles['car-div__canvas']);\n    this._rootElement.append(this.canvas);\n\n    this._btnSelect.textContent = 'select';\n    this._btnRm.textContent = 'remove';\n    this._btnIgnite.textContent = 'start!';\n    this._btnStart.textContent = 'reset';\n\n    this.updateData(this.currCar);\n    this.redrawCar();\n    this.drawWheels();\n  }\n\n  private drawWheels() {\n    const wheelImg = new Image();\n    wheelImg.src = CarComp.CAR_WHEEL_IMG_SRC;\n    wheelImg.onload = () => {\n      wheelImg.classList.add(styles['car-div__wheel']);\n      const backwardWheelImg = OBJ_PROCESSOR.deepClone(wheelImg);\n      wheelImg.classList.add(styles['car-div__wheel_forward']);\n      backwardWheelImg.classList.add(styles['car-div__wheel_backward']);\n\n      this._rootElement.append(wheelImg);\n      this._rootElement.append(backwardWheelImg);\n    };\n  }\n\n  updateData(carData: RegCarData) {\n    this._currCar = carData;\n    this.redrawCar();\n    // this._rootElement.style.setProperty('background-color', carData.color);\n  }\n\n  public async rollBack(time: number) {\n    // const style = window.getComputedStyle(this._rootElement);\n    // const currXCoordinate = style.transform.split(',')[5];\n    this._rootElement.style.setProperty(\n      'transition',\n      `all ${time}s ${CarComp.TIMING_FUNCTION}`,\n    );\n    const arrived = await transitionPromise({\n      elem: this._rootElement,\n      prop: 'transform',\n      val: 'translateX(0px)',\n      valToWait: `matrix(1, 0, 0, 1, 0, 0)`,\n      // forceAutoresolveIn: time, /// !!! TODO: Replace with rej\n    });\n    console.log(arrived);\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n    return arrived;\n  }\n\n  public async rollForward(time: number, scaledTrackLength: number) {\n    const style = window.getComputedStyle(this.rootElement);\n    const carLengthCorrection = Number.parseFloat(style.width);\n    const finalLength = scaledTrackLength - carLengthCorrection;\n    console.log(carLengthCorrection);\n    this._rootElement.classList.add(styles['car-div_rollForward']);\n    this._rootElement.style.setProperty(\n      'transition',\n      `all ${time}s ${CarComp.TIMING_FUNCTION}`,\n    );\n    const arrived = await transitionPromise({\n      elem: this._rootElement,\n      prop: 'transform',\n      val: `translateX(${finalLength}px)`,\n      valToWait: `matrix(1, 0, 0, 1, ${finalLength}, 0)`,\n    });\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n    return arrived;\n  }\n\n  public stop(broken?: true, flags?: Record<string, unknown>) {\n    const style = window.getComputedStyle(this._rootElement);\n    const stopCoordinate = style.getPropertyValue('transform');\n    this.rootElement.style.setProperty('transform', stopCoordinate);\n    this.rootElement.style.setProperty('transition', '');\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n\n    if (broken) {\n      console.log(flags);\n      if (!flags?.isFinishVisible) {\n        this._rootElement.style.setProperty(\n          'transition',\n          `all ${2}s ${CarComp.TIMING_FUNCTION}`,\n        );\n        transitionPromise({\n          elem: this._rootElement,\n          prop: 'transform',\n          val: 'translateX(-500px)',\n          valToWait: `matrix(1, 0, 0, 1, 0, 0)`,\n          // forceAutoresolveIn: time, /// !!! TODO: Replace with rej\n        });\n      }\n\n      const img = new Image();\n      let frameNumber = 0;\n      img.classList.add(styles['car-div__explosion']);\n      img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n      img.onload = async () => {\n        this._rootElement.append(img);\n        await new Promise(res =>\n          setTimeout(res, CarComp.CAR_EXPLOSION_IMG_DATA.FRAME_TIME_MS),\n        );\n        frameNumber++;\n        if (frameNumber < CarComp.CAR_EXPLOSION_IMG_DATA.FRAMES_COUNT) {\n          img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n        } else {\n          img.remove();\n        }\n      };\n    }\n  }\n\n  public get currCar(): RegCarData {\n    return this._currCar;\n  }\n\n  public get btnSelect() {\n    return this._btnSelect;\n  }\n\n  public get btnRm() {\n    return this._btnRm;\n  }\n\n  public get btnIgnite() {\n    return this._btnIgnite;\n  }\n\n  public get btnStart() {\n    return this._btnStart;\n  }\n\n  public get spanCarName() {\n    return this._spanCarName;\n  }\n\n  private redrawCar() {\n    const img = new Image();\n    img.src = CarComp.CAR_BODY_IMG_SRC;\n    img.onload = () => {\n      const rootStyle = window.getComputedStyle(this._rootElement);\n      const canvasStyle = window.getComputedStyle(this.canvas);\n\n      // !!! TODO add min or max!\n      /*\n      this.canvas.height = Number.parseFloat(canvasStyle.height);\n      this.canvas.width =\n        this.canvas.height *\n        Number.parseFloat(rootStyle.getPropertyValue('--aspect-ratio').trim());\n        */\n      this.canvas.height = img.height;\n      this.canvas.width = img.width;\n      const ctx = this.canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.shadowColor = this._currCar.color;\n        ctx.shadowBlur = 80;\n        ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      }\n\n      this.repaint();\n    };\n  }\n\n  private repaint() {\n    const imageData = this.canvas\n      .getContext('2d')\n      ?.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    if (imageData) {\n      const rgb = this.hexToRgb(this._currCar.color);\n      for (let j = 0; j < imageData.width; j++) {\n        for (let i = 0; i < imageData.height; i++) {\n          // index: red, green, blue, alpha, red, green, blue, alpha..etc.\n          const index = i * 4 * imageData.width + j * 4;\n          const red = imageData.data[index] as number;\n          const green = imageData.data[index + 1] as number;\n          const blue = imageData.data[index + 2] as number;\n          // const alpha = imageData.data[index + 3] as number;\n\n          const blueDiff = 2 * blue - red - green;\n          const blueDiffThreshold = 10;\n          const threshold = 70;\n          if (\n            red > threshold &&\n            green > threshold &&\n            blue > threshold &&\n            blueDiff < blueDiffThreshold\n          ) {\n            imageData.data[index] = (red / 255) * rgb.r;\n            imageData.data[index + 1] = (green / 255) * rgb.g;\n            imageData.data[index + 2] = (blue / 255) * rgb.b;\n            // imageData.data[index + 3] = alpha;\n          }\n        }\n      }\n      this.canvas\n        .getContext('2d')\n        ?.putImageData(\n          imageData,\n          0,\n          0,\n          0,\n          0,\n          this.canvas.width,\n          this.canvas.height,\n        );\n    }\n  }\n\n  private hexToRgb = (hex: string): { r: number; g: number; b: number } => {\n    let c: string[];\n\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n      // c = hex.substring(1).split('');\n      c = hex.split('');\n      if (c.length === 4) {\n        c = [c[1], c[1], c[2], c[2], c[3], c[3]] as string[];\n      }\n      const r = Number.parseInt(hex.slice(1, 3), 16);\n      const g = Number.parseInt(hex.slice(3, 5), 16);\n      const b = Number.parseInt(hex.slice(5, 7), 16);\n      // return `rgb(${r}, ${g}, ${b})`;\n      return { r, g, b };\n    }\n    throw new Error('Bad Hex');\n  };\n}\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionCreatedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class CreateCompController extends CreateUpdateCompControllerProto {\n  private txs = new Set<DBusTX>();\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnCreate();\n  }\n\n  private setupBtnCreate() {\n    this.btn.addEventListener('click', () => {\n      this.btn.disabled = true;\n      // TODO: !!! add validity check!\n      const unregCar: UnregCarData = {\n        name: this.inputText.value,\n        color: this.inputColor.value,\n      };\n      REST_CLIENT_GARAGE.createCar(unregCar)\n        .then(car => {\n          // TODO: Notify with DBus\n          const msg = new DBusMsgCarActionCreatedMsg(car);\n          this.txs.forEach(tx => {\n            tx.transmit({\n              msg,\n              prepMode: DBusTXPrepModes.clone,\n              waitMode: DBusTXWaitModes.nowait,\n            });\n          });\n        })\n        .finally(() => {\n          this.btn.disabled = false;\n        });\n    });\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('send created car msgs');\n    this.txs.add(tx);\n  }\n}\n","import { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\n\nexport interface CreateUpdateCompControllerReqElems {\n  inputText: HTMLInputElement;\n  inputColor: HTMLInputElement;\n  btn: HTMLButtonElement;\n}\n\nexport abstract class CreateUpdateCompControllerProto implements DBusPort {\n  constructor(\n    protected inputText: HTMLInputElement,\n    protected inputColor: HTMLInputElement,\n    protected btn: HTMLButtonElement,\n  ) {}\n\n  abstract autoConnect(int: DBusInterface): void | Promise<void>;\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../../../lib/processors/obj-processor';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../../../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionSelectedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class UpdateCompController\n  extends CreateUpdateCompControllerProto\n  implements DBusPort\n{\n  private rxs: Set<DBusRX> = new Set();\n\n  private choosedCar: RegCarData | undefined;\n\n  private notifyCb: ((car: RegCarData) => unknown) | undefined;\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnUpdate();\n  }\n\n  autoConnect(int: DBusInterface) {\n    const rx = int.getNewRX(this.chooseCarListener, 'listen car choosing');\n    int.plugRX(DBusTopics.CAR_ACTION, rx);\n  }\n\n  private chooseCarListener = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgCarActionSelectedMsg) {\n      this.choosedCar = OBJ_PROCESSOR.deepClone(data.msg.car);\n      this.notifyCb = data.msg.notifyChanges;\n      this.inputColor.value = data.msg.car.color;\n      this.inputText.value = data.msg.car.name;\n      this.btn.disabled = false;\n    }\n  };\n\n  private setupBtnUpdate() {\n    this.btn.disabled = true;\n    this.btn.addEventListener('click', () => {\n      this.btn.disabled = true;\n      if (!this.choosedCar) return;\n      // TODO: !!! add validity check!\n      this.choosedCar.color = this.inputColor.value;\n      this.choosedCar.name = this.inputText.value;\n      REST_CLIENT_GARAGE.updateCar(this.choosedCar)\n        .then(car => {\n          if (this.notifyCb) this.notifyCb(car);\n        })\n        .finally(() => {\n          this.btn.disabled = false;\n        });\n    });\n  }\n}\n","import { BaseComp } from '../../../../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { CreateCompController } from './controller-create';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\nimport { UpdateCompController } from './controller-update';\n\nimport styles from './create-update.scss';\nimport sharedStyles from '../../../../../styles.scss';\n\nexport class CreateUpdateComponent extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.CREATE_UPDATE;\n\n  protected textInput = document.createElement('input');\n\n  protected colorInput = document.createElement('input');\n\n  protected btn = document.createElement('button');\n\n  protected controller: CreateUpdateCompControllerProto;\n\n  constructor(type: 'CREATE' | 'UPDATE', btnText: string) {\n    super('div');\n    this._rootElement.classList.add(styles.root);\n    this.textInput.type = 'text';\n    this.textInput.classList.add(styles['text-input']);\n    this.colorInput.type = 'color';\n    this.colorInput.classList.add(styles['color-input']);\n    this.btn.textContent = btnText;\n    this.btn.classList.add(sharedStyles.btn);\n    this._rootElement.append(this.textInput, this.colorInput, this.btn);\n\n    const elements: CreateUpdateCompControllerReqElems = {\n      inputText: this.textInput,\n      inputColor: this.colorInput,\n      btn: this.btn,\n    };\n\n    switch (type) {\n      case 'UPDATE':\n        this.controller = new UpdateCompController(elements);\n        break;\n      case 'CREATE':\n      default:\n        this.controller = new CreateCompController(elements);\n        break;\n    }\n  }\n\n  connect(int: DBusInterface) {\n    this.controller.autoConnect(int);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CreateUpdateComponent } from './create-update/create-update';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from '../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport { DBusMsgRaceRequestMsg } from '../../dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusMsgGarageResetReqMsg } from '../../dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './main-controls.scss';\nimport sharedStyles from '../../../../styles.scss';\nimport { REST_CLIENT_GARAGE } from '../../../../services/rest-clients/client-garage/rest-client-garage';\nimport {\n  CAR_MODEL_LIST,\n  CAR_MODEL_LIST_KEYS,\n} from '../../../../definitions/car-random-data.def';\nimport {\n  getRandomArbitraryInt,\n  getRandomInt,\n} from '../../../../lib/generators/generators';\nimport {\n  UnregCarData,\n  WinnerCarData,\n} from '../../../../definitions/car-data.def';\nimport { REST_CLIENT_WINNERS } from '../../../../services/rest-clients/client-winners/rest-client-winners';\n\nexport class MainControlsComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.MAIN_CONTROLS;\n\n  private createComponent = new CreateUpdateComponent('CREATE', 'create');\n\n  private updateComponent = new CreateUpdateComponent('UPDATE', 'update');\n\n  private btnRace = document.createElement('button');\n\n  private btnReset = document.createElement('button');\n\n  private btnGenerate = document.createElement('button');\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles['main-controls']);\n\n    const btnsBlock = this.renderBtns();\n\n    this._rootElement.append(\n      this.createComponent.rootElement,\n      this.updateComponent.rootElement,\n      btnsBlock,\n    );\n\n    this.btnGenerate.addEventListener('click', async () => {\n      this.btnGenerate.disabled = true;\n      await this.generate(100);\n      this.btnGenerate.disabled = false;\n    });\n  }\n\n  private renderBtns(): HTMLElement {\n    // setip btns\n    const span = document.createElement('span');\n    span.textContent = 'race';\n    this.btnRace.append(span);\n    this.btnRace.classList.add(sharedStyles.btn, sharedStyles['btn-15']);\n    this.btnReset.textContent = 'reset';\n    this.btnReset.classList.add(sharedStyles.btn);\n    this.btnGenerate.textContent = 'generate cards';\n    this.btnGenerate.classList.add(sharedStyles.btn);\n\n    const btnBlock = document.createElement('div');\n    btnBlock.classList.add(styles['btn-block']);\n    btnBlock.append(this.btnRace, this.btnReset, this.btnGenerate);\n    return btnBlock;\n  }\n\n  private async generate(n: number): Promise<boolean> {\n    let genLeft = n;\n    const randomName = this.genRandomCarName();\n    const color = '#234131';\n    const unregCarData: UnregCarData = {\n      name: randomName,\n      color,\n    };\n    const car = await REST_CLIENT_GARAGE.createCar(unregCarData);\n    const winner: WinnerCarData = {\n      id: car.id,\n      wins: getRandomArbitraryInt(1, 3),\n      time: Number.parseFloat((getRandomArbitraryInt(40, 50) / 3).toFixed(2)),\n    };\n    await REST_CLIENT_WINNERS.createWinner(winner);\n    genLeft--;\n    if (genLeft > 0) return this.generate(genLeft);\n    return true;\n  }\n\n  private genRandomCarName = (): string => {\n    const manufacturerNumber = getRandomInt(CAR_MODEL_LIST_KEYS.length - 1);\n    const manufacturerName = CAR_MODEL_LIST_KEYS[\n      manufacturerNumber\n    ] as keyof typeof CAR_MODEL_LIST;\n    const models = CAR_MODEL_LIST[manufacturerName];\n    const modelNumber = getRandomInt(models.length - 1);\n    const modelName = models[modelNumber] as string;\n    return `${manufacturerName} ${modelName}`;\n  };\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.createComponent, 'cu_create');\n    int.attachSubHub(this.updateComponent, 'cu_delete');\n\n    const tx = int.getNewTX('start race');\n    this.btnRace.addEventListener('click', async () => {\n      const msg = new DBusMsgRaceRequestMsg();\n      const response = await tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      console.log(response);\n    });\n    this.btnReset.addEventListener('click', async () => {\n      const msg = new DBusMsgGarageResetReqMsg();\n      const response = await tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      console.log(response);\n    });\n  }\n}\n","import { RegCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../car/car';\n\nimport styles from './track.scss';\n\nexport class TrackComp extends BaseComp {\n  static readonly CAR_GRID_COLUMN_NUMBER = 0;\n\n  private topBlock = document.createElement('div');\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles.track);\n    this._rootElement.append();\n    this.topBlock.classList.add(styles['track__controls-block']);\n\n    this.rootElement.style.setProperty(\n      '--width-factor',\n      `${window.innerWidth / 1920}`,\n    );\n    window.addEventListener('resize', () => {\n      this.rootElement.style.setProperty(\n        '--width-factor',\n        `${window.innerWidth / 1920}`,\n      );\n    });\n  }\n\n  placeCar(carComp: CarComp) {\n    if (this._rootElement.hasChildNodes()) {\n      this._rootElement.childNodes.forEach(child => child.remove());\n    }\n    this.topBlock.append(carComp.spanCarName);\n    this._rootElement.append(this.topBlock, carComp.rootElement);\n  }\n\n  getTrackLength(): number {\n    const style = window.getComputedStyle(this._rootElement);\n    const gridColumnSizesArr = style.gridTemplateColumns.split(' ');\n    const carColumnWidth = gridColumnSizesArr[TrackComp.CAR_GRID_COLUMN_NUMBER];\n    if (!carColumnWidth) throw new Error('STYLES ARE BROKEN');\n    console.log(carColumnWidth);\n    const length = Number.parseFloat(carColumnWidth);\n    return length;\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBus } from '../../lib/services/dbus/dbus';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgRouteIsChangedMsg } from '../../lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport styles from './header.scss';\nimport { NavItem } from './subcomps/nav-item/nav-item';\n\nexport class HeaderComponent extends BaseComp implements DBusHub {\n  private navContainer: HTMLElement;\n\n  private logo: HTMLElement;\n\n  protected anchors: HTMLAnchorElement[];\n\n  protected buses: DBus[] = [];\n\n  constructor(readonly hubName: DBusHubNamesList = DBUS_HUB_NAMES.HEADER) {\n    super('header');\n    this.rootElement.classList.add(styles.header);\n\n    // logo\n    this.logo = document.createElement('h1');\n    this.logo.classList.add(styles.header__logo);\n    const firstSpan = document.createElement('span');\n    firstSpan.textContent = 'async';\n    const secondSpan = document.createElement('span');\n    secondSpan.textContent = 'race';\n    this.logo.append(firstSpan, secondSpan);\n    this.rootElement.append(this.logo);\n\n    // nav\n    this.navContainer = document.createElement('nav');\n    this.navContainer.classList.add(styles['header-nav']);\n    this.rootElement.append(this.navContainer);\n\n    // ul\n    const ul = document.createElement('ul');\n    ul.classList.add(styles['header-nav__list']);\n    this.navContainer.append(ul);\n\n    // ul items\n    const classList = {\n      li: styles['header-nav__item'],\n      a: styles['header-nav__anchor'],\n      svg: styles['header-nav__svg'],\n      span: styles['header-nav__span'],\n    };\n\n    const garageNavItem = new NavItem('garage', '#garage', classList);\n    const winnersNavItem = new NavItem('winners', '#winners', classList);\n\n    const navItems = [garageNavItem, winnersNavItem];\n    this.anchors = navItems.map(item => item.anchor);\n\n    ul.append(...navItems.map(item => item.rootElement));\n  }\n\n  connect(int: DBusInterface) {\n    const illuminateRX = int.getNewRX(\n      this.illuminateNavItem,\n      'illuminate nav items',\n    );\n    int.plugRX(DBusTopics.ROUTING, illuminateRX);\n  }\n\n  private illuminateNavItem = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      this.anchors.forEach(anchor => {\n        if (anchor.getAttribute('href') === msg.newRoute) {\n          anchor.classList.add(styles['header-nav__anchor_active']);\n        } else {\n          anchor.classList.remove(styles['header-nav__anchor_active']);\n        }\n      });\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\n\nexport interface NavItemStyles {\n  li?: string;\n  a?: string;\n  svg?: string;\n  span?: string;\n}\n\nexport class NavItem extends BaseComp {\n  private _anchor: HTMLAnchorElement;\n\n  protected iconImage: HTMLImageElement | undefined;\n\n  protected span: HTMLSpanElement;\n\n  constructor(\n    text: string,\n    href: string,\n    styles?: NavItemStyles,\n    iconSrc?: string,\n  ) {\n    super('li');\n\n    if (styles?.li) this._rootElement.classList.add(styles.li);\n    this._anchor = document.createElement('a');\n    this._anchor.setAttribute('href', href);\n\n    if (styles?.a) this._anchor.classList.add(styles.a);\n\n    if (iconSrc) {\n      this.iconImage = document.createElement('img');\n      this.iconImage.src = iconSrc;\n\n      if (styles?.svg) this.iconImage.classList.add(styles.svg);\n      this._anchor.append(this.iconImage);\n    }\n    this.span = document.createElement('span');\n    this.span.textContent = text;\n\n    if (styles?.span) this.span.classList.add(styles.span);\n    this._anchor.append(this.span);\n\n    this.rootElement.append(this._anchor);\n  }\n\n  get anchor(): HTMLAnchorElement {\n    return this._anchor;\n  }\n}\n","import { UnregCarData, WinnerCarData } from '../../../definitions/car-data.def';\nimport { BaseComp } from '../../../lib/components/base-comp/base-comp';\n\nexport class WinnerRowComp extends BaseComp {\n  private idElem = document.createElement('td');\n\n  private carElem = document.createElement('td');\n\n  private nameElem = document.createElement('td');\n\n  private winsElem = document.createElement('td');\n\n  private bestTimeElem = document.createElement('td');\n\n  constructor(winnerData: WinnerCarData, carData: UnregCarData) {\n    super('tr');\n\n    this.idElem.textContent = winnerData.id.toString();\n    // this.carElem.textContent = new CarComp()\n    this.nameElem.textContent = carData.name;\n    this.winsElem.textContent = winnerData.wins.toString();\n    this.bestTimeElem.textContent = winnerData.time.toString();\n\n    this._rootElement.append(\n      this.idElem,\n      this.carElem,\n      this.nameElem,\n      this.winsElem,\n      this.bestTimeElem,\n    );\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport {\n  RestClientWinnersSortOptionsList,\n  REST_CLIENT_WINNERS_SORT_OPTIONS,\n} from '../../services/rest-clients/client-winners/rest-client-winners.def';\nimport { WinnerRowComp } from './subcomps/winner-entry';\nimport { Pager } from '../../lib/services/pager/pager';\n\nimport styles from './winners.scss';\nimport sharedStyles from '../../styles.scss';\n\nexport class WinnersComp extends BaseComp {\n  static readonly TEXT_CONTENT_ENG = {};\n\n  private table = document.createElement('table');\n\n  private tableBody = document.createElement('tbody');\n\n  private tableHead = document.createElement('thead');\n\n  private thId = document.createElement('th');\n\n  private thCar = document.createElement('th');\n\n  private thName = document.createElement('th');\n\n  private thWins = document.createElement('th');\n\n  private thBestTime = document.createElement('th');\n\n  private currSortedElem: HTMLElement | undefined;\n\n  private pager: Pager;\n\n  private currOrder: 'ASC' | 'DESC' = 'DESC';\n\n  private currSort: RestClientWinnersSortOptionsList = 'wins';\n\n  private entriesPerPage = 10;\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.winners);\n    this._rootElement.style.setProperty(\n      'background-image',\n      `url('./assets/imgs/backgrounds/winners/anime-girl-cyberpunk-ride-4k-lx-2880x1800.jpg')`,\n    );\n\n    const pagerBtnsContainer = document.createElement('div');\n    pagerBtnsContainer.classList.add(styles.pager);\n\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    const btnNextPage = this.pager.getBtnNextPage();\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n    btnNextPage.classList.add(sharedStyles.btn);\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n\n    pagerBtnsContainer.append(btnPrevPage, btnNextPage);\n\n    const pagerSpan = this.pager.getPagerSpan();\n\n    pagerSpan.classList.add(styles['pager-span']);\n\n    this.table.append(\n      this.tableHead,\n      this.tableBody,\n      pagerBtnsContainer,\n      pagerSpan,\n    );\n    this.table.classList.add(styles.table);\n\n    this._rootElement.append(this.table);\n\n    this.renderHeader();\n    this.refillTable().then(() => this.refreshTableHeader(this.thBestTime));\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.refillTable(undefined, undefined, dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  private renderHeader() {\n    const tr = document.createElement('tr');\n\n    this.thId.textContent = 'ID';\n    this.thId.classList.add(styles['table__can-be-sorted']);\n    this.thCar.textContent = 'CAR';\n    this.thName.textContent = 'NAME';\n    this.thWins.textContent = 'WINS';\n    this.thWins.classList.add(styles['table__can-be-sorted']);\n    this.thBestTime.textContent = 'BEST TIME';\n    this.thBestTime.classList.add(styles['table__can-be-sorted']);\n\n    tr.append(this.thId, this.thCar, this.thName, this.thWins, this.thBestTime);\n    this.tableHead.append(tr);\n    this.tableHead.addEventListener('click', this.tableHeadClickListener);\n  }\n\n  private async refillTable(\n    specialSort?: RestClientWinnersSortOptionsList,\n    specialOrder?: 'ASC' | 'DESC',\n    dir?: 'prev' | 'next',\n  ) {\n    return new Promise((res, rej) => {\n      while (this.tableBody.firstChild) this.tableBody.firstChild.remove();\n\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : this.pager.getCurrPageNumber() - 1\n        : 1;\n      const order = specialOrder || this.currOrder;\n      const sort = specialSort || this.currSort;\n\n      REST_CLIENT_WINNERS.getWinners(page, 10, sort, order).then(response => {\n        this.pager.setEntriesCount(Number.parseInt(response.limit, 10));\n        if (response.cars.length === 0) rej();\n        response.cars.forEach(winner => {\n          REST_CLIENT_GARAGE.getCar(winner.id).then(car => {\n            const row = new WinnerRowComp(winner, car);\n            this.tableBody.append(row.rootElement);\n            res(true);\n          });\n        });\n      });\n    });\n  }\n\n  private tableHeadClickListener = async (e: Event) => {\n    let sort: RestClientWinnersSortOptionsList | undefined;\n    switch (e.target) {\n      case this.thId:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.id;\n        break;\n      case this.thWins:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.wins;\n        break;\n      case this.thBestTime:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.time;\n        break;\n      default:\n        break;\n    }\n    if (sort) {\n      // TODO: block pager\n      const elem = e.target as HTMLElement;\n      this.currOrder = elem.classList.contains(\n        styles['table__sorted-elem_desc'],\n      )\n        ? 'ASC'\n        : 'DESC';\n      this.currSort = sort;\n      await this.refillTable();\n      this.refreshTableHeader(elem);\n    }\n  };\n\n  private refreshTableHeader = (elem: HTMLElement) => {\n    if (this.currSortedElem)\n      this.currSortedElem.classList.remove(styles['table__sorted-elem']);\n\n    elem.classList.add(styles['table__sorted-elem']);\n    this.currSortedElem = elem;\n\n    if (this.currOrder === 'ASC') {\n      elem.classList.remove(styles['table__sorted-elem_desc']);\n      elem.classList.add(styles['table__sorted-elem_asc']);\n    } else {\n      elem.classList.remove(styles['table__sorted-elem_asc']);\n      elem.classList.add(styles['table__sorted-elem_desc']);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../lib/processors/obj-processor';\n\nconst models = {\n  Lamborghini: [\n    'Murci√©lago',\n    '350 GT',\n    '400 GT',\n    'Si√°n FKP 37',\n    'Essenza SCV12',\n    'Urus',\n    'Centenario',\n    'Hurac√°n',\n    'Veneno',\n    'Sesto Element–æ',\n    'Aventador',\n    'Revent√≥n',\n    'Gallardo',\n    'Diablo',\n    'LM002',\n    'Jalpa',\n    'Silhouette',\n    'Countach',\n    'Urraco',\n    'Jarama',\n    'Islero',\n    'Espada',\n    'Miura',\n  ],\n  'Aston Martin': [\n    'Project 003',\n    'Valkyrie',\n    'DBS',\n    'Vanquish Zagato',\n    'Vanquish',\n    'Virage/Virage Volante',\n    'V12 Zagato',\n    'One-77',\n    'V8 Coupe/V8 Volante',\n    'V8 Zagato',\n  ],\n  Ferrari: [\n    'Roma',\n    'Portfolio',\n    '488 GTB',\n    'California T',\n    '360 Spider',\n    '355 F1 Berlinetta',\n    'F355 GTS',\n    '456 GT',\n    'Testarossa',\n    'SF1000',\n  ],\n  Koenigsegg: [\n    'Jesko Absolut',\n    'Jesko',\n    'Agera Final',\n    'Agera XS',\n    'Agera X',\n    'Agera S',\n    'Regera',\n    'Agera RS',\n    'One:1',\n    'CCGT',\n  ],\n};\n\nconst CAR_MODEL_LIST = OBJ_PROCESSOR.deepFreeze(models);\n\nexport { CAR_MODEL_LIST };\n\nconst CAR_MODEL_LIST_KEYS = OBJ_PROCESSOR.deepFreeze(\n  Object.keys(CAR_MODEL_LIST),\n);\n\nexport { CAR_MODEL_LIST_KEYS };\n","export class BaseComp {\n  protected _rootElement: HTMLElement;\n\n  constructor(tag: keyof HTMLElementTagNameMap = 'div') {\n    this._rootElement = document.createElement(tag);\n  }\n\n  public get rootElement(): HTMLElement {\n    return this._rootElement;\n  }\n}\n","export function genUniqId(): string {\n  const arr = new Uint8Array(4);\n  return window.crypto.getRandomValues(arr).join('');\n}\n\nexport function getRandomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n\nexport function getRandomArbitraryInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n","export interface TransitionPromiseInterface {\n  elem: HTMLElement;\n  prop: string;\n  val?: string;\n  valToWait?: string;\n  forceAutoresolveIn?: number;\n}\n\nexport function transitionPromise(\n  params: TransitionPromiseInterface,\n): Promise<boolean> {\n  return new Promise(resolve => {\n    const transformAndAutoresolve = (delay?: number): void => {\n      if (params.val) params.elem.style.setProperty(params.prop, params.val);\n      const time = delay || 20;\n      setTimeout(() => {\n        resolve(true);\n        // doesn't work - for cause look forward\n        // window.getComputedStyle(elem)[prop] == val ? resolve(true) : resolve(false);\n      }, time);\n    };\n\n    const transformAndWaitEvent = () => {\n      const eventHandler = (e: TransitionEvent): void => {\n        if (e.target !== params.elem) return;\n\n        if (e.propertyName !== params.prop) return;\n\n        if (\n          params.valToWait &&\n          window.getComputedStyle(params.elem).getPropertyValue(params.prop) !==\n            params.valToWait\n        ) {\n          return;\n        }\n\n        params.elem.removeEventListener('transitionend', eventHandler);\n        params.elem.removeEventListener('transitionend', eventHandler);\n\n        // val should be equal to style ! For example translate != matrix...\n        // if(val) window.getComputedStyle(elem)[prop] == val ? resolve(true) : reject(false);\n        // else\n        resolve(true);\n      };\n\n      params.elem.addEventListener('transitionend', eventHandler);\n      params.elem.addEventListener('transitioncancel', eventHandler);\n\n      if (params.val) params.elem.style.setProperty(params.prop, params.val);\n    };\n\n    if (params.forceAutoresolveIn)\n      transformAndAutoresolve(params.forceAutoresolveIn);\n    else if (\n      params.valToWait &&\n      window.getComputedStyle(params.elem).getPropertyValue(params.prop) ===\n        params.valToWait\n    )\n      transformAndAutoresolve();\n    else {\n      const transPropArr = window\n        .getComputedStyle(params.elem)\n        .getPropertyValue('transition-property')\n        .replace(',', '')\n        .split(' ');\n      let propIndex = transPropArr.lastIndexOf(params.prop);\n\n      if (propIndex === -1) propIndex = transPropArr.lastIndexOf('all');\n\n      if (propIndex !== -1) {\n        const transDurationsArr = window\n          .getComputedStyle(params.elem)\n          .getPropertyValue('transition-duration')\n          .replace(',', '')\n          .split(' ');\n\n        if (transDurationsArr[propIndex] === '0s') {\n          transformAndAutoresolve();\n        } else {\n          transformAndWaitEvent();\n        }\n      } else transformAndAutoresolve();\n    }\n  });\n}\n","class ObjProcessor {\n  readonly deepFreeze = <T>(obj: T): T => {\n    if (typeof obj === 'object' && obj !== null) {\n      const record = obj as Record<string, unknown>;\n      Object.keys(record).forEach(prop => {\n        if (\n          typeof record[prop] === 'object' &&\n          !Object.isFrozen(record[prop])\n        ) {\n          this.deepFreeze(record[prop]);\n        }\n      });\n      return Object.freeze(obj);\n    }\n    throw new Error('not object');\n  };\n\n  readonly deepClone = <T>(target: T): T => {\n    if (Array.isArray(target)) {\n      const clone = [] as unknown[];\n      (target as unknown[]).forEach(v => {\n        clone.push(v);\n      });\n      return clone.map((n: unknown) => this.deepClone(n)) as unknown as T;\n    }\n\n    if (typeof target === 'object' && target !== null) {\n      if (target instanceof HTMLElement)\n        return target.cloneNode(true) as unknown as T;\n      if (target instanceof Blob) return target.slice() as unknown as T;\n      const clone = {\n        ...(target as unknown as { [key: string]: unknown }),\n      } as {\n        [key: string]: unknown;\n      };\n      Object.keys(clone).forEach(k => {\n        clone[k] = this.deepClone(clone[k]);\n      });\n      Object.setPrototypeOf(clone, Object.getPrototypeOf(target));\n      return clone as unknown as T;\n    }\n    return target;\n  };\n}\n\nconst OBJ_PROCESSOR = new ObjProcessor();\nOBJ_PROCESSOR.deepFreeze(OBJ_PROCESSOR);\nexport { OBJ_PROCESSOR };\n","import { DBusTopics } from './defs/dbus-topics.def';\nimport { genUniqId } from '../../generators/generators';\nimport { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_ERRORS } from './defs/dbus-errors.def';\nimport { DBusRX, DBusRXFunc } from './defs/dbus-rx/dbus-rx.def';\nimport { DBusTX } from './defs/dbus-tx/dbus-tx.def';\nimport { DBusTXOptions } from './defs/dbus-tx/dbus-tx-options.def';\nimport { DBusTXData } from './defs/dbus-tx/dbus-tx-data.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from './defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTXDataHeaders } from './defs/dbus-tx/dbus-tx-data-headers.def';\nimport { DBusHub, DBusInterface } from './defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './defs/dbus-hub-names.def';\n\nexport class DBus {\n  private network: Map<DBusTopics, Set<DBusRX>> = new Map();\n\n  private idCounter = {\n    txs: 0,\n    rxs: 0,\n  };\n\n  private createdRXs = new Set<DBusRX>();\n\n  private createdTXs = new Set<DBusTX>();\n\n  private attachedHubs = new Map<DBusHub, DBusInterface>();\n\n  private occupiedNames = new Set<string>();\n\n  readonly busId: string;\n\n  constructor() {\n    this.busId = genUniqId();\n    return Object.freeze(this) as unknown as DBus;\n  }\n\n  public attachHub(hub: DBusHub, suffix?: string): void | Promise<void> {\n    return this.createInterfaceForHub(hub, undefined, suffix);\n  }\n\n  private createInterfaceForHub(\n    hub: DBusHub,\n    prefix?: string,\n    suffix?: string,\n  ): void | Promise<void> {\n    if (this.attachedHubs.has(hub))\n      throw new Error(DBUS_ERRORS.HUB_IS_ALREADY_ATTACHED);\n\n    if (!(hub.hubName in DBUS_HUB_NAMES))\n      throw new Error(DBUS_ERRORS.HUB_NAME_NOT_AUTHORIZED);\n\n    let hubName = prefix ? `${prefix}_${hub.hubName}` : hub.hubName;\n    if (suffix) hubName += `_${suffix}`;\n\n    if (this.occupiedNames.has(hubName))\n      throw new Error(DBUS_ERRORS.HUB_NAME_IS_OCCUPIED);\n\n    const arrowedGetNewTX = (desc?: string) => this.getNewTX(hubName, desc);\n    const arrowedGetNewRX = (func: DBusRXFunc, desc?: string) =>\n      this.genNewRX(func, desc);\n    const arrowedPlugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.plugRX(topic, rx);\n    const arrowedUnplugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.unplugRX(topic, rx);\n    const decoratedAttachHub = (subHub: DBusHub, subSuffix?: string) =>\n      this.createInterfaceForHub(subHub, hubName, subSuffix);\n\n    const dbusInterface = new DBusInterface(\n      arrowedGetNewTX,\n      arrowedGetNewRX,\n      arrowedPlugRX,\n      arrowedUnplugRX,\n      decoratedAttachHub,\n    );\n\n    this.occupiedNames.add(hubName);\n    this.attachedHubs.set(hub, dbusInterface);\n\n    OBJ_PROCESSOR.deepFreeze(dbusInterface);\n\n    return hub.connect(dbusInterface);\n  }\n\n  private getNewTX(hubName: string, desc?: string): DBusTX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.txs++;\n\n    const arrowedTransmit = async (opts: DBusTXOptions) => {\n      const head = new DBusTXDataHeaders(\n        hubName,\n        id,\n        regNumber,\n        opts.waitMode,\n        opts.prepMode,\n        desc,\n      );\n      const data = new DBusTXData(head, opts.msg);\n      const result = await this.transmit(data);\n      return result;\n    };\n\n    const tx = new DBusTX(regNumber, id, this.busId, arrowedTransmit);\n\n    const freezedTX = OBJ_PROCESSOR.deepFreeze(tx);\n\n    this.createdTXs.add(freezedTX);\n\n    return freezedTX;\n  }\n\n  private genNewRX(func: DBusRXFunc, desc?: string): DBusRX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.rxs++;\n    const rx = new DBusRX(regNumber, id, this.busId, func, desc);\n    const freezedRX = OBJ_PROCESSOR.deepFreeze(rx);\n    this.createdRXs.add(freezedRX);\n    return freezedRX;\n  }\n\n  private plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.createdRXs.has(rx)) throw new Error(DBUS_ERRORS.XENO_RX);\n    if (!this.network.has(topic)) this.network.set(topic, new Set());\n    this.network.get(topic)?.add(rx);\n  }\n\n  private unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.network.get(topic)?.delete(rx);\n  }\n\n  private async transmit(data: DBusTXData): Promise<unknown> {\n    if (!this.network.has(data.msg.topic)) {\n      throw new Error(DBUS_ERRORS.TOPIC_IS_NOT_EXIST);\n    }\n\n    const rxs = this.network.get(data.msg.topic);\n\n    if (rxs === undefined || rxs.size === 0)\n      throw new Error(DBUS_ERRORS.TOPIC_HAS_NO_RXS);\n\n    let choosedRXs: DBusRX[] = [];\n\n    if (data.msg.prefResponseRxIds) {\n      rxs.forEach(rx => {\n        if (data.msg.prefResponseRxIds?.includes(rx.id)) choosedRXs.push(rx);\n      });\n      if (choosedRXs.length === 0)\n        throw new Error(DBUS_ERRORS.PREF_RXS_ARE_NOT_EXIST);\n    } else choosedRXs = [...rxs];\n\n    let result;\n    switch (data.headers.waitMode) {\n      case DBusTXWaitModes.all:\n        result = await Promise.all(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.allSetled:\n        result = await Promise.allSettled(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.manual:\n        result = choosedRXs;\n        break;\n      case DBusTXWaitModes.nowait:\n      default:\n        choosedRXs.map(rx => this.callRXFunc(data, rx));\n        result = true;\n        break;\n    }\n    return result;\n  }\n\n  private callRXFunc = (data: DBusTXData, rx: DBusRX) => {\n    const handleClone = () => {\n      const clonedData = OBJ_PROCESSOR.deepClone(data);\n      return rx.func(clonedData);\n    };\n\n    const handleFreeze = () => {\n      const freezedData = OBJ_PROCESSOR.deepFreeze(data);\n      return rx.func(freezedData);\n    };\n\n    switch (data.headers.prepMode) {\n      case DBusTXPrepModes.clone:\n        return handleClone();\n      case DBusTXPrepModes.freeze:\n        return handleFreeze();\n      default:\n        throw new Error(DBUS_ERRORS.UNEXPECTED_PREP_MODE);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusCommonResponses = {\n  VOID: 'VOID',\n  BAD_REQUEST: 'BAD_REQUEST',\n};\n\nconst DBUS_COMMON_RESPONSES = OBJ_PROCESSOR.deepFreeze(dbusCommonResponses);\n\nexport { DBUS_COMMON_RESPONSES };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusErrors = {\n  HUB_NAME_IS_OCCUPIED: 'HUB_NAME_IS_OCCUPIED',\n  HUB_IS_ALREADY_ATTACHED: 'HUB_IS_ALREADY_ATTACHED',\n  HUB_NAME_NOT_AUTHORIZED: 'HUB_NAME_NOT_AUTHORIZED',\n  XENO_RX: 'XENO_RX',\n  TOPIC_IS_NOT_EXIST: 'TOPIC_IS_NOT_EXIST',\n  TOPIC_HAS_NO_RXS: 'TOPIC_HAS_NO_RXS',\n  PREF_RXS_ARE_NOT_EXIST: 'PREF_RXS_ARE_NOT_EXIST',\n  UNEXPECTED_PREP_MODE: 'UNEXPECTED_PREP_MODE',\n};\n\nconst DBUS_ERRORS = OBJ_PROCESSOR.deepFreeze(dbusErrors);\n\nexport { DBUS_ERRORS };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nclass DBusHubNames {\n  readonly APP = 'APP';\n\n  readonly ROUTER = 'ROUTER';\n\n  readonly GARAGE = 'GARAGE';\n\n  readonly HEADER = 'HEADER';\n\n  readonly MAIN_CONTROLS = 'MAIN_CONTROLS';\n\n  readonly CREATE_UPDATE = 'CREATE_UPDATE';\n\n  readonly GARAGE_CONTROLLER = 'GARAGE_CONTROLLER';\n}\n\nconst obj = new DBusHubNames();\n\nconst DBUS_HUB_NAMES = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { DBUS_HUB_NAMES };\n\nexport type DBusHubNamesList = keyof DBusHubNames;\n","import { DBusHubNamesList, DBUS_HUB_NAMES } from './dbus-hub-names.def';\nimport { DBusRX, DBusRXFunc } from './dbus-rx/dbus-rx.def';\nimport { DBusTopics } from './dbus-topics.def';\nimport { DBusTX } from './dbus-tx/dbus-tx.def';\n\nexport interface DBusHub {\n  readonly hubName: DBusHubNamesList;\n  connect: (dbusInterface: DBusInterface) => void | Promise<void>;\n}\n\nexport function isDBusHub(object: unknown): object is DBusHub {\n  const objAsRecord = object as Record<string, unknown>;\n  return (\n    'connect' in objAsRecord &&\n    'hubName' in objAsRecord &&\n    typeof objAsRecord.hubName === 'string' &&\n    objAsRecord.hubName in DBUS_HUB_NAMES\n  );\n}\n\nexport class DBusInterface {\n  private RXs = new Set<DBusRX>();\n\n  private TXs = new Set<DBusTX>();\n\n  private RXsPlugMap = new Map<DBusTopics, Set<DBusRX>>();\n\n  constructor(\n    private readonly arrowedGetNewTX: (desc?: string) => DBusTX,\n    private readonly arrowedGetNewRX: (\n      func: DBusRXFunc,\n      desc?: string,\n    ) => DBusRX,\n    private readonly arrowedPlugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    private readonly arrowedUnplugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    public readonly attachSubHub: (\n      subHub: DBusHub,\n      subSuffix?: string,\n    ) => void | Promise<void>,\n  ) {}\n\n  getNewRX(func: DBusRXFunc, desc?: string) {\n    const rx = this.arrowedGetNewRX(func, desc);\n    this.RXs.add(rx);\n    return rx;\n  }\n\n  getNewTX(desc?: string) {\n    const tx = this.arrowedGetNewTX(desc);\n    this.TXs.add(tx);\n    return tx;\n  }\n\n  plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.RXsPlugMap.has(topic)) this.RXsPlugMap.set(topic, new Set());\n    this.RXsPlugMap.get(topic)?.add(rx);\n    this.arrowedPlugRX(topic, rx);\n  }\n\n  unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.RXsPlugMap.get(topic)?.delete(rx);\n    this.arrowedUnplugRX(topic, rx);\n  }\n}\n","import { DBusTXData } from '../dbus-tx/dbus-tx-data.def';\n\nexport type DBusRXFunc = (data: DBusTXData) => Promise<unknown>;\n\nexport class DBusRX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly func: DBusRXFunc,\n    readonly desc?: string,\n  ) {}\n}\n","export enum DBusTopics {\n  ROUTING,\n  CAR_ACTION,\n  GARAGE,\n  REST_CLIENT_REQUESTS,\n}\n","import { DBusTXPrepModes, DBusTXWaitModes } from './dbus-tx-modes.def';\n\nexport class DBusTXDataHeaders {\n  constructor(\n    readonly hubName: string,\n    readonly txId: string,\n    readonly txRegNumber: number,\n    readonly waitMode: DBusTXWaitModes,\n    readonly prepMode: DBusTXPrepModes,\n    readonly txDesc?: string,\n  ) {}\n}\n","import { DBusMsg } from '../msgs/dbus-msg.def';\nimport { DBusTXDataHeaders } from './dbus-tx-data-headers.def';\n\nexport class DBusTXData {\n  constructor(readonly headers: DBusTXDataHeaders, readonly msg: DBusMsg) {}\n}\n","export enum DBusTXWaitModes {\n  nowait,\n  all,\n  allSetled,\n  manual,\n}\n\nexport enum DBusTXPrepModes {\n  clone,\n  freeze,\n}\n","import { DBusTXOptions } from './dbus-tx-options.def';\n\nexport class DBusTX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly transmit: (options: DBusTXOptions) => Promise<unknown>,\n  ) {}\n}\n","import { DBusTopics } from '../dbus-topics.def';\n\nexport abstract class DBusMsg {\n  constructor(\n    readonly topic: DBusTopics,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {}\n}\n","export class Pager {\n  private firstPageNumber = 1;\n\n  private currPageNumber = this.firstPageNumber;\n\n  private lastPageNumber = 0;\n\n  private btnNextPage = document.createElement('button');\n\n  private btnPrevPage = document.createElement('button');\n\n  private pagerSpan = document.createElement('span');\n\n  private entriesCount = 0;\n\n  private callbackIsCalled = false;\n\n  constructor(\n    private entriesPerPage: number,\n    protected readonly listCallback: (dir: 'prev' | 'next') => Promise<boolean>,\n  ) {\n    const btnNextSpan = document.createElement('span');\n    btnNextSpan.textContent = 'Next page';\n    this.btnNextPage.append(btnNextSpan);\n\n    const btnPrevSpan = document.createElement('span');\n    btnPrevSpan.textContent = 'Prev page';\n    this.btnPrevPage.append(btnPrevSpan);\n\n    this.btnNextPage.addEventListener('click', () => this.callCallback('next'));\n    this.btnPrevPage.addEventListener('click', () => this.callCallback('prev'));\n  }\n\n  public setLastPageNumber(n: number) {\n    this.lastPageNumber = n;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public setEntriesCount(n: number) {\n    this.entriesCount = n;\n    this.lastPageNumber = Math.ceil(this.entriesCount / this.entriesPerPage);\n    this.pagerSpan.textContent = `Entries: ${n}`;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public getCurrPageNumber() {\n    return this.currPageNumber;\n  }\n\n  public getBtnPrevPage(): HTMLSpanElement {\n    return this.btnPrevPage;\n  }\n\n  public getBtnNextPage(): HTMLSpanElement {\n    return this.btnNextPage;\n  }\n\n  public getPagerSpan(): HTMLSpanElement {\n    return this.pagerSpan;\n  }\n\n  private async callCallback(dir: 'prev' | 'next') {\n    this.callbackIsCalled = true;\n    this.toggleBtnsDisabled(true);\n    const pageIsChanged = await this.listCallback(dir);\n    if (pageIsChanged) {\n      switch (dir) {\n        case 'next':\n          this.currPageNumber++;\n          break;\n        case 'prev':\n          this.currPageNumber--;\n          break;\n        default:\n          break;\n      }\n    }\n    this.toggleBtnsDisabled(false);\n    this.callbackIsCalled = false;\n  }\n\n  private toggleBtnsDisabled(state: boolean) {\n    if (state === true) {\n      this.btnPrevPage.disabled = false;\n      this.btnNextPage.disabled = false;\n      return;\n    }\n\n    if (this.currPageNumber > this.firstPageNumber)\n      this.btnPrevPage.disabled = false;\n    else this.btnPrevPage.disabled = true;\n\n    if (this.currPageNumber < this.lastPageNumber)\n      this.btnNextPage.disabled = false;\n    else this.btnNextPage.disabled = true;\n  }\n}\n","import { DBusTopics } from '../../dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgRoutingMsg extends DBusMsg {\n  constructor(rxIds?: string[], prefResponseRxIds?: string[]) {\n    super(DBusTopics.ROUTING, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\nimport { ROUTES } from '../../routes.def';\n\nexport class DBusMsgRouteIsChangedMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly newRoute: keyof typeof ROUTES | string,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","export class SimpleRouterAgent {\n  constructor(\n    readonly type: string,\n    readonly path: string,\n    readonly callback: CallableFunction,\n    readonly getStateCallback?: CallableFunction,\n    readonly setStateCallback?: CallableFunction,\n  ) {}\n}\n","import { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_HUB_NAMES } from '../dbus/defs/dbus-hub-names.def';\nimport { DBusHub, DBusInterface } from '../dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRouteIsChangedMsg } from './dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { SimpleRouterAgent } from './simple-router-agent';\n\nexport interface RouterOptions {\n  mode: string;\n  onlyDBus?: true;\n  defaultRoot?: string;\n  defaultAgent?: SimpleRouterAgent;\n}\n\nexport class SimpleRouter implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.ROUTER;\n\n  private agents: Set<SimpleRouterAgent> = new Set();\n\n  private options: RouterOptions;\n\n  private currRoute: string | undefined;\n\n  private txs: Set<DBusTX> = new Set();\n\n  private defaultAgent: SimpleRouterAgent | undefined;\n\n  private restrictions: Set<() => Promise<boolean>> = new Set();\n\n  constructor(options: RouterOptions) {\n    switch (options.mode) {\n      case '#':\n        // just filter that # mode\n        break;\n      case '?':\n        throw new Error(`${options.mode} is not supported yet!`);\n      default:\n        throw new Error(`${options.mode} is not supported!`);\n    }\n    this.options = OBJ_PROCESSOR.deepFreeze(options);\n\n    window.addEventListener('popstate', async () => {\n      if (window.location.href === this.currRoute) return;\n\n      if (this.restrictions.size > 0) {\n        const wantedRoute = window.location.href;\n\n        if (this.currRoute) {\n          window.location.href = this.currRoute;\n        } else if (this.options.defaultRoot) {\n          window.location.href = `${window.location.host}/${this.options.defaultRoot}`;\n        }\n        const arr = [...this.restrictions.values()];\n        const promises = arr.map(arrow => arrow());\n        const result = await Promise.all(promises);\n        let cancelRouteChange = false;\n\n        if (Array.isArray(result)) {\n          for (let i = 0; i < result.length; i++) {\n            if (typeof result[i] !== 'boolean')\n              throw new Error('restrict func returned not boolean value!');\n\n            if (!result[i]) cancelRouteChange = true;\n            else {\n              const func = arr[i];\n\n              if (func) this.restrictions.delete(func);\n            }\n          }\n        }\n\n        if (!cancelRouteChange) window.location.href = wantedRoute;\n      } else {\n        this.activateWantedAgents();\n      }\n    });\n  }\n\n  activateWantedAgents(): boolean | Error[] {\n    this.currRoute = window.location.href;\n    let activatedCount = 0;\n    const errors = [];\n\n    if (!this.options.onlyDBus && this.options.mode === '#') {\n      const agentsArr = [...this.agents];\n      for (let i = 0; i < this.agents.size; i++) {\n        if (agentsArr[i]?.path === window.location.hash) {\n          try {\n            agentsArr[i]?.callback();\n          } catch (error) {\n            error.push(error);\n          }\n          activatedCount++;\n          break;\n        }\n      }\n\n      if (activatedCount === 0) {\n        if (\n          this.defaultAgent &&\n          this.options.defaultRoot === window.location.hash\n        ) {\n          this.defaultAgent.callback();\n        } else {\n          errors.push(new Error('Agent is not finded'));\n        }\n      }\n    }\n\n    if (this.txs.size > 0) {\n      this.txs.forEach(tx => {\n        const msg = new DBusMsgRouteIsChangedMsg(window.location.hash);\n        tx.transmit({\n          msg,\n          waitMode: DBusTXWaitModes.nowait,\n          prepMode: DBusTXPrepModes.freeze,\n        });\n      });\n    }\n\n    if (errors.length > 0) return errors;\n    return activatedCount > 0;\n  }\n\n  addRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.add(agent);\n  }\n\n  removeRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.delete(agent);\n  }\n\n  flushRouterAgents(): void {\n    this.agents.clear();\n  }\n\n  /* not refactored yet\n  private watchRestrictions = async (msg: DataBusRoutingMsg) => {\n    if (msg instanceof DataBusMsgRoutingRoutingRestrictMode) {\n      const func = msg.data.callbackPromiseGenerator as () => Promise<boolean>;\n\n      if (msg.data.mode) {\n        this.restrictions.add(func);\n      } else {\n        this.restrictions.delete(func);\n      }\n    }\n  };\n  */\n\n  connect(int: DBusInterface): void {\n    const tx = int.getNewTX('broadcasting route changes');\n    this.txs.add(tx);\n    // watch restriction\n    // not refactored yet\n    // const rx = bus.getNewRX();\n    // bus.registerReceiver(DataBusMsgTopics.ROUTING, msgReceiver);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\n\nexport type EngineResponse = {\n  velocity: number;\n  distance: number;\n};\n\nclass RestClientEngine {\n  private resUrl = '/engine';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  toggleEngine(\n    id: number,\n    status: 'started' | 'stopped',\n  ): Promise<EngineResponse> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=${status}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as EngineResponse))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  enterDriveMode(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=drive`;\n      fetch(url, {\n        method: 'GET',\n      }).then(response => {\n        switch (response.status) {\n          case 200:\n            res(true);\n            break;\n          case 400:\n          case 404:\n          case 429:\n          case 500:\n          default:\n            rej(new Error(`${response.status}`));\n            break;\n        }\n      });\n    });\n  }\n}\n\nconst obj = new RestClientEngine('http://127.0.0.1:3000');\n\nconst REST_CLIENT_ENGINE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_ENGINE };\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusMsgRESTReqMsg } from '../../../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_NAMES } from '../../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqGarageCreateCarMsg extends DBusMsgRESTReqMsg {\n  constructor(\n    readonly unregCar: UnregCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(REST_CLIENT_NAMES.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRESTReqMsg } from '../../../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_NAMES } from '../../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqGarageDeleteCarMsg extends DBusMsgRESTReqMsg {\n  constructor(\n    readonly id: number,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(REST_CLIENT_NAMES.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData, UnregCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { DBUS_COMMON_RESPONSES } from '../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusInterface } from '../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusTopics } from '../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRESTReqMsg } from '../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport {\n  RestClientNamesList,\n  REST_CLIENT_NAMES,\n} from '../rest-clients-names.def';\nimport { DBusMsgRESTReqGarageCreateCarMsg } from './dbus-msgs.defs/requests-msgs/create-car-msg.def';\nimport { DBusMsgRESTReqGarageDeleteCarMsg } from './dbus-msgs.defs/requests-msgs/delete-car-msg.def';\n\nclass RestClientGarage implements DBusPort {\n  protected clientName = REST_CLIENT_NAMES.GARAGE;\n\n  protected txs = new Set<DBusTX>();\n\n  private resUrl = '/garage';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  autoConnect(int: DBusInterface) {\n    const requestRX = int.getNewRX(this.requestRXFunc, 'listen requests to db');\n    int.plugRX(DBusTopics.REST_CLIENT_REQUESTS, requestRX);\n  }\n\n  requestRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgRESTReqMsg &&\n      data.msg.destClient === this.clientName\n    ) {\n      if (data.msg instanceof DBusMsgRESTReqGarageCreateCarMsg) {\n        return this.createCar(data.msg.unregCar);\n      }\n      if (data.msg instanceof DBusMsgRESTReqGarageDeleteCarMsg) {\n        return this.deleteCar(data.msg.id);\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  getCars(\n    page?: number,\n    limit?: number,\n  ): Promise<{ limit: string; cars: RegCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      const url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res({ limit: limitResponse, cars: json as RegCarData[] }))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  getCar(id: number): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  createCar(unregCar: UnregCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(unregCar),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  deleteCar(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  updateCar(regCar: RegCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${regCar.id}`;\n      const data: UnregCarData = regCar;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n}\n\nconst obj = new RestClientGarage('http://127.0.0.1:3000');\n// TODO: DEL PROPERTY\nobj.autoConnect = (int: DBusInterface) => {};\n\nconst REST_CLIENT_GARAGE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_GARAGE };\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\n\nclass RestClientWinnersSortOptions {\n  readonly id = 'id';\n\n  readonly wins = 'wins';\n\n  readonly time = 'time';\n}\n\nconst obj = new RestClientWinnersSortOptions();\n\nconst REST_CLIENT_WINNERS_SORT_OPTIONS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS_SORT_OPTIONS };\n\nexport type RestClientWinnersSortOptionsList =\n  keyof RestClientWinnersSortOptions;\n","import { WinnerCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { RestClientWinnersSortOptionsList } from './rest-client-winners.def';\n\nclass RestClientWinners {\n  private resUrl = '/winners';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getWinners(\n    page = 0,\n    limit?: number,\n    sort?: RestClientWinnersSortOptionsList,\n    order?: 'ASC' | 'DESC',\n  ): Promise<{ limit: string; cars: WinnerCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      let url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      if (sort) url += `&_sort=${sort}`;\n      if (order) url += `&_order=${order}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json =>\n          res({ limit: limitResponse, cars: json as WinnerCarData[] }),\n        )\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  getWinner(id: number): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  createWinner(winnerCarData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(winnerCarData),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  deleteWinner(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  updateWinner(winnerData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${winnerData.id}`;\n      const data: WinnerCarData = winnerData;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n}\n\nconst obj = new RestClientWinners('http://127.0.0.1:3000');\n\nconst REST_CLIENT_WINNERS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS };\n","import { DBusTopics } from '../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { RestClientNamesList } from '../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqMsg extends DBusMsg {\n  constructor(\n    readonly destClient: RestClientNamesList,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.REST_CLIENT_REQUESTS, rxIds, prefResponseRxIds);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nconst restClientError = {\n  UNEXPECTED_RESULT: 'UNEXPECTED_RESULT',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n};\n\nconst REST_CLIENT_ERROR = OBJ_PROCESSOR.deepFreeze(\n  restClientError,\n) as typeof restClientError;\n\nexport { REST_CLIENT_ERROR };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nclass RestClientNames {\n  readonly GARAGE = 'GARAGE';\n\n  readonly WINNERS = 'WINNERS';\n}\n\nconst REST_CLIENT_NAMES = new RestClientNames();\n\nOBJ_PROCESSOR.deepFreeze(REST_CLIENT_NAMES);\n\nexport { REST_CLIENT_NAMES };\n\nexport type RestClientNamesList = keyof RestClientNames;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { App } from './app';\n\nwindow.addEventListener('load', () => {\n  const appDiv = document.createElement('div');\n  document.body.append(appDiv);\n  const app = new App(appDiv);\n});\n"],"sourceRoot":""}