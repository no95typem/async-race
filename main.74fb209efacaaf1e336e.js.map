{"version":3,"sources":["webpack://async-race/./src/components/garage/garage.scss?dc9e","webpack://async-race/./src/components/garage/subcomps/car/car.scss?1a27","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.scss?4682","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.scss?1eb1","webpack://async-race/./src/components/garage/subcomps/track/track.scss?9419","webpack://async-race/./src/components/header/header.scss?92c0","webpack://async-race/./src/components/winners/winners.scss?feec","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.scss?0629","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.scss?22c3","webpack://async-race/./src/styles.scss?cfb3","webpack://async-race/./src/app/app.ts","webpack://async-race/./src/app/dbus-msgs/reboot-msg.def.ts","webpack://async-race/./src/components/garage/car-actions.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-action-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-created-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-remove-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-select-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-page-is-changed.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-request-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-status-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-req-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-status-msg.def.ts","webpack://async-race/./src/components/garage/garage-controller.ts","webpack://async-race/./src/components/garage/garage-driver.ts","webpack://async-race/./src/components/garage/garage-managers-team.ts","webpack://async-race/./src/components/garage/garage.ts","webpack://async-race/./src/components/garage/subcomps/car/car.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-create.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-proto.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/dbus-msgs/generate-cars-msg.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.ts","webpack://async-race/./src/components/garage/subcomps/popup-winner/popup-winner.ts","webpack://async-race/./src/components/garage/subcomps/track/track.ts","webpack://async-race/./src/components/header/header.ts","webpack://async-race/./src/components/header/subcomps/nav-item/nav-item.ts","webpack://async-race/./src/components/winners/subcomps/winner-entry.ts","webpack://async-race/./src/components/winners/winners.ts","webpack://async-race/./src/definitions/car-random-data.def.ts","webpack://async-race/./src/lib/components/base-comp/base-comp.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/404/popup-404.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.ts","webpack://async-race/./src/lib/components/popups/standalone/popup-standalone.ts","webpack://async-race/./src/lib/convertors/colors.ts","webpack://async-race/./src/lib/generators/generators.ts","webpack://async-race/./src/lib/gui/animation.ts","webpack://async-race/./src/lib/interfaces/notifiable.ts","webpack://async-race/./src/lib/processors/obj-processor.ts","webpack://async-race/./src/lib/services/dbus/dbus.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-common-responses.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-errors.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-hub-names.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-interface.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-rx/dbus-rx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-topics.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data-headers.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/msgs/dbus-msg.def.ts","webpack://async-race/./src/lib/services/pager/pager.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/dbus-msg-routing-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/router-status-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/routing-restrict-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/simple-router-agent.ts","webpack://async-race/./src/lib/services/simple-router/simple-router.ts","webpack://async-race/./src/services/rest-clients/client-engine/rest-client-engine.ts","webpack://async-race/./src/services/rest-clients/client-garage/rest-client-garage.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.def.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.ts","webpack://async-race/./src/services/rest-clients/rest-clients-errors.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-names.def.ts","webpack://async-race/webpack/bootstrap","webpack://async-race/webpack/runtime/define property getters","webpack://async-race/webpack/runtime/hasOwnProperty shorthand","webpack://async-race/webpack/runtime/make namespace object","webpack://async-race/./src/entry.ts"],"names":["rootElement","hubName","DBUS_HUB_NAMES","APP","loadedMainComponents","defaultRouterAgent","SimpleRouterAgent","this","loadMainComponent","router","SimpleRouter","mode","defaultRoot","defaultAgent","mainlineDBus","DBus","rebootMsg","DBusMsgRebootMsg","emergencyHandlerIsWorking","sendRebootMsg","tx","transmit","msg","prepMode","DBusTXPrepModes","freeze","waitMode","DBusTXWaitModes","allSetled","watchRouterMsgs","async","data","DBusMsgRouteIsChangedMsg","newRoute","DBUS_COMMON_RESPONSES","VOID","setupEmergencyHandler","classList","add","app","header","HeaderComponent","HEADER","append","attachHub","activateWantedAgents","window","addEventListener","e","preventDefault","promise","catch","error","message","REST_CLIENT_ERROR","CONNECTION_REFUSED","popup","PopupStandaloneModal404Comp","setText","show","retry","REST_CLIENT_GARAGE","getCars","console","log","hide","Promise","res","setTimeout","intrfce","routeRX","getNewRX","plugRX","DBusTopics","ROUTING","getNewTX","name","GarageComp","WinnersComp","location","hash","newComponent","currMainComponent","remove","isDBusHub","isNotifiable","notify","DBusMsg","signal","rxIds","prefResponseRxIds","super","APP_CTL","CarActions","DBusMsgCarActionMsg","action","CAR_ACTION","DBusMsgCarActionCreatedMsg","car","CREATED","DBusMsgCarActionRemovedMsg","nullifiedContract","REMOVED","DBusMsgCarActionSelectedMsg","notifyChanges","SELECTED","DBusMsgGarageMsg","GARAGE","DBusMsgGaragePageIsChangedMsg","DBusMsgGarageRaceMsg","DBusMsgRaceRequestMsg","DBusMsgGarageRaceStatusMsg","status","DBusMsgGarageResetMsg","DBusMsgGarageResetReqMsg","DBusMsgGarageStatusMsg","GarageCompCtlAkaDirector","tracksContainer","carCtlsBlock","GARAGE_CONTROLLER","txs","Set","entriesPerPage","pagerContainer","document","createElement","ctlBlocks","pagerCallback","dir","resetState","reloadData","appCtlRXFunc","generatorRXFunc","DBusMsgGenerateCarsMsg","garageManagersTeam","getContracts","size","racingRXFunc","pager","toogleLock","performRace","carCtlsBlockBlockListener","stopPropagation","carActionsRXFunc","racePromise","handleCarRm","finally","tryChangePage","createCarCtlBlock","index","btns","btnSelect","btnStart","btnReset","btnRm","forEach","btn","numberSpan","textContent","toString","container","connectCtlAndTrack","ctlElem","track","illuminateSelf","GarageManagersTeam","lockCallback","Pager","setupPager","btnNextPage","getBtnNextPage","btnPrevPage","getBtnPrevPage","pagerInfo","getPagerSpan","redraw","int","autoConnect","carActionsMsgsRX","raceMsgsRX","generatorMsgsRX","GENERATE","appCtlMsgsRX","rej","toggleCtlsBlockDisabled","then","state","capture","block","style","setProperty","length","removeEventListener","removeProperty","undefined","page","getCurrPageNumber","getEntriesPerPage","response","limit","cars","setEntriesCount","Number","parseInt","broadcastPaging","nullifyContracts","newContracts","TrackComp","carComp","CarComp","placeCar","push","addContracts","nowait","clearDOM","geometry","calcGeometry","setStylesForTracks","drawTracks","drawCarsCtls","firstChild","getComputedStyle","containerHeight","parseFloat","height","paddingBottom","paddingTop","firstAutoHeight","Math","min","innerWidth","CAR_WIDTH_RATIO","CAR_MAX_WIDTH","CAR_IMG_RATIO","heights","heightSum","contracts","contract","factor","SCALE_FACTOR","carTrackHeight","excessHeight","heightsReversed","sort","a","b","displacementBase","SKIPPED_PROGRESSION_MEMBERS_COUNT","displacements","midIndex","displacement","DISPLACEMENT_FIX","paddingBase","paddingShift","PADDING_SHIFT_BASE","PADDING_SHIFT_BASE_VW","trackHeights","map","GarageDriverCommands","GarageDriver","emergencyAwaitServer","timeInMS","delayInMS","resPromise","PopupStandaloneModalProgressComp","setProgress","startTime","Date","now","interval","IamResolved","resFunc","clearInterval","setInterval","elapsedTime","progress","Error","flags","disableCtls","thisDriveId","genUniqId","currDriveId","ignitionPromise","TurnOnTheIgnition","driveParams","drivePromise","drive","allSettled","toggleIgniteAnim","REST_CLIENT_ENGINE","toggleEngine","currCar","id","stopCar","rollBack","msgBlock","updateProgress","playAwaitingAnim","clearTimeout","lastTimeInMs","lastStart","driveId","time","calculateDriveTime","start","enterDriveMode","success","rollForward","playbackRate","onlyAnim","rollover","broken","stop","params","distance","velocity","directorLockCb","freeDrivers","busyDrivers","Map","movingDrivers","winnerPopup","GaragePopupWinner","carCtlsClickListener","target","HTMLElement","elem","HTMLButtonElement","parentElement","disabled","currRaceId","handleRemoving","startDriving","handleRestoreState","handleSelection","routingRestrainFunc","handleWinner","isFinishVisible","duration","getTransitionDuration","awaitTime","isRoadMoves","winnerCar","setData","toFixed","REST_CLIENT_WINNERS","getWinner","winnerRecord","updatedWinnerData","wins","updateWinner","NOT_FOUND","newWinnerData","createWinner","get","getOutOfTheCar","tryFreeDrivers","delete","clear","сontracts","newContract","prepareForRace","rollbackCars","broadcastGarageStatus","broadcastRaceStatus","driver","returnToStart","broadcastIfAllInStart","every","isInStartPosition","choosedDriver","find","isFree","set","putBehindTheWheel","toggleRoutingRestrains","performDrivingProtocol","transmissions","x","DBusMsgRoutingRestrainMsg","deleteCar","deleteWinner","genSelectCallback","rollbacks","all","thisRaceId","raceData","raceId","arrivedByOrder","notArrived","participantsCount","roadElem","stratedCount","processRace","result","handleDriveResult","has","updateData","BaseComp","isControllerWorking","mainControlsComp","MainControlsComp","carsCtlsBlock","bgVideo","bgVideoProgressListener","buffered","end","bgVideoCanPlayListener","reset","controller","startWorking","play","_rootElement","garage","selfCtlsBlock","bg","garage__bg","setupBgVideo","renderBgVideo","controls","loop","defaultMuted","muted","autoplay","src","attachSubHub","_currCar","canvas","tireBack","btnSelect$","btnRm$","_spanCarName","btnStart$","btnReset$","isReseted","movingClassName","clearAnimFromElem","anim","commitStyles","selectSpan","rmSpan","startSpan","resetSpan","drawCar","color","drawWheels","observer","MutationObserver","mutations","mutation","oldValue","includes","currOutOfSceneAnim","pause","disconnect","contains","outOfScene","rootElem","wheelImg","Image","CAR_WHEEL_IMG_SRC","onload","backwardWheelImg","OBJ_PROCESSOR","deepClone","carData","finishPromise","resolve","playOutAnim","cancel","currAnimation","finished","playInAnim","asyncFunc","animOut","animate","opacity","easing","fill","promiseToAwait","animIn","iterations","POSITIVE_INFINITY","transform","handleBtns","rootStyle","selfStyle","rootWidth","width","paddingLeft","paddingRight","selfWidth","coordinateInPercents","onfinish","oncancel","playState","observe","attributes","attributeOldValue","img","frameNumber","CAR_EXPLOSION_IMG_DATA","BASE_URL","EXTENSION","FRAME_TIME_MS","FRAMES_COUNT","hexColor","CAR_BODY_IMG_SRC","ctx","getContext","shadowColor","shadowBlur","drawImage","paintCarBody","imageData","getImageData","rgb","hexToRgb","j","i","red","green","blue","blueDiff","blueDiffThreshold","threshold","r","g","putImageData","TIMING_FUNCTION","CreateCompController","CreateUpdateCompControllerProto","elements","inputText","inputColor","setupBtnCreate","reportValidity","unregCar","value","createCar","clone","ctlsStateMap","ctls","setCustomValidity","pattern","removeAttribute","ctl","pushCtlsState","toogleCtlsDisabled","popCtlsState","UpdateCompController","garageMsgsListener","carActionsListener","choosedCar","notifyCb","setupBtnUpdate","rxCarActions","rxGarage","updateCar","CreateUpdateComponent","type","btnText","CREATE_UPDATE","textInput","colorInput","root","MAIN_CONTROLS","createComponent","updateComponent","btnRace","btnGenerate","generateClickListener","transmission","generate","genCb","resolveMsg","raceClickListener","resetClickListener","genRandomCarName","manufacturerNumber","getRandomInt","CAR_MODEL_LIST_KEYS","manufacturerName","models","CAR_MODEL_LIST","rxFuncForRaceMsgs","getController","enable","disable","rxFuncForGarageMsgs","btnsBlock","renderBtns","span","btnBlock","total","left","cb","genLeft","unregCarData","genRandomHexColor","rx","rx2","textTime","textName","textId","textNumber","timeStr","indexStr","topBlock","illuminate","track_illuminated","hasChildNodes","childNodes","child","spanCarName","buses","illuminateNavItem","anchors","anchor","getAttribute","DBusMsgRoutingStatusMsg","navContainer","logo","header__logo","firstSpan","dataset","secondSpan","ul","li","svg","navItems","NavItem","item","illuminateRX","text","href","styles","iconSrc","_anchor","setAttribute","iconImage","WinnerRowComp","winnerData","indexElem","idElem","carPreviewBox","nameElem","winsElem","bestTimeElem","carPreview","genPreview","table","tableBody","tableHead","thId","thCar","thName","thWins","thBestTime","pagerBtnsContainer","currOrder","currSort","tableHeadClickListener","REST_CLIENT_WINNERS_SORT_OPTIONS","refreshTableHeader","currSortedElem","winners","pagerSpan","renderPager","renderTable","renderTableHeader","tr","thIndex","getWinners","rows","Array","promises","indexInc","winner","getCar","totalIndex","row","getCarPreview","TEXT_CONTENT_ENG","deepFreeze","Lamborghini","Ferrari","Koenigsegg","Object","keys","tag","PopupStandaloneModalComp","PopupStandaloneComp","closeArea","body","barContainer","bar","setHeader","hex","c","test","split","slice","arr","Uint8Array","crypto","getRandomValues","join","max","floor","random","prop","transPropArr","getPropertyValue","replace","propIndex","lastIndexOf","transformAndAutoresolve","delay","val","forceAutoresolveIn","valToWait","eventHandler","propertyName","transformAndWaitEvent","object","obj","record","isFrozen","isArray","v","n","cloneNode","Blob","k","setPrototypeOf","getPrototypeOf","network","idCounter","rxs","createdRXs","createdTXs","attachedHubs","occupiedNames","callRXFunc","headers","clonedData","func","handleClone","freezedData","handleFreeze","DBUS_ERRORS","UNEXPECTED_PREP_MODE","busId","hub","suffix","createInterfaceForHub","prefix","HUB_IS_ALREADY_ATTACHED","HUB_NAME_NOT_AUTHORIZED","HUB_NAME_IS_OCCUPIED","dbusInterface","DBusInterface","desc","genNewRX","topic","unplugRX","subHub","subSuffix","connect","regNumber","DBusTX","opts","head","DBusTXDataHeaders","DBusTXData","freezedTX","DBusRX","freezedRX","XENO_RX","TOPIC_IS_NOT_EXIST","TOPIC_HAS_NO_RXS","choosedRXs","PREF_RXS_ARE_NOT_EXIST","manual","BAD_REQUEST","ROUTER","objAsRecord","arrowedGetNewTX","arrowedGetNewRX","arrowedPlugRX","arrowedUnplugRX","RXs","TXs","RXsPlugMap","txId","txRegNumber","txDesc","listCallback","firstPageNumber","currPageNumber","lastPageNumber","entriesCount","callbackIsCalled","btnNextSpan","btnPrevSpan","callCallback","lock","toggleBtnsDisabled","ceil","updateSpanText","pageNumber","DBusMsgRoutingMsg","addInfo","callback","path","getStateCallback","setStateCallback","options","agents","restrains","watchRestrictions","broadcastRoutingStatus","currRoute","wantedRoute","host","values","arrow","cancelRouteChange","activatedCount","errors","onlyDBus","agentsArr","agent","baseUrl","resUrl","fullUrl","url","fetch","method","json","UNEXPECTED_RESULT","UNKNOWN_ERROR","clientName","REST_CLIENT_NAMES","limitStr","limitResponse","JSON","stringify","regCar","order","winnerCarData","WINNERS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","d","definition","key","o","defineProperty","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","appDiv","App"],"mappings":"uEACA,SAAgB,OAAS,wBAAwB,WAAa,0BAA0B,0BAA0B,0BAA0B,aAAa,0BAA0B,iCAAiC,0BAA0B,uBAAuB,0BAA0B,YAAY,wBAAwB,mBAAmB,0BAA0B,yBAAyB,0BAA0B,kCAAkC,0BAA0B,2BAA2B,0BAA0B,6BAA6B,wBAAwB,6BAA6B,0BAA0B,mBAAmB,0BAA0B,wBAAwB,0BAA0B,uBAAuB,0BAA0B,uBAAuB,0BAA0B,iCAAiC,wBAAwB,KAAO,0BAA0B,YAAY,4B,6CCAv6B,SAAgB,UAAU,0BAA0B,kBAAkB,wBAAwB,iBAAiB,0BAA0B,yBAAyB,0BAA0B,0BAA0B,0BAA0B,qBAAqB,0BAA0B,iBAAiB,0BAA0B,iBAAiB,wBAAwB,sBAAsB,0BAA0B,eAAe,0BAA0B,iBAAiB,0BAA0B,YAAY,0BAA0B,qBAAqB,0BAA0B,qBAAqB,0BAA0B,wBAAwB,wBAAwB,wBAAwB,wBAAwB,gBAAgB,4B,6CCA3uB,SAAgB,KAAO,0BAA0B,aAAa,0BAA0B,cAAc,4B,6CCAtG,SAAgB,gBAAgB,0BAA0B,YAAY,4B,6CCAtE,SAAgB,MAAQ,0BAA0B,kBAAoB,0BAA0B,wBAAwB,4B,6CCAxH,SAAgB,OAAS,0BAA0B,aAAe,0BAA0B,qBAAqB,0BAA0B,qBAAqB,wBAAwB,aAAa,yBAAyB,mBAAmB,0BAA0B,qBAAqB,0BAA0B,4BAA4B,0BAA0B,wBAAwB,0BAA0B,wBAAwB,0BAA0B,kBAAkB,0BAA0B,mBAAmB,0BAA0B,mBAAmB,0BAA0B,4BAA4B,0BAA0B,wBAAwB,0BAA0B,gBAAgB,0BAA0B,iBAAiB,2B,6CCA7vB,SAAgB,QAAU,wBAAwB,MAAQ,0BAA0B,yBAAyB,yBAAyB,uBAAuB,0BAA0B,qBAAqB,wBAAwB,yBAAyB,wBAAwB,0BAA0B,0BAA0B,MAAQ,0BAA0B,aAAa,0BAA0B,YAAY,4B,6CCA9Z,SAAgB,cAAc,0BAA0B,WAAW,0BAA0B,aAAa,0BAA0B,oBAAoB,0BAA0B,kBAAkB,0BAA0B,wBAAwB,0B,6CCAtP,SAAgB,UAAY,0BAA0B,aAAa,0BAA0B,IAAM,0BAA0B,KAAO,0BAA0B,KAAO,4B,6CCArK,SAAgB,IAAM,0BAA0B,iBAAiB,0BAA0B,IAAM,0BAA0B,QAAQ,yBAAyB,QAAQ,wBAAwB,QAAQ,yBAAyB,QAAQ,yBAAyB,SAAS,0BAA0B,SAAS,wBAAwB,gBAAgB,wBAAwB,qBAAqB,0BAA0B,qBAAqB,0BAA0B,gBAAgB,0BAA0B,wBAAwB,0BAA0B,wBAAwB,0BAA0B,gBAAgB,0BAA0B,iBAAiB,4B,uKCAjpB,gBACA,UACA,UACA,UACA,UACA,UACA,UAEA,aAEA,UACA,UAKA,UACA,UACA,UACA,UACA,UACA,SAEA,UAEA,SAKA,YAyBE,YAA6BA,GAAA,KAAAA,cAxBpB,KAAAC,QAAU,EAAAC,eAAeC,IAExB,KAAAC,qBAAiD,GAIjD,KAAAC,mBAAqB,IAAI,EAAAC,kBAAkB,OAAQ,IAAI,IAC/DC,KAAKC,kBAAkB,aAGf,KAAAC,OAAS,IAAI,EAAAC,aAAa,CAClCC,KAAM,IACNC,YAAa,GACbC,aAAcN,KAAKF,qBAGX,KAAAS,aAAe,IAAI,EAAAC,KAInB,KAAAC,UAAY,IAAI,EAAAC,iBAAiB,UAEjC,KAAAC,2BAA4B,EAsD9B,KAAAC,cAAgB,IACfZ,KAAKa,IAAIC,SAAS,CACvBC,IAAKf,KAAKS,UACVO,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,YAUtB,KAAAC,gBAAkBC,MAAOC,IAC/B,MAAM,IAAET,GAAQS,EAKhB,OAJIT,aAAe,EAAAU,0BAEjBzB,KAAKC,kBAAkBc,EAAIW,UAEtB,EAAAC,sBAAsBC,MAvE7B5B,KAAK6B,wBAEL7B,KAAKP,YAAYqC,UAAUC,IAAI,UAAaC,KAE5C,MAAMC,EAAS,IAAI,EAAAC,gBAAgB,EAAAvC,eAAewC,QAClDnC,KAAKP,YAAY2C,OAAOH,EAAOxC,aAE/BO,KAAKO,aAAa8B,UAAUrC,MAC5BA,KAAKO,aAAa8B,UAAUJ,GAC5BjC,KAAKO,aAAa8B,UAAUrC,KAAKE,QAEjCF,KAAKE,OAAOoC,uBAGN,wBACNC,OAAOC,iBAAiB,sBAAsBC,IAC5CA,EAAEC,iBACFD,EAAEE,QAAQC,OAAOC,IACf,IACG7C,KAAKW,2BACNkC,EAAMC,WAAW,EAAAC,mBACjBF,EAAMC,UAAY,EAAAC,kBAAkBC,mBACpC,CACAhD,KAAKW,2BAA4B,EACjC,MAAMsC,EAAQ,IAAI,EAAAC,4BAClBD,EACGE,QACC,qGAGDC,OACH,MAAMC,EAAQ9B,UACZ,UACQ,EAAA+B,mBAAmBC,UACzBC,QAAQC,IAAI,mBACNzD,KAAKY,gBACX4C,QAAQC,IAAI,WACZR,EAAMS,OACN1D,KAAKW,2BAA4B,EACjC,MACA6C,QAAQC,IAAI,iBACN,IAAIE,SAAQC,GAAOC,WAAWD,EAAK,OACzCP,MAGJA,WAcR,QAAQS,GACN,MAAMC,EAAUD,EAAQE,SAAShE,KAAKsB,iBACtCwC,EAAQG,OAAO,EAAAC,WAAWC,QAASJ,GACnC/D,KAAKa,GAAKiD,EAAQM,SAAS,sBAYrB,kBAAkBC,GACxB,KAAMA,KAAQrE,KAAKH,sBACjB,OAAQwE,GACN,IAAK,UACHrE,KAAKH,qBAAqB,GAAGwE,KAAU,IAAI,EAAAC,WAC3C,MACF,IAAK,WACHtE,KAAKH,qBAAqB,GAAGwE,KAAU,IAAI,EAAAE,YAC3C,MACF,QACEhC,OAAOiC,SAASC,KAAO,UAI7B,MAAMC,EAAe1E,KAAKH,qBAAqB,GAAGwE,KAElD,GAAIK,EAAc,CAShB,GARI1E,KAAK2E,mBACP3E,KAAK2E,kBAAkBlF,YAAYmF,SAGrC5E,KAAK2E,kBAAoBD,EACzBA,EAAajF,YAAYqC,UAAUC,IAAI,UAAa,mBACpD/B,KAAKP,YAAY2C,OAAOsC,EAAajF,aAEjC,EAAAoF,UAAU7E,KAAK2E,mBACjB,IACE3E,KAAKO,aAAa8B,UAAUrC,KAAK2E,mBACjC,OAIA,EAAAG,aAAa9E,KAAK2E,qBACpBnB,QAAQC,IAAI,UACZzD,KAAK2E,kBAAkBI,OAAO,W,0FCrKtC,gBACA,UAEA,MAAarE,UAAyB,EAAAsE,QACpC,YACWC,EACAC,EACAC,GAETC,MAAM,EAAAlB,WAAWmB,QAASH,EAAOC,GAJxB,KAAAF,SACA,KAAAC,QACA,KAAAC,qBAJb,sB,aCHA,IAAYG,E,sEAAAA,EAAA,EAAAA,aAAA,EAAAA,WAAU,KACpB,uBACA,2BACA,yBACA,0B,6FCJF,gBACA,UAGA,MAAaC,UAA4B,EAAAP,QACvC,YACWQ,EACAN,EACAC,GAETC,MAAM,EAAAlB,WAAWuB,WAAYP,EAAOC,GAJ3B,KAAAK,SACA,KAAAN,QACA,KAAAC,qBAJb,yB,oGCHA,gBACA,UAEA,MAAaO,UAAmC,EAAAH,oBAC9C,YACWI,EACAT,EACAC,GAETC,MAAM,EAAAE,WAAWM,QAASV,EAAOC,GAJxB,KAAAQ,MACA,KAAAT,QACA,KAAAC,qBAJb,gC,oGCHA,gBAEA,UAEA,MAAaU,UAAmC,EAAAN,oBAC9C,YACWI,EACAG,EACAZ,EACAC,GAETC,MAAM,EAAAE,WAAWS,QAASb,EAAOC,GALxB,KAAAQ,MACA,KAAAG,oBACA,KAAAZ,QACA,KAAAC,qBALb,gC,qGCJA,gBACA,UAEA,MAAaa,UAAoC,EAAAT,oBAC/C,YACWI,EACAM,EACAf,EACAC,GAETC,MAAM,EAAAE,WAAWY,SAAUhB,EAAOC,GALzB,KAAAQ,MACA,KAAAM,gBACA,KAAAf,QACA,KAAAC,qBALb,iC,0FCJA,gBACA,UAEA,MAAsBgB,UAAyB,EAAAnB,QAC7C,YACWE,EACAC,GAETC,MAAM,EAAAlB,WAAWkC,OAAQlB,EAAOC,GAHvB,KAAAD,QACA,KAAAC,qBAHb,sB,uGCHA,gBAEA,MAAakB,UAAsC,EAAAF,kBAAnD,mC,8FCFA,gBACA,UAEA,MAAsBG,UAA6B,EAAAtB,QACjD,YACWE,EACAC,GAETC,MAAM,EAAAlB,WAAWkC,OAAQlB,EAAOC,GAHvB,KAAAD,QACA,KAAAC,qBAHb,0B,+FCHA,gBAEA,MAAaoB,UAA8B,EAAAD,qBACzC,YACWpB,EACAC,GAETC,MAAMF,EAAOC,GAHJ,KAAAD,QACA,KAAAC,qBAHb,2B,oGCDA,gBAEA,MAAaqB,UAAmC,EAAAF,qBAC9C,YACWG,EACAvB,EACAC,GAETC,MAAMF,EAAOC,GAJJ,KAAAsB,SACA,KAAAvB,QACA,KAAAC,qBAJb,gC,+FCHA,gBACA,UAEA,MAAsBuB,UAA8B,EAAA1B,QAClD,YACWE,EACAC,GAETC,MAAM,EAAAlB,WAAWkC,OAAQlB,EAAOC,GAHvB,KAAAD,QACA,KAAAC,qBAHb,2B,kGCHA,gBAEA,MAAawB,UAAiC,EAAAD,sBAC5C,YACWxB,EACAC,GAETC,MAAMF,EAAOC,GAHJ,KAAAD,QACA,KAAAC,qBAHb,8B,gGCFA,gBAQA,MAAayB,UAA+B,EAAAT,iBAC1C,YACWM,EACTvB,EACAC,GAEAC,MAAMF,EAAOC,GAJJ,KAAAsB,UAFb,4B,4LCRA,gBACA,UAKA,UAGA,SACA,UACA,UACA,UACA,UAEA,UACA,UACA,UAEA,aACA,aACA,UACA,UACA,UACA,UACA,SAYA,MAAaI,EAmCX,YACUC,EACAC,GADA,KAAAD,kBACA,KAAAC,eAnBD,KAAArH,QAAU,EAAAC,eAAeqH,kBAExB,KAAAC,IAAM,IAAIC,IAMZ,KAAAC,eAAiB,EAEjB,KAAAC,eAAiBC,SAASC,cAAc,OAIxC,KAAAC,UAA2B,GAyC3B,KAAAC,cAAgBjG,MAAOkG,IAC7B,IAGE,aAFMzH,KAAK0H,mBACL1H,KAAK2H,WAAWF,IACf,EACP,MACA,OAAO,IAuCH,KAAAG,aAAerG,MAAOC,GACxBA,EAAKT,eAAe,EAAAL,kBAAwC,WAApBc,EAAKT,IAAIkE,cAC7CjF,KAAK0H,mBACL1H,KAAK2H,cACJ,GAEF,EAAAhG,sBAAsBC,KAIvB,KAAAiG,gBAAkBtG,MAAOC,IAE7BA,EAAKT,eAAe,EAAA+G,wBACA,QAApBtG,EAAKT,IAAI0F,QAESzG,KAAK+H,mBAAmBC,eAE5BC,KAAOjI,KAAKmH,uBAClBnH,KAAK0H,mBACL1H,KAAK2H,cAGR,EAAAhG,sBAAsBC,MAIvB,KAAAsG,aAAe3G,MAAOC,GACxBA,EAAKT,eAAe,EAAAwF,uBACtBvG,KAAKmI,MAAMC,YAAW,SAChBpI,KAAKqI,cACXrI,KAAKmI,MAAMC,YAAW,IACf,GAEL5G,EAAKT,eAAe,EAAA4F,yBACf3G,KAAK0H,aAEP,EAAA/F,sBAAsBC,KAyDvB,KAAA0G,0BAA6B7F,IACnCA,EAAEC,iBACFD,EAAE8F,mBAaI,KAAAC,iBAAmBjH,MAAOC,IAChC,GACEA,EAAKT,eAAe,EAAA8E,4BACpBrE,EAAKT,eAAe,EAAA2E,2BACpB,CACI1F,KAAKyI,mBAAmBzI,KAAKyI,YACjC,IACMjH,EAAKT,eAAe,EAAA8E,4BACtB7F,KAAK+H,mBAAmBW,YAAYlH,EAAKT,IAAI4E,KAE/C3F,KAAK0H,aAAaiB,SAAQ,IAAM3I,KAAK2H,eACrC,MACA3H,KAAKmI,MAAMS,cAAc,SAI7B,OAAO,EAAAjH,sBAAsBC,MA2LvB,KAAAiH,kBAAoB,CAAClD,EAAcmD,KACzC,MAAMC,EAAO,CAACpD,EAAIqD,UAAWrD,EAAIsD,SAAUtD,EAAIuD,SAAUvD,EAAIwD,OAE7DJ,EAAKK,SAAQC,IACXA,EAAIvH,UAAUC,IAAI,UAAasH,IAAK,UAAO,8BAG7C1D,EAAIsD,SAASnH,UAAUC,IAAI,UAAa,WACxC4D,EAAIqD,UAAUlH,UAAUC,IAAI,UAAa,WACzC4D,EAAIuD,SAASpH,UAAUC,IAAI,UAAa,UACxC4D,EAAIwD,MAAMrH,UAAUC,IAAI,UAAa,UAErC,MAAMuH,EAAajC,SAASC,cAAc,QAC1CgC,EAAWxH,UAAUC,IAAI,UAAO,oCAChCuH,EAAWC,YAAcT,EAAMU,WAE/B,MAAMC,EAAYpC,SAASC,cAAc,OAIzC,OAHAmC,EAAU3H,UAAUC,IAAI,UAAO,6BAC/B0H,EAAUrH,OAAOkH,KAAeP,GAEzBU,GAKD,KAAAC,mBAAqB,CAACC,EAAsBC,KAClDD,EAAQnH,iBACN,aACA,IAAMoH,EAAMC,gBAAe,KAC3B,GAEFF,EAAQnH,iBACN,YACA,IAAMoH,EAAMC,gBAAe,KAC3B,IAxaF7J,KAAK+H,mBAAqB,IAAI,EAAA+B,mBAC5BhD,EACAC,EACA/G,KAAK+J,cAGP/J,KAAKmI,MAAQ,IAAI,EAAA6B,MAAMhK,KAAKmH,eAAgBnH,KAAKwH,eACjDxH,KAAKiK,aAIC,aACN,MAAMC,EAAclK,KAAKmI,MAAMgC,iBAC/BD,EAAYpI,UAAUC,IACpB,UAAasH,IACb,UAAa,SACb,UAAO,yBAGT,MAAMe,EAAcpK,KAAKmI,MAAMkC,iBAC/BD,EAAYtI,UAAUC,IACpB,UAAasH,IACb,UAAa,SACb,UAAO,yBAGT,MAAMiB,EAAYtK,KAAKmI,MAAMoC,eAC7BD,EAAUxI,UAAUC,IAAI,UAAO,0BAE/B/B,KAAKoH,eAAetF,UAAUC,IAAI,UAAO,qBACzC/B,KAAKoH,eAAehF,OAAOgI,EAAaF,EAAaI,GAevD,qBACE,IAGE,aAFMtK,KAAK2H,aACXpF,OAAOC,iBAAiB,UAAU,IAAMxC,KAAKwK,YACtC,EACP,MACA,OAAO,GAKX,cAAcC,GACZzK,KAAKiH,IAAIlF,IAAI0I,EAAIrG,SAAS,qBAC1BpE,KAAK+H,mBAAmB2C,YAAYD,GAEpC,MAAME,EAAmBF,EAAIzG,SAC3BhE,KAAKwI,iBACL,wBAEFiC,EAAIxG,OAAO,EAAAC,WAAWuB,WAAYkF,GAElC,MAAMC,EAAaH,EAAIzG,SAAShE,KAAKkI,aAAc,wBACnDuC,EAAIxG,OAAO,EAAAC,WAAWkC,OAAQwE,GAE9B,MAAMC,EAAkBJ,EAAIzG,SAAShE,KAAK6H,iBAC1C4C,EAAIxG,OAAO,EAAAC,WAAW4G,SAAUD,GAEhC,MAAME,EAAeN,EAAIzG,SACvBhE,KAAK4H,aACL,0BAEF6C,EAAIxG,OAAO,EAAAC,WAAWmB,QAAS0F,GA2CzB,mBACN,OAAO,IAAIpH,SAAQ,CAACC,EAAKoH,KACvBhL,KAAKiL,yBAAwB,GAC7BjL,KAAKmI,MAAMC,YAAW,GACtBpI,KAAK+H,mBACFL,aACAwD,MAAK,IAAMtH,GAAI,KACfhB,OAAOC,IACNmI,EAAInI,MAEL8F,SAAQ,KACP3I,KAAKmI,MAAMC,YAAW,GACtBpI,KAAKiL,yBAAwB,SAK7B,mBAAmBE,GAEzB,OADAnL,KAAKmI,MAAMC,WAAW+C,IACf,EAGD,wBAAwBA,IAChB,IAAVA,GACFnL,KAAK+G,aAAavE,iBAChB,QACAxC,KAAKsI,0BACL,CACE8C,SAAS,IAGbpL,KAAKuH,UAAU6B,SAAQ,CAACiC,EAAOvC,KAC7BuC,EAAMC,MAAMC,YACV,iBACGzC,EAAQ9I,KAAKuH,UAAUiE,OAA1B,KAEFH,EAAMvJ,UAAUC,IAAI,UAAa,uBAGnC/B,KAAK+G,aAAa0E,oBAChB,QACAzL,KAAKsI,0BACL,CACE8C,SAAS,IAGbpL,KAAKuH,UAAU6B,SAAQiC,IACrBA,EAAMvJ,UAAU8C,OAAO,UAAa,kBACpCyG,EAAMC,MAAMI,eAAe,sBAYzB,oBAIN,OAHA1L,KAAKyI,YAAczI,KAAK+H,mBAAmBM,cAAcM,SAAQ,KAC/D3I,KAAKyI,iBAAckD,KAEd3L,KAAKyI,YAwBN,WAAWhB,GACjB,OAAO,IAAI9D,SAAiB,CAACC,EAAKoH,KAChC,MAAMY,EAAOnE,EACD,SAARA,EACEzH,KAAKmI,MAAM0D,oBAAsB,EACjC7L,KAAKmI,MAAM0D,oBAAsB,EACnC7L,KAAKmI,MAAM0D,oBACf,EAAAvI,mBAAmBC,QAAQqI,EAAM5L,KAAKmI,MAAM2D,qBAAqBZ,MAC/D3J,MAAMwK,IACJ,MAAM,MAAEC,EAAK,KAAEC,GAASF,EAExB,GADA/L,KAAKmI,MAAM+D,gBAAgBC,OAAOC,SAASJ,EAAO,KACrB,IAAzBD,EAASE,KAAKT,OAAc,CAC9B,GAAI/D,EAEF,YADAuD,IAIF,GAAIY,EAAO,EAGT,aAFM5L,KAAKmI,MAAMS,cAAc,aAC/BhF,GAAI,GAIR5D,KAAKqM,wBAECrM,KAAK+H,mBAAmBuE,mBAC9B,MAAMC,EAA2C,GAEjDN,EAAK7C,SAAQ,CAACzD,EAAKmD,KACjB,MAAMc,EAAQ,IAAI,EAAA4C,UACZC,EAAU,IAAI,EAAAC,QAAQ/G,EAAKmD,EAAQ,GACzCc,EAAM+C,SAASF,GACfF,EAAaK,KAAK,CAAEhD,QAAOjE,IAAK8G,OAGlCzM,KAAK+H,mBAAmB8E,gBAAgBN,GACxCvM,KAAK+H,mBAAmBL,aACxB1H,KAAKwK,SACL5G,GAAI,SAMJ,kBACN,MAAM7C,EAAM,IAAI,EAAAsF,8BAChBrG,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,YAMxB,SACN9M,KAAK+M,WAEL,MAAMC,EAAWhN,KAAKiN,eACtBjN,KAAKkN,mBAAmBF,GAExBhN,KAAKmN,aACLnN,KAAKoN,eAIC,WACN,KAAOpN,KAAK8G,gBAAgBuG,YAC1BrN,KAAK8G,gBAAgBuG,WAAWzI,SAClC,KAAO5E,KAAK+G,aAAasG,YAAYrN,KAAK+G,aAAasG,WAAWzI,SAK5D,eACN,MAAM0G,EAAQ/I,OAAO+K,iBAAiBtN,KAAK8G,iBACrCyG,EACJpB,OAAOqB,WAAWlC,EAAMmC,QACxBtB,OAAOqB,WAAWlC,EAAMoC,eACxBvB,OAAOqB,WAAWlC,EAAMqC,YAKpBC,EAJiBC,KAAKC,IAC1BvL,OAAOwL,WAAalH,EAAyBmH,gBAC7CnH,EAAyBoH,eAGRpH,EAAyBqH,cACtCC,EAAoB,GAC1B,IAAIC,EAAY,EAChB,MAAMC,EAAY,IAAIrO,KAAK+H,mBAAmBC,gBAE9CqG,EAAUjF,SAAQ,CAACkF,EAAUxF,KAC3B,MAAMyF,EAAS1H,EAAyB2H,cAAgB1F,EAClD2F,EAAiBb,EAAkBW,EACzCH,GAAaK,EACbN,EAAQvB,KAAK6B,MAGf,MAAMC,EAAeN,EAAYb,EAC3BoB,EAAkBR,EAAQS,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IAC7CC,EACJL,EAAe,EACXA,EAAe1O,KAAK+H,mBAAmBC,eAAeC,KACtDpB,EAAyBmI,kCACzB,EAEAC,EAA0B,GAC1BC,GAAYb,EAAU7C,OAAS,GAAK,EAE1C6C,EAAUjF,SAAQ,CAACkF,EAAUxF,KAC3B,MACMqG,EACJJ,IAFWjG,EAAQoG,GAEQrI,EAAyBuI,iBACtDH,EAAcrC,KAAKuC,MAGrB,MAAME,EACHV,EAAgB,GAAgB9H,EAAyBqH,cACtDoB,EACHzI,EAAyB0I,mBAAqBhN,OAAOwL,WACtDlH,EAAyB2I,sBAE3B,MAAO,CACLC,aAAcd,EACdM,gBACAI,cACAC,gBAKI,mBAAmBtC,GACzB,MAAMqB,EAAY,IAAIrO,KAAK+H,mBAAmBC,gBAE9CqG,EAAUjF,SAAQ,CAACkF,EAAUxF,KAC3BwF,EAAS1E,MAAMnK,YAAY6L,MAAMC,YAC/B,SACA,GAAGyB,EAASyC,aAAa3G,QAG3BwF,EAAS1E,MAAMnK,YAAY6L,MAAMC,YAC/B,MACA,GAAGyB,EAASiC,cAAcnG,QAG5BwF,EAAS1E,MAAMnK,YAAY6L,MAAMC,YAAY,UAAW,GAAGzC,EAAQ,KAEnEwF,EAAS1E,MAAMnK,YAAY6L,MAAMC,YAC/B,cAEGyB,EAASyC,aACRzC,EAASyC,aAAajE,OAAS,EAAI1C,GAEnCjC,EAAyBqH,cAC3BlB,EAASqC,YACTrC,EAASsC,cAAgBjB,EAAU7C,OAAS,EAAI1C,GANlD,SAaE,aACN9I,KAAK8G,gBAAgB1E,OACnBpC,KAAKoH,kBACF,IAAIpH,KAAK+H,mBAAmBC,gBAAgB0H,KAC7CpB,GAAYA,EAAS1E,MAAMnK,eAMzB,eACN,MAAM4O,EAAY,IAAIrO,KAAK+H,mBAAmBC,gBAC9ChI,KAAKuH,UAAY8G,EAAUqB,KAAI,CAACpB,EAAUxF,KACxC,MAAMuC,EAAQrL,KAAK6I,kBAAkByF,EAAS3I,IAAKmD,EAAQ,GAE3D,OADA9I,KAAK0J,mBAAmB2B,EAAOiD,EAAS1E,OACjCyB,KAETrL,KAAK+G,aAAa3E,UAAUpC,KAAKuH,YAzarC,6BACkB,EAAA6H,kBAAoB,GAEpB,EAAApB,gBAAkB,GAElB,EAAAC,cACd,KAAOpH,EAAyBmH,gBAElB,EAAAgB,kCAAoC,EAEpC,EAAAO,mBAAqB,GAErB,EAAAC,sBAAwB,KAExB,EAAAtB,cAAgB,KAEhB,EAAAM,aAAe,K,6GCrDjC,gBACA,UACA,UAIA,UAGA,IAAYmB,KAAA,EAAAA,uBAAA,EAAAA,qBAAoB,KAC9B,mCACA,mCAGF,MAAaC,EAAb,cAuLU,KAAAC,qBAAuB,CAC7BC,EACAC,EACAC,KAEA,MAAM/M,EAAQ,IAAI,EAAAgN,iCAElB,OADAhN,EAAME,QAAQ,yCAAyC+M,YAAY,GAC5D,IAAIvM,SAAiBC,IAC1B,MAAMuM,EAAYC,KAAKC,MACvB,IACIC,EADAC,GAAc,EAElB,MAAMC,EAAU,KACdD,GAAc,EACVD,GAAUG,cAAcH,GAC5BrN,EAAMS,OACNE,GAAI,IAkBNoM,GAAYrH,SAAQ,KAClB6H,OAEF3M,YAAW,KAlBTyM,EAAWI,aAAY,KACrB,GAAIH,EAEF,YADAE,cAAcH,GAGhBrN,EAAMG,OACN,MACMuN,EADWP,KAAKC,MACSF,EAC/B,GAAIQ,EAAcb,EAAU,CAC1B,MAAMc,EAAYD,EAAcb,EAAY,IAC5C7M,EAAMiN,YAAYU,QACbJ,MACNV,EAAW,MAQbC,OAhNA,SACL,OAAK/P,KAAKsO,SAIZ,kBAAkBA,GAChB,GAAItO,KAAKsO,SAAU,MAAM,IAAIuC,MAAM,kBACnC7Q,KAAKsO,SAAWA,EAGlB,uBACEtO,KAAKsO,cAAW3C,EAGlB,6BAA6BmF,GA0B3B,OAzBmB,IAAInN,SAGpB,CAACC,EAAKoH,KACH8F,GAAO9Q,KAAKsO,UAAU3I,IAAIoL,cAC9B,MAAMC,EAAc,EAAAC,YACpBjR,KAAKkR,YAAcF,EACnBxN,QAAQC,IAAI,UACZzD,KAAKmR,gBAAkBnR,KAAKoR,oBACzBlG,MAAKmG,IACJ7N,QAAQC,IAAI,WACRuN,IAAgBhR,KAAKkR,aAAalG,EAAI,IAAI6F,MAAM,gBAEpD,MAAMS,EAAetR,KAAKuR,MAAMF,EAAaL,EAAaF,GAC1DlN,EAAI,CACFyN,cACAC,oBAGH1O,OAAOC,IACNW,QAAQC,IAAIZ,GACRmO,IAAgBhR,KAAKkR,YAAalG,EAAI,IAAI6F,MAAM,gBAC/C7F,EAAInI,SAMT,0BACN,IAAK7C,KAAKsO,SAAU,MAAM,IAAIuC,MAAM,wBAChC7Q,KAAKsR,oBAAoB3N,QAAQ6N,WAAW,CAACxR,KAAKsR,eACtD9N,QAAQC,IAAI,eACZ,MAAM,IAAEkC,GAAQ3F,KAAKsO,SASrB,OARA3I,EAAI8L,kBAAiB,SACA,EAAAC,mBAAmBC,aACtC3R,KAAKsO,SAAS3I,IAAIiM,QAAQC,GAC1B,WACAlJ,SAAQ,KACRhD,EAAI8L,kBAAiB,MAMlB,oBACL,OAAQzR,KAAKkR,YAIf,sBAEE,GADAlR,KAAKkR,iBAAcvF,EACf3L,KAAKsO,SAEP,GADItO,KAAKmR,uBAAuBnR,KAAKmR,gBACjCnR,KAAKsR,aAAc,CACrB9N,QAAQC,IAAI,SAAUzD,KAAKsO,gBACrBtO,KAAK8R,SAAQ,GAAM,GACzBtO,QAAQC,IAAI,SAAUzD,KAAKsO,gBACrBtO,KAAKsO,SAAS3I,IAAIoM,SAAS/R,KAAKsR,cACtC9N,QAAQC,IAAI,SAAUzD,KAAKsO,UAC3B,MAAM0D,EAAW3K,SAASC,cAAc,OACxC0K,EAAS1G,MAAMC,YAAY,SAAU,QACrCyG,EAAS1G,MAAMC,YAAY,QAAS,OACpCyG,EAAS1G,MAAMC,YAAY,WAAY,YACvCyG,EAAS1G,MAAMC,YAAY,QAAS,OACpCyG,EAAS1G,MAAMC,YAAY,MAAO,QAClCyG,EAAS1G,MAAMC,YAAY,YAAa,0BACxCvL,KAAKsO,SAAS1E,MAAMnK,YAAY2C,OAAO4P,GACvC,MAAM/O,EAAQ,IAAI,EAAAgN,iCAElBhN,EACGE,QACC,iHAGDC,KAAK4O,GACR,MAAM1B,EAAWtQ,KAAKiS,eAAehP,SAC/BjD,KAAKsO,SAAS3I,IAAIuM,iBAAiBlS,KAAKsR,cAC1ChB,GAAU6B,aAAa7B,GAC3BrN,EAAMS,OACNsO,EAASpN,oBAEH5E,KAAK8R,SAAQ,GAAO,SACpB9R,KAAKsO,SAAS3I,IAAIoM,WAG5B,OAAO,EAGD,eACN9O,GAEA,MAAMqN,EAAWI,aAAY,KAC3B,GAAI1Q,KAAKoS,cAAgBpS,KAAKqS,UAAW,CACvC,MAAMzB,GACFR,KAAKC,MAAQrQ,KAAKqS,WAAarS,KAAKoS,aAAgB,IACxDnP,EAAMiN,YAAYU,QACbH,cAAcH,KACpB,KACH,OAAOA,EAGD,YACNe,EACAiB,EACAxB,GAEA,OAAO,IAAInN,SAAwB,CAACC,EAAKoH,KACvC,GAAIhL,KAAKsO,SAAU,CACjB,MAAM,SAAEA,GAAatO,KACfuS,EAAO3C,EAAa4C,mBAAmBnB,GAC7CrR,KAAKqS,UAAYjC,KAAKC,MACtBrQ,KAAKoS,aAAsB,IAAPG,EACpB,MAAME,EAAQrC,KAAKC,MACnB7M,QAAQC,IAAI,oBACZzD,KAAKsR,aAAe,EAAAI,mBAAmBgB,eACrCpE,EAAS3I,IAAIiM,QAAQC,IACrB3G,MAAKyH,IAEDrE,IAAatO,KAAKsO,UAClBgE,IAAYtS,KAAKkR,YAEnBlG,EAAI,IAAI6F,MAAM,gBACL8B,GACT/O,EAAI2O,GACJ/O,QAAQC,IAAI,mBACZzD,KAAK8R,SAAQ,GAAM,GAAM,EAAOhB,KAEhCtN,QAAQC,IAAI,mBACZzD,KAAK8R,SAAQ,GAAM,GAAO,EAAMhB,GAChClN,GAAI,IAENJ,QAAQC,IAAI,qBAAoB2M,KAAKC,MAAQoC,OAE/CnE,EAAS3I,IACNiN,YAAYL,GAAOzB,GACnBlO,OAAM,KACLgB,GAAI,MAELsH,MAAK3J,MAAMsR,IACNA,GAAgBA,EAAe,IACjC7S,KAAK8R,SAAQ,GAAM,GAAM,EAAOhB,SACC9Q,KAAK6P,qBAC7B,IAAP0C,EACA,IACAvS,KAAKsR,eAGLtG,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,8BAInCgI,EAAI,IAAI6F,MAAM,cA8CjB,cACNiC,GAAW,EACXC,GAAW,EACXC,GAAS,EACTlC,GAEA,GAAI9Q,KAAKsO,SAAU,CACjB,IAAK0E,IAAWF,EAAU,CACxB,MAAM/G,QAAiB,EAAA2F,mBAAmBC,aACxC3R,KAAKsO,SAAS3I,IAAIiM,QAAQC,GAC1B,WAEFrO,QAAQC,IAAI,oBAAqBsI,GAGnC,aADM/L,KAAKsO,SAAS3I,IAAIsN,KAAKF,EAAUC,EAAQlC,IACxC,EAET,MAAM,IAAID,MAAM,UAGV,0BAA0BqC,GAEhC,OADaA,EAAOC,SAAW,IAAOD,EAAOE,UAtPjD,kB,sLCVA,eAKA,UACA,SACA,UAEA,UACA,UAEA,aACA,SACA,UACA,UAEA,UAIA,UACA,UAIA,UAkBA,2BAeE,YACmBtM,EACAC,EACAsM,GAFA,KAAAvM,kBACA,KAAAC,eACA,KAAAsM,iBAjBT,KAAApM,IAAM,IAAIC,IAEV,KAAAmH,UAAY,IAAInH,IAEhB,KAAAoM,YAAc,IAAIpM,IAElB,KAAAqM,YAAc,IAAIC,IAElB,KAAAC,cAAgB,IAAID,IAIpB,KAAAE,YAAc,IAAI,EAAAC,kBA2CpB,KAAAC,qBAAwBnR,IAC9B,GAAIA,EAAEoR,kBAAkBC,YAAa,CACnC,MAAMC,EAAOtR,EAAEoR,OACf,IAAIxK,EAEA0K,aAAgBC,kBAAmB3K,EAAM0K,EACpCA,EAAKE,yBAAyBD,oBACrC3K,EAAM0K,EAAKE,eAET5K,IAAwB,IAAjBA,EAAI6K,UACblU,KAAKqO,UAAUjF,SAAQkF,IACrB,IAAItO,KAAKmU,WAAT,CACA,GAAI9K,IAAQiF,EAAS3I,IAAIqD,UAIzB,OAAIK,IAAQiF,EAAS3I,IAAIwD,OACvBmF,EAAS3I,IAAIwD,MAAM+K,UAAW,OAC9BlU,KAAKoU,eAAe9F,IAGlBjF,IAAQiF,EAAS3I,IAAIsD,UACvBqF,EAAS3I,IAAIsD,SAASiL,UAAW,OACjClU,KAAKqU,aAAa/F,SAGhBjF,IAAQiF,EAAS3I,IAAIuD,WACvBoF,EAAS3I,IAAIuD,SAASgL,UAAW,EACjClU,KAAKsU,mBAAmBhG,KAfxBtO,KAAKuU,gBAAgBjG,SAwIvB,KAAAkG,oBAAsBjT,UACrB,EAoKD,KAAAkT,aAAelT,MACrB+M,EACAiE,EACAzB,KAEAA,EAAM4D,iBAAkB,EACxB1U,KAAK8G,gBAAgBhF,UAAUC,IAC7B,UAAO,mCAET,MAAMuJ,EAAQ/I,OAAO+K,iBAAiBtN,KAAK8G,gBAAiB,WACtD6N,EAAW,EAAAC,sBAAsBtJ,EAAO,SAC9C,GAAIqJ,EAAU,CACZ,MAAME,EAAY1I,OAAOqB,WAAWmH,GAChCE,EAAY,SACR,IAAIlR,SAAQC,GAAOC,WAAWD,EAAiB,IAAZiR,KAE7C7U,KAAK8G,gBAAgBhF,UAAU8C,OAC7B,UAAO,mCAETkM,EAAMgE,aAAc,EACpB,MAAMC,EAAYzG,EAAS3I,IAAIiM,QAC/B5R,KAAK0T,YAAYsB,QACfD,EACAxC,EAAK0C,QAAQ,GACb3G,EAAS3I,IAAImD,OAAOU,YAEtBxJ,KAAK8G,gBAAgB1E,OAAOpC,KAAK0T,YAAYjU,aAC7C,EAAAyV,oBAAoBC,UAAUJ,EAAUlD,IACrC3G,MAAKkK,IACJ,MAAMC,EAAmC,CACvCxD,GAAIuD,EAAavD,GACjByD,KAAMF,EAAaE,KAAO,EAC1B/C,KACEA,EAAO6C,EAAa7C,KAChBpG,OAAOqB,WAAW+E,EAAK0C,QAAQ,IAC/BG,EAAa7C,MAErB,EAAA2C,oBAAoBK,aAAaF,MAElCzS,OAAOC,IACN,GAAIA,EAAMC,UAAY,EAAAC,kBAAkByS,UAAW,CACjD,MAAMC,EAA+B,CACnC5D,GAAIkD,EAAUlD,GACdyD,KAAM,EACN/C,KAAMpG,OAAOqB,WAAW+E,EAAK0C,QAAQ,KAEvC,EAAAC,oBAAoBQ,aAAaD,QA5YvCzV,KAAK+G,aAAavE,iBAAiB,QAASxC,KAAK4T,sBACjD5T,KAAK0T,YAAYjU,YAAYqC,UAAUC,IAAI,UAAO,yBAGpD,YAAY0I,GACV,MAAM5J,EAAK4J,EAAIrG,SAAS,qBACxBpE,KAAKiH,IAAIlF,IAAIlB,GAGR,eACL,OAAOb,KAAKqO,UAGP,YAAY1I,GACjB3F,KAAKqO,UAAUjF,SAAQkF,IACjBA,EAAS3I,IAAIiM,QAAQC,KAAOlM,EAAIkM,IAClC7R,KAAKuT,YAAYoC,IAAIrH,IAAWsH,oBAItC,uBAAuBvH,GACjBA,GACFrO,KAAK6V,kBAAkBxH,GACvBA,EAAUjF,SAAQkF,IAChBtO,KAAKqO,UAAUyH,OAAOxH,QAGxBtO,KAAK6V,kBAAkB7V,KAAKqO,WAC5BrO,KAAKqO,UAAU0H,SAInB,gBAAgBC,GACdA,EAAU5M,SAAQ6M,GAAejW,KAAKqO,UAAUtM,IAAIkU,KAsCtD,iBAAiBC,GACVA,IAAgBlW,KAAKmU,gBAAaxI,GACvC3L,KAAK0T,YAAYjU,YAAYmF,SAC7B5E,KAAK8G,gBAAgBhF,UAAU8C,OAC7B,UAAO,yCAEH5E,KAAKmW,eACXnW,KAAKoW,sBAAsB,uBAEtBF,GACHlW,KAAKqW,oBAAoB,eAIrB,yBAAyB/H,GAC/B,MAAMgI,EAAStW,KAAKuT,YAAYoC,IAAIrH,GAChCgI,UACIA,EAAOC,sBACPvW,KAAKwW,yBAIP,8BACa,IAAIxW,KAAKuT,aAAakD,OAAMnI,GAC7CA,EAAS,GAAGoI,uBAGZ1W,KAAKoW,sBAAsB,uBAIvB,mBACN9H,EACAwC,GAEA,IAAI6F,EAAgB3W,KAAKuT,YAAYoC,IAAIrH,GAwBzC,OAtBKqI,IAEHA,EAAgB,IAAI3W,KAAKsT,aAAasD,MAAKN,GAAUA,EAAOO,WAExDF,EACF3W,KAAKsT,YAAYwC,OAAOa,GAExBA,EAAgB,IAAI,EAAA/G,aAGtB5P,KAAKuT,YAAYuD,IAAIxI,EAAUqI,GAE/BA,EAAcI,kBAAkBzI,IAGlCtO,KAAKyT,cAAcqD,IAAIxI,EAAUqI,GACD,IAA5B3W,KAAKyT,cAAcxL,aACfjI,KAAKoW,sBAAsB,oBAC3BpW,KAAKgX,uBAAuB,kBAC5BhX,KAAKoW,sBAAsB,cAG5BO,EACJM,uBAAuBnG,GACvB5F,MAAKa,IACJA,EAASuF,aAAa3I,SAAQ,KAC5B3I,KAAKyT,cAAcqC,OAAOxH,GAC1B9K,QAAQC,IAAI,mBAAmBzD,KAAKyT,cAAcxL,QAElB,IAA5BjI,KAAKyT,cAAcxL,OACrBjI,KAAKgX,uBAAuB,WAC5BhX,KAAKoW,sBAAsB,wBAGxBrK,KAERnJ,OAAMC,IASL,MARA7C,KAAKyT,cAAcqC,OAAOxH,GAEM,IAA5BtO,KAAKyT,cAAcxL,OACrBjI,KAAKgX,uBAAuB,WAC5BhX,KAAKoW,sBAAsB,qBAG7B5S,QAAQC,IAAI,mBAAmBzD,KAAKyT,cAAcxL,QAC5CpF,KAIJ,4BAA4B4D,GAClC,MAAM1F,EAAM,IAAI,EAAA6F,uBAAuBH,GACjCyQ,EAAoC,GAS1C,OARAlX,KAAKiH,IAAImC,SAAQvI,IACf,MAAMsW,EAAItW,EAAGC,SAAS,CACpBC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,YAE5B6V,EAActK,KAAKuK,MAEdxT,QAAQ6N,WAAW0F,GAGpB,6BAA6B1R,GACnC,MAAMzE,EAAM,IAAI,EAAAqW,0BAA0B5R,EAAQxF,KAAKwU,qBACjD0C,EAAoC,GAS1C,OARAlX,KAAKiH,IAAImC,SAAQvI,IACf,MAAMsW,EAAItW,EAAGC,SAAS,CACpBC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,YAE5B6V,EAActK,KAAKuK,MAEdxT,QAAQ6N,WAAW0F,GAOpB,eAAe5I,GACrB,EAAAhL,mBAAmB+T,UAAU/I,EAAS3I,IAAIiM,QAAQC,IAAI3G,MAAK3J,gBACnD,EAAA2T,oBAAoBoC,aAAahJ,EAAS3I,IAAIiM,QAAQC,IAAIjP,OAC9D,SAEF5C,KAAK6V,eAAevH,GACpBtO,KAAKqO,UAAUyH,OAAOxH,GACtB,MAAMvN,EAAM,IAAI,EAAA8E,2BACdyI,EAAS3I,IAAIiM,QACbtD,GAEFtO,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,eAM1B,gBAAgBwB,GACtB,MAAMvN,EAAM,IAAI,EAAAiF,4BACdsI,EAAS3I,IAAIiM,QACb5R,KAAKuX,kBAAkBjJ,IAEzBtO,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,YAKxB,qBACN9M,KAAK8G,gBAAgBhF,UAAU8C,OAC7B,UAAO,mCAET5E,KAAK8G,gBAAgBwE,MAAMC,YAAY,gBAAiB,OAExD,MAAMiM,EAAgC,GACtCxX,KAAKuT,YAAYnK,SAAQkN,IACvBkB,EAAU5K,KAAK0J,EAAOC,oBAExB/S,QAAQC,IAAI,WAAY+T,SAClB7T,QAAQ8T,IAAID,GAClBhU,QAAQC,IAAI,kBAGd,oBAEE,MAAMiU,EAAa,EAAAzG,YAInB,GAHAjR,KAAKmU,WAAauD,QACZ1X,KAAK0H,YAAW,GAElBgQ,IAAe1X,KAAKmU,WAAY,OAGpC,MAAMwD,EAAqB,CACzBC,OAAQF,EACRG,eAAgB,GAChBC,WAAY,GACZC,kBAAmB/X,KAAKqO,UAAUpG,KAClC6I,MAAO,CACLkH,SAAUhY,KAAK8G,gBACf4N,iBAAiB,GAEnBuD,aAAc,GAEhBjY,KAAKqW,oBAAoB,oBACnBrW,KAAKkY,YAAYP,GACpB/U,OAAOC,IACN,GAAM6U,IAAe1X,KAAKmU,WAAa,MAAMtR,KAE9C8F,SAAQ,KACP3I,KAAK8G,gBAAgBhF,UAAU8C,OAC7B,UAAO,sCAKT8S,IAAe1X,KAAKmU,YAIxBnU,KAAKqW,oBAAoB,cAInB,oBAAoB5P,GAC1B,MAAM1F,EAAM,IAAI,EAAAyF,2BAA2BC,GAC3CzG,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,YAMxB,YAAY6K,GAClB,OAAO,IAAIhU,SAA0BC,IACnC5D,KAAKqO,UAAUjF,SAAQkF,IACrBtO,KAAKqU,aAAa/F,EAAUqJ,EAAS7G,OAAO5F,MAAKa,IAC/C,GAAI4L,EAASC,SAAW5X,KAAKmU,WAA7B,CAYA,GAPIwD,EAASM,eAAiBN,EAASI,kBAAoB,GACzD/X,KAAK8G,gBAAgBhF,UAAUC,IAC7B,UAAO,mCAET4V,EAAS7G,MAAMgE,aAAc,GACxB6C,EAASM,eAEVlM,aAAoB8E,MAoBxB,MAAM9E,EAnBNA,EAASuF,aACNpG,MAAKiN,GACJnY,KAAKoY,kBAAkBT,EAAUrJ,EAAU6J,KAE5CvV,OAAOC,IACgB,gBAAlBA,EAAMC,SAA2Bc,GAAI,MAE1C+E,SAAQ,KACPnF,QAAQC,IAAIkU,GAEVA,EAASE,eAAerM,OACtBmM,EAASG,WAAWtM,SACtBmM,EAASI,oBAETvU,QAAQC,IAAIkU,GACZ/T,EAAI+T,YA3BV/T,GAAI,YAsCN,kBACN+T,EACArJ,EACA6J,GAEIR,EAASC,SAAW5X,KAAKmU,cACd,IAAXgE,GACqC,IAAnCR,EAASE,eAAerM,QAC1BxL,KAAKyU,aAAanG,EAAU6J,EAAQR,EAAS7G,OAE/C6G,EAASE,eAAejL,KAAK0B,IAE7BqJ,EAASG,WAAWlL,KAAK0B,IAuDrB,kBAAkBD,GACxBA,EAAUjF,SAAQkF,IAChB,MAAMgI,EAAStW,KAAKuT,YAAYoC,IAAIrH,GAChCgI,GACFA,EAAOV,iBAAiB1K,MAAK,KAC3BlL,KAAKuT,YAAYuC,OAAOxH,GACxBtO,KAAKsT,YAAYvR,IAAIuU,SAMrB,kBAAkBhI,GACxB,OAAQ3I,IACD3F,KAAKqO,UAAUgK,IAAI/J,IACxBA,EAAS3I,IAAI2S,WAAW3S,O,8KCpe9B,gBACA,UAKA,UACA,QAEA,aAEA,UAEA,MAAarB,UAAmB,EAAAiU,SAe9B,cACEnT,MAAM,WAfC,KAAA1F,QAAU,EAAAC,eAAeyG,OAI1B,KAAAoS,qBAAsB,EAEtB,KAAAC,iBAAmB,IAAI,EAAAC,iBAEvB,KAAAC,cAAgBtR,SAASC,cAAc,OAEvC,KAAAsR,QAAUvR,SAASC,cAAc,SAEjC,KAAArE,MAAQ,IAAI,EAAAgN,iCAqDZ,KAAA4I,wBAA0B,KAChC,GAAI7Y,KAAK4Y,QAAQE,SAAStN,OAAS,EAAG,CACpC,MAAMoF,EACH5Q,KAAK4Y,QAAQE,SAASC,IAAI,GAAK/Y,KAAK4Y,QAAQjE,SAAY,IAC3D3U,KAAKiD,MAAMiN,YAAYU,KAInB,KAAAoI,uBAAyBzX,UAC/BvB,KAAK4Y,QAAQnN,oBACX,iBACAzL,KAAKgZ,wBAEPhZ,KAAK4Y,QAAQnN,oBAAoB,WAAYzL,KAAK6Y,yBAClD7Y,KAAKiD,MAAMiN,YAAY,KAAK+I,QAAQvV,OACpC1D,KAAKwY,0BAA4BxY,KAAKkZ,WAAWC,gBAQnD,KAAApU,OAASxD,UACP,IACEvB,KAAK4Y,QAAQQ,OACb,OAGGpZ,KAAKwY,sBACRxY,KAAKwY,0BAA4BxY,KAAKkZ,WAAWC,iBA/EnD3V,QAAQC,IAAI,QACZzD,KAAKiD,MAAME,QAAQ,cAAc+M,YAAY,GAAG9M,OAChDpD,KAAKqZ,aAAavX,UAAUC,IAAI,UAAOuX,QAEvC,MAAMC,EAAgBlS,SAASC,cAAc,OAC7CiS,EAAczX,UAAUC,IAAI,UAAO,+BACnCwX,EAAcnX,OAAOpC,KAAKyY,iBAAiBhZ,aAE3C,MAAM+Z,EAAKnS,SAASC,cAAc,OAClCkS,EAAG1X,UAAUC,IAAI,UAAO0X,WAAY,UAAO,cAC3CD,EAAGpX,OAAOpC,KAAK4Y,QAASW,GAExB,MAAMzS,EAAkBO,SAASC,cAAc,OAC/CR,EAAgBhF,UAAUC,IACxB,UAAO,2BACP,UAAO,yBAGT/B,KAAK2Y,cAAc7W,UAAUC,IAAI,UAAO,+BAExC/B,KAAKkZ,WAAa,IAAI,EAAArS,yBACpBC,EACA9G,KAAK2Y,eAGP3Y,KAAK0Z,eAEL1Z,KAAKqZ,aAAajX,OAAOoX,EAAI1S,EAAiB9G,KAAK2Y,eAG7C,eACN3Y,KAAK4Y,QAAQpW,iBAAiB,WAAYxC,KAAK6Y,yBAC/C7Y,KAAK4Y,QAAQpW,iBACX,iBACAxC,KAAKgZ,wBAEPhZ,KAAK2Z,gBAGC,gBACN3Z,KAAK4Y,QAAQ9W,UAAUC,IAAI,UAAO,qBAClC/B,KAAK4Y,QAAQgB,UAAW,EACxB5Z,KAAK4Y,QAAQiB,MAAO,EACpB7Z,KAAK4Y,QAAQkB,cAAe,EAC5B9Z,KAAK4Y,QAAQmB,OAAQ,EACrB/Z,KAAK4Y,QAAQoB,UAAW,EACxBha,KAAK4Y,QAAQqB,IAAM,8CAqBrB,QAAQxP,GACNA,EAAIyP,aAAala,KAAKkZ,YACtBzO,EAAIyP,aAAala,KAAKyY,mBAtF1B,gB,2KCZA,gBACA,UAEA,UACA,aACA,aAEA,MAAa/L,UAAgB,EAAA6L,SAsC3B,YAAoB4B,EAA6BrR,GAC/C1D,MAAM,OADY,KAAA+U,WAA6B,KAAArR,QAxBvC,KAAAsR,OAAS/S,SAASC,cAAc,UAEhC,KAAA+S,SAAWhT,SAASC,cAAc,OAEpC,KAAAgT,WAAajT,SAASC,cAAc,UAEpC,KAAAiT,OAASlT,SAASC,cAAc,UAEhC,KAAAkT,aAAenT,SAASC,cAAc,QAEtC,KAAAmT,UAAYpT,SAASC,cAAc,UAEnC,KAAAoT,UAAYrT,SAASC,cAAc,UAMnC,KAAAqT,WAAY,EAIZ,KAAAC,gBAAkB,UAAa,kCAqL/B,KAAAC,kBAAqBhM,IAC3B,MAAMiM,EAAOjM,EACT,iBAAkBiM,GAAqC,mBAAtBA,EAAKC,cACxCD,EAAKC,gBAnLP/a,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,YACvC/B,KAAKoa,OAAOtY,UAAUC,IAAI,UAAO,oBACjC/B,KAAKqZ,aAAajX,OAAOpC,KAAKoa,QAE9B,MAAMY,EAAa3T,SAASC,cAAc,QACpC2T,EAAS5T,SAASC,cAAc,QAChC4T,EAAY7T,SAASC,cAAc,QACnC6T,EAAY9T,SAASC,cAAc,QAEzC0T,EAAWzR,YAAc,SACzB0R,EAAO1R,YAAc,SACrB2R,EAAU3R,YAAc,SACxB4R,EAAU5R,YAAc,QAExBvJ,KAAKsa,WAAWlY,OAAO4Y,GACvBhb,KAAKua,OAAOnY,OAAO6Y,GACnBjb,KAAK0a,UAAUtY,OAAO+Y,GACtBnb,KAAKya,UAAUrY,OAAO8Y,GAEtBlb,KAAK0a,UAAUxG,UAAW,EAE1BxH,EAAQ0O,QAAQpb,KAAKoa,OAAQpa,KAAKma,SAASkB,OAC3Crb,KAAKwa,aAAajR,YAAc,GAAGT,MAAUqR,EAAS9V,OACtDqI,EAAQ4O,WAAWtb,KAAKqZ,cAExBrZ,KAAKub,SAAW,IAAIC,kBAAiBC,IACnCA,EAAUrS,SAAQsS,IACZA,EAASC,UAAUC,SAAS5b,KAAK4a,kBACnC5a,KAAK6b,oBAAoBC,QACzB9b,KAAKub,SAASQ,cAEDL,EAAS7H,OACb/R,UAAUka,SAAShc,KAAK4a,kBAC/B5a,KAAKic,mBAOf,kBAAkBC,GAChB,MAAMC,EAAW,IAAIC,MACrBD,EAASlC,IAAMvN,EAAQ2P,kBACvBF,EAASG,OAAS,KAChBH,EAASra,UAAUC,IAAI,UAAO,mBAC9B,MAAMwa,EAAmB,EAAAC,cAAcC,UAAUN,GACjDA,EAASra,UAAUC,IAAI,UAAO,2BAC9Bwa,EAAiBza,UAAUC,IAAI,UAAO,4BAEtCma,EAAS9Z,OAAO+Z,GAChBD,EAAS9Z,OAAOma,IAIpB,WAAWG,GACT1c,KAAKma,SAAWuC,EAChBhQ,EAAQ0O,QAAQpb,KAAKoa,OAAQpa,KAAKma,SAASkB,OAC3Crb,KAAKwa,aAAajR,YAAc,GAAGvJ,KAAK8I,UAAU4T,EAAQrY,OAIrD,iBAAiB8G,GAClBA,EAAOnL,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,mBAC7C/B,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO,mBAG1C,eAAe+X,EAAkChZ,QAAQiZ,WAC9D,OAAO,IAAIjZ,SAAQC,IACCrC,WACXvB,KAAK2a,YACR3a,KAAKub,SAASQ,aACd/b,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO,yBACpC5E,KAAK6c,cACP7c,KAAK6b,qBACP7b,KAAK6b,mBAAmBiB,SAExB9c,KAAK6a,kBAAkB7a,KAAK6b,oBAC5B7b,KAAK6b,wBAAqBlQ,GAExB3L,KAAK+c,sBACD/c,KAAKiT,OACXjT,KAAK+c,cAAclK,cAAgB,GACnC7S,KAAK+c,cAAc3D,OACnB5V,QAAQC,IAAI,kBAAkBzD,KAAK8I,eAC7B9I,KAAK+c,cAAcC,SACzBhd,KAAK6a,kBAAkB7a,KAAK+c,eAC5B/c,KAAK+c,mBAAgBpR,EACrB3L,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO,yBAE5C5E,KAAKqZ,aAAa/N,MAAMI,eAAe,cACvC1L,KAAKqZ,aAAa/N,MAAMI,eAAe,mBACjC1L,KAAKid,aACXjd,KAAKqZ,aAAa/N,MAAMI,eAAe,WACvCiR,EAAchU,SAAQ,KACpB3I,KAAKya,UAAUvG,UAAW,EAC1BlU,KAAK0a,UAAUxG,UAAW,EAC1BlU,KAAKua,OAAOrG,UAAW,EACvBlU,KAAKsa,WAAWpG,UAAW,MAG/B1Q,QAAQC,IAAI,WAAWzD,KAAK8I,SAC5B9I,KAAK2a,WAAY,EACjB/W,GAAI,IAENsZ,MAIJ,oBACE,MAAMC,EAAUnd,KAAKqZ,aAAa+D,QAChC,CACE,CAAEC,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,MAEb,CACE1I,SAAU,IACV2I,OAAQ,SACRC,KAAM,mBAGJJ,EAAQH,SACdhd,KAAK6a,kBAAkBsC,GAGzB,uBAAuBK,GACrB,OAAO,IAAI7Z,SAAcC,IACvB,MAAM6Z,EAASzd,KAAKqZ,aAAa+D,QAC/B,CACE,CAAEC,QAAS,KACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,MAEb,CACE1I,SAAU,IACV2I,OAAQ,SACRC,KAAM,WACNG,WAAYvR,OAAOwR,oBAGvBH,EAAe7U,SAAQ,KACrB8U,EAAOX,SACP9c,KAAK6a,kBAAkB4C,GACvB7Z,UAKN,mBACE,MAAM6Z,EAASzd,KAAKqZ,aAAa+D,QAC/B,CACE,CAAEC,QAAS,KACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,OACX,CAAEA,QAAS,MAEb,CACE1I,SAAU,IACV2I,OAAQ,SACRC,KAAM,mBAGJE,EAAOT,SACbhd,KAAK6a,kBAAkB4C,GASjB,aAENzd,KAAK2a,WAAY,EACjB3a,KAAK6b,mBAAqB7b,KAAKqZ,aAAa+D,QAC1C,CAAC,CAAEQ,UAAW,uBACd,CACEjJ,SAAU,KACV2I,OAAQ,UACRC,KAAM,aAKL,cACLvd,KAAKya,UAAUvG,UAAW,EAC1BlU,KAAKua,OAAOrG,UAAW,EACvBlU,KAAKsa,WAAWpG,UAAW,EAC3BlU,KAAK0a,UAAUxG,UAAW,EAGrB,kBAAkB3B,EAAcsL,GAAa,GAGlD,OAFA7d,KAAK2a,WAAY,EAEV,IAAIhX,SAA4B,CAACC,EAAKoH,KAC7BoF,KAAKC,MACfwN,IACF7d,KAAKya,UAAUvG,UAAW,EAC1BlU,KAAKua,OAAOrG,UAAW,EACvBlU,KAAKsa,WAAWpG,UAAW,EAC3BlU,KAAK0a,UAAUxG,UAAW,GAE5B,MAAM4J,EAAYvb,OAAO+K,iBACvBtN,KAAKqZ,aAAapF,eAEd8J,EAAYxb,OAAO+K,iBAAiBtN,KAAKP,aAEzCue,EACJ7R,OAAOqB,WAAWsQ,EAAUG,OAC5B9R,OAAOqB,WAAWsQ,EAAUI,aAC5B/R,OAAOqB,WAAWsQ,EAAUK,cACxBC,EAAYjS,OAAOqB,WAAWuQ,EAAUE,OAExCI,GAAyBL,EAAYI,GAAaA,EAAa,IAErEpe,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,wBAEvC/B,KAAK+c,cAAgB/c,KAAKqZ,aAAa+D,QACrC,CAAC,CAAEQ,UAAW,cAAcS,QAC5B,CACE1J,SAAiB,IAAPpC,EAAc,IACxB+K,OAAQ,cACRC,KAAM,aAIVvd,KAAK+c,cAAcuB,SAAY7b,IAM7BmB,EAAI5D,KAAK+c,eAAelK,eAG1B7S,KAAK+c,cAAcwB,SAAW,KAE5Bve,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO,wBAC1CoG,QAKC,WACL+H,GAAW,EACXC,GAAS,EACTlC,GAkBA,GAdIiC,SACI,IAAIpP,SAAQC,IACsB,YAAlC5D,KAAK+c,eAAeyB,WAKtBxe,KAAK+c,cAAcva,iBAAiB,UAAU,IAAMoB,GAAI,KACxD5D,KAAK+c,cAAcva,iBAAiB,UAAU,IAAMoB,GAAI,MACnDA,GAAI,MAGf5D,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO,wBAC1C5E,KAAK+c,eAAejB,QAChB9I,EAAQ,CACV,GAAIlC,EAAO,CACT,MAAMkH,EAAWlH,EAAMkH,SACFA,EAASlW,UAAUka,SAAShc,KAAK4a,kBACpC5a,KAAKic,aACvBjc,KAAKub,SAASkD,QAAQzG,EAAU,CAC9B0G,YAAY,EACZC,mBAAmB,IAGvBnb,QAAQC,IAAI,YAAYzD,KAAK8I,SAC7B,MAAM8V,EAAM,IAAIxC,MAChB,IAAIyC,EAAc,EAClBD,EAAI9c,UAAUC,IAAI,UAAO,uBACzB6c,EAAI3E,IAAM,GAAGvN,EAAQoS,uBAAuBC,WAAWF,IAAcnS,EAAQoS,uBAAuBE,YACpGJ,EAAItC,OAAS/a,UACXvB,KAAKqZ,aAAajX,OAAOwc,SACnB,IAAIjb,SAAQC,GAChBC,WAAWD,EAAK8I,EAAQoS,uBAAuBG,iBAEjDJ,IACIA,EAAcnS,EAAQoS,uBAAuBI,aAC/CN,EAAI3E,IAAM,GAAGvN,EAAQoS,uBAAuBC,WAAWF,IAAcnS,EAAQoS,uBAAuBE,YAEpGJ,EAAIha,UAGR5E,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,oBAI3C,cACE,OAAO/B,KAAKma,SAGd,gBACE,OAAOna,KAAKsa,WAGd,YACE,OAAOta,KAAKua,OAGd,eACE,OAAOva,KAAKya,UAGd,eACE,OAAOza,KAAK0a,UAGd,kBACE,OAAO1a,KAAKwa,aAGd,eAAeJ,EAA2B+E,GACxC,MAAMP,EAAM,IAAIxC,MAChBwC,EAAI3E,IAAMvN,EAAQ0S,iBAClBR,EAAItC,OAAS,KACXlC,EAAO3M,OAASmR,EAAInR,OAAS,EAC7B2M,EAAO6D,MAAQW,EAAIX,MAAQ,EAC3B,MAAMoB,EAAMjF,EAAOkF,WAAW,MAE1BD,IACFA,EAAIE,YAAcJ,EAClBE,EAAIG,WAAa,GACjBH,EAAII,UAAUb,EAAK,EAAG,EAAGxE,EAAO6D,MAAO7D,EAAO3M,SAGhDf,EAAQgT,aAAatF,EAAQ+E,IAIjC,oBAAoB/E,EAA2B+E,GAC7C,MAAMQ,EAAYvF,EACfkF,WAAW,OACVM,aAAa,EAAG,EAAGxF,EAAO6D,MAAO7D,EAAO3M,QAC5C,GAAIkS,EAAW,CACb,MAAME,EAAM,EAAAC,SAASX,GACrB,IAAK,IAAIY,EAAI,EAAGA,EAAIJ,EAAU1B,MAAO8B,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUlS,OAAQuS,IAAK,CAEzC,MAAMlX,EAAY,EAAJkX,EAAQL,EAAU1B,MAAY,EAAJ8B,EAClCE,EAAMN,EAAUne,KAAKsH,GACrBoX,EAAQP,EAAUne,KAAKsH,EAAQ,GAC/BqX,EAAOR,EAAUne,KAAKsH,EAAQ,GAG9BsX,EAAW,EAAID,EAAOF,EAAMC,EAC5BG,EAAoB,GACpBC,EAAY,GAEhBL,EAAMK,GACNJ,EAAQI,GACRH,EAAOG,GACPF,EAAWC,IAEXV,EAAUne,KAAKsH,GAAUmX,EAAM,IAAOJ,EAAIU,EAC1CZ,EAAUne,KAAKsH,EAAQ,GAAMoX,EAAQ,IAAOL,EAAIW,EAChDb,EAAUne,KAAKsH,EAAQ,GAAMqX,EAAO,IAAON,EAAI/Q,GAKrDsL,EACGkF,WAAW,OACVmB,aAAad,EAAW,EAAG,EAAG,EAAG,EAAGvF,EAAO6D,MAAO7D,EAAO3M,SAIjE,kBAAkB9H,GAChB,MAAM8D,EAAYpC,SAASC,cAAc,OACnC8S,EAAS/S,SAASC,cAAc,UAKtC,OAJA8S,EAAOtY,UAAUC,IAAI,UAAO,oBAC5B0H,EAAUrH,OAAOgY,GACjB1N,EAAQ4O,WAAW7R,GACnBiD,EAAQ0O,QAAQhB,EAAQzU,EAAI0V,OACrB5R,GAjbX,YACkB,EAAAiX,gBAAkB,+BAElB,EAAAtB,iBAAmB,8BAEnB,EAAA/C,kBAAoB,mCAEpB,EAAAyC,uBAAyB,CACvCC,SAAU,gCACVC,UAAW,OACXE,aAAc,EACdD,cAAe,M,8FCjBnB,eAKA,SACA,UACA,UAKA,MAAa0B,UAA6B,EAAAC,gCAGxC,YAAYC,GACVzb,MAAMyb,EAASC,UAAWD,EAASE,WAAYF,EAASxX,KAHlD,KAAApC,IAAM,IAAIC,IAKhBlH,KAAKghB,iBAGC,iBACNhhB,KAAKqJ,IAAI7G,iBAAiB,SAAS,KACjC,IAAKxC,KAAKihB,iBAAkB,OAC5BjhB,KAAKqJ,IAAI6K,UAAW,EACpB,MAAMgN,EAAyB,CAC7B7c,KAAMrE,KAAK8gB,UAAUK,MACrB9F,MAAOrb,KAAK+gB,WAAWI,OAEzB,EAAA7d,mBAAmB8d,UAAUF,GAC1BhW,MAAKvF,IAEJ,MAAM5E,EAAM,IAAI,EAAA2E,2BAA2BC,GAC3C3F,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBogB,MAC1BlgB,SAAU,EAAAC,gBAAgB0L,eAI/BnE,SAAQ,KACP3I,KAAKqJ,IAAI6K,UAAW,QAK5B,YAAYzJ,GACV,MAAM5J,EAAK4J,EAAIrG,SAAS,yBACxBpE,KAAKiH,IAAIlF,IAAIlB,IArCjB,0B,uGCLA,wCAKE,YACYigB,EACAC,EACA1X,GAFA,KAAAyX,YACA,KAAAC,aACA,KAAA1X,MAPF,KAAAiY,aAAe,IAAI9N,IAEnB,KAAA+N,KAAO,CAACvhB,KAAK8gB,UAAW9gB,KAAK+gB,WAAY/gB,KAAKqJ,KAU9C,iBACR,OAAoC,IAAhCrJ,KAAK8gB,UAAUK,MAAM3V,SACvBxL,KAAK8gB,UAAUU,kBAAkB,wBACjCxhB,KAAK8gB,UAAUW,QAAU,GACzBzhB,KAAK8gB,UAAUG,iBACfjhB,KAAK8gB,UAAUY,gBAAgB,YACxB,GAKD,mBAAmBvW,GAC3BnL,KAAK8gB,UAAU5M,SAAW/I,EAC1BnL,KAAK+gB,WAAW7M,SAAW/I,EAC3BnL,KAAKqJ,IAAI6K,SAAW/I,EAGZ,gBACRnL,KAAKuhB,KAAKnY,SAAQuY,IAChB3hB,KAAKshB,aAAaxK,IAAI6K,EAAKA,EAAIzN,aAIzB,eACRlU,KAAKuhB,KAAKnY,SAAQuY,IAChB,MAAMxW,EAAQnL,KAAKshB,aAAa3L,IAAIgM,QACtBhW,IAAVR,IAAqBwW,EAAIzN,SAAW/I,MAE1CnL,KAAKshB,aAAavL,QAGpB,UACE/V,KAAK4hB,gBACL5hB,KAAK6hB,oBAAmB,GAG1B,SACE7hB,KAAK8hB,kB,8FC1DT,gBACA,UAIA,UAEA,SACA,UACA,UACA,UACA,UAKA,MAAaC,UACH,EAAAnB,gCAOR,YAAYC,GACVzb,MAAMyb,EAASC,UAAWD,EAASE,WAAYF,EAASxX,KAmBlD,KAAA2Y,mBAAqBzgB,MAAOC,IAC9BA,EAAKT,eAAe,EAAAsF,+BACtBrG,KAAKiZ,QAEA,EAAAtX,sBAAsBC,MAWvB,KAAAqgB,mBAAqB1gB,MAAOC,IAC9BA,EAAKT,eAAe,EAAAiF,8BACtBhG,KAAKkiB,WAAa,EAAA1F,cAAcC,UAAUjb,EAAKT,IAAI4E,KACnD3F,KAAKmiB,SAAW3gB,EAAKT,IAAIkF,cACzBjG,KAAK+gB,WAAWI,MAAQ3f,EAAKT,IAAI4E,IAAI0V,MACrCrb,KAAK8gB,UAAUK,MAAQ3f,EAAKT,IAAI4E,IAAItB,KACpCrE,KAAK6hB,oBAAmB,IAGxBrgB,EAAKT,eAAe,EAAA8E,4BACpBrE,EAAKT,IAAI4E,IAAIkM,KAAO7R,KAAKkiB,YAAYrQ,IAErC7R,KAAKiZ,QAGA,EAAAtX,sBAAsBC,MA/C7B5B,KAAKoiB,iBAGP,YAAY3X,GACV,MAAM4X,EAAe5X,EAAIzG,SACvBhE,KAAKiiB,mBACL,uBAEFxX,EAAIxG,OAAO,EAAAC,WAAWuB,WAAY4c,GAElC,MAAMC,EAAW7X,EAAIzG,SACnBhE,KAAKgiB,mBACL,wBAEFvX,EAAIxG,OAAO,EAAAC,WAAWkC,OAAQkc,GAUxB,QACNtiB,KAAKmiB,cAAWxW,EAChB3L,KAAKkiB,gBAAavW,EAClB3L,KAAK8gB,UAAUK,MAAQ,GACvBnhB,KAAK+gB,WAAWI,MAAQ,UACxBnhB,KAAK6hB,oBAAmB,GAqBlB,iBACN7hB,KAAK6hB,oBAAmB,GACxB7hB,KAAKqJ,IAAI7G,iBAAiB,SAAS,KAC5BxC,KAAKihB,mBACVjhB,KAAK6hB,oBAAmB,GACnB7hB,KAAKkiB,aACVliB,KAAKkiB,WAAW7G,MAAQrb,KAAK+gB,WAAWI,MACxCnhB,KAAKkiB,WAAW7d,KAAOrE,KAAK8gB,UAAUK,MACtC,EAAA7d,mBAAmBif,UAAUviB,KAAKkiB,YAC/BhX,MAAKvF,IACA3F,KAAKmiB,UAAUniB,KAAKmiB,SAASxc,MAElCgD,SAAQ,KACP3I,KAAK6hB,oBAAmB,YA1ElC,0B,yLCjBA,gBACA,UAKA,UAKA,UAEA,aACA,aAEA,MAAaW,UAA8B,EAAAjK,SAWzC,YAAYkK,EAA2BC,GACrCtd,MAAM,OAXC,KAAA1F,QAAU,EAAAC,eAAegjB,cAExB,KAAAC,UAAYvb,SAASC,cAAc,SAEnC,KAAAub,WAAaxb,SAASC,cAAc,SAEpC,KAAA+B,IAAMhC,SAASC,cAAc,UAMrCtH,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO+gB,MACvC9iB,KAAK4iB,UAAUH,KAAO,OACtBziB,KAAK4iB,UAAU9gB,UAAUC,IAAI,UAAO,eACpC/B,KAAK6iB,WAAWJ,KAAO,QACvBziB,KAAK6iB,WAAW/gB,UAAUC,IAAI,UAAO,gBACrC/B,KAAKqJ,IAAIE,YAAcmZ,EACvB1iB,KAAKqJ,IAAIvH,UAAUC,IAAI,UAAasH,KACpCrJ,KAAKqZ,aAAajX,OAAOpC,KAAK4iB,UAAW5iB,KAAK6iB,WAAY7iB,KAAKqJ,KAE/D,MAAMwX,EAA+C,CACnDC,UAAW9gB,KAAK4iB,UAChB7B,WAAY/gB,KAAK6iB,WACjBxZ,IAAKrJ,KAAKqJ,KAGZ,OAAQoZ,GACN,IAAK,SACHziB,KAAKkZ,WAAa,IAAI,EAAA6I,qBAAqBlB,GAC3C7gB,KAAKqJ,IAAIvH,UAAUC,IAAI,UAAa,WACpC,MACF,IAAK,SACL,QACE/B,KAAKkZ,WAAa,IAAI,EAAAyH,qBAAqBE,GAC3C7gB,KAAKqJ,IAAIvH,UAAUC,IAAI,UAAa,YAK1C,gBACE,OAAO/B,KAAKkZ,WAGd,QAAQzO,GACNzK,KAAKkZ,WAAWxO,YAAYD,IA9ChC,2B,gGChBA,gBACA,UAEA,MAAa3C,UAA+B,EAAA9C,QAC1C,YACWyB,EACAvB,EACAC,GAETC,MAAM,EAAAlB,WAAW4G,SAAU5F,EAAOC,GAJzB,KAAAsB,SACA,KAAAvB,QACA,KAAAC,qBAJb,4B,kLCHA,gBACA,UAKA,UACA,UACA,SAIA,UAEA,aACA,aACA,SACA,UAIA,UAMA,UACA,UACA,UAEA,UACA,UACA,UAEA,MAAauT,UAAyB,EAAAH,SAiBpC,cACEnT,MAAM,OAjBC,KAAA1F,QAAU,EAAAC,eAAeojB,cAE1B,KAAA9b,IAAM,IAAIC,IAEV,KAAA8b,gBAAkB,IAAI,EAAAR,sBAAsB,SAAU,UAEtD,KAAAS,gBAAkB,IAAI,EAAAT,sBAAsB,SAAU,UAEtD,KAAAU,QAAU7b,SAASC,cAAc,UAEjC,KAAA4B,SAAW7B,SAASC,cAAc,UAElC,KAAA6b,YAAc9b,SAASC,cAAc,UAErC,KAAArE,MAAQ,IAAI,EAAAgN,iCAqBZ,KAAAmT,sBAAwB7hB,UAC9BvB,KAAKmjB,YAAYjP,UAAW,EAC5B,MAAMnT,EAAM,IAAI,EAAA+G,uBAAuB,SACjCoP,EAAoC,GAC1ClX,KAAKiH,IAAImC,SAAQvI,IACf,MAAMwiB,EAAexiB,EAAGC,SAAS,CAC/BC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,YAE5B6V,EAActK,KAAKyW,YAEf1f,QAAQ6N,WAAW0F,GACzBlX,KAAKiD,MACFgW,QACA9V,QAAQ,+CACRC,aACGpD,KAAKsjB,SAAS,SAAK3X,EAAW3L,KAAKujB,OACzCvjB,KAAKiD,MAAMgW,QAAQvV,OACnB,MAAM8f,EAAa,IAAI,EAAA1b,uBAAuB,OAC9C9H,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,IAAKyiB,EACLxiB,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,YAG9B9M,KAAKmjB,YAAYjP,UAAW,GAGtB,KAAAqP,MAAS3S,IACf5Q,KAAKiD,MAAMiN,YAAYU,IAGjB,KAAA6S,kBAAoBliB,UAC1BvB,KAAKkjB,QAAQhP,UAAW,EACxBlU,KAAKmjB,YAAYjP,UAAW,EAC5B,MAAMnT,EAAM,IAAI,EAAAwF,sBAChBvG,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,gBAKxB,KAAAqiB,mBAAqBniB,UAC3BvB,KAAKkJ,SAASgL,UAAW,EACzBlU,KAAKmjB,YAAYjP,UAAW,EAC5B,MAAMnT,EAAM,IAAI,EAAA4F,yBAChB3G,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgBC,gBAqDxB,KAAAsiB,iBAAmB,KACzB,MAAMC,EAAqB,EAAAC,aAAa,EAAAC,oBAAoBtY,OAAS,GAC/DuY,EAAmB,EAAAD,oBACvBF,GAEII,EAAS,EAAAC,eAAeF,GAG9B,MAAO,GAAGA,KADQC,EADE,EAAAH,aAAaG,EAAOxY,OAAS,OAK3C,KAAA0Y,kBAAoB3iB,MAAOC,IACjC,GAAIA,EAAKT,eAAe,EAAAyF,2BAA4B,CAClD,MAAM,OAAEC,GAAWjF,EAAKT,IACxB,OAAQ0F,GACN,IAAK,cACHzG,KAAKkjB,QAAQhP,UAAW,EACxBlU,KAAKkJ,SAASgL,UAAW,EACzBlU,KAAKmjB,YAAYjP,UAAW,EAC5BlU,KAAKgjB,gBAAgBmB,gBAAgBC,SACrCpkB,KAAKijB,gBAAgBkB,gBAAgBC,SACrC,MACF,IAAK,aACHpkB,KAAKkjB,QAAQhP,UAAW,EACxBlU,KAAKkJ,SAASgL,UAAW,EACzBlU,KAAKmjB,YAAYjP,UAAW,EAC5BlU,KAAKgjB,gBAAgBmB,gBAAgBE,UACrCrkB,KAAKijB,gBAAgBkB,gBAAgBE,UACrC,MACF,IAAK,aACHrkB,KAAKkjB,QAAQhP,UAAW,EACxBlU,KAAKkJ,SAASgL,UAAW,EACzBlU,KAAKmjB,YAAYjP,UAAW,EAC5BlU,KAAKgjB,gBAAgBmB,gBAAgBC,SACrCpkB,KAAKijB,gBAAgBkB,gBAAgBC,UAM3C,OAAO,EAAAziB,sBAAsBC,MAGvB,KAAA0iB,oBAAsB/iB,MAAOC,IACnC,GAAIA,EAAKT,eAAe,EAAA6F,uBACtB,OAAQpF,EAAKT,IAAI0F,QACf,IAAK,YACHzG,KAAKmjB,YAAYjP,UAAW,EAC5BlU,KAAKgjB,gBAAgBmB,gBAAgBE,UACrCrkB,KAAKijB,gBAAgBkB,gBAAgBE,UACrC,MACF,IAAK,mBACHrkB,KAAKmjB,YAAYjP,UAAW,EAC5BlU,KAAKgjB,gBAAgBmB,gBAAgBC,SACrCpkB,KAAKijB,gBAAgBkB,gBAAgBC,SACrC,MACF,IAAK,aACHpkB,KAAKkJ,SAASgL,UAAW,EACzB,MACF,IAAK,sBACHlU,KAAKkJ,SAASgL,UAAW,IAzL/BlU,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,kBAEvC,MAAMwiB,EAAYvkB,KAAKwkB,aACvBxkB,KAAKkjB,QAAQ1gB,iBAAiB,QAASxC,KAAKyjB,mBAC5CzjB,KAAKkJ,SAAS1G,iBAAiB,QAASxC,KAAK0jB,oBAC7C1jB,KAAKmjB,YAAY3gB,iBAAiB,QAASxC,KAAKojB,uBAEhDpjB,KAAKkJ,SAASgL,UAAW,EACzBlU,KAAKkjB,QAAQhP,UAAW,EAExBlU,KAAKqZ,aAAajX,OAChBpC,KAAKgjB,gBAAgBvjB,YACrBO,KAAKijB,gBAAgBxjB,YACrB8kB,GAgEI,aAEN,MAAME,EAAOpd,SAASC,cAAc,QACpCmd,EAAKlb,YAAc,OACnBvJ,KAAKkjB,QAAQ9gB,OAAOqiB,GACpBzkB,KAAKkjB,QAAQphB,UAAUC,IAAI,UAAasH,IAAK,UAAa,WAC1DrJ,KAAKkJ,SAASK,YAAc,QAC5BvJ,KAAKkJ,SAASpH,UAAUC,IAAI,UAAasH,IAAK,UAAa,UAC3DrJ,KAAKmjB,YAAY5Z,YAAc,gBAC/BvJ,KAAKmjB,YAAYrhB,UAAUC,IAAI,UAAasH,IAAK,UAAa,UAE9D,MAAMqb,EAAWrd,SAASC,cAAc,OAGxC,OAFAod,EAAS5iB,UAAUC,IAAI,UAAO,cAC9B2iB,EAAStiB,OAAOpC,KAAKkjB,QAASljB,KAAKkJ,SAAUlJ,KAAKmjB,aAC3CuB,EAGD,eACNC,EACAC,EACAC,GAEA,IAAIC,EAAUF,GAAQD,EACtB,MAEMI,EAA6B,CACjC1gB,KAHiBrE,KAAK2jB,mBAItBtI,MAHY,EAAA2J,qBAmBd,aAdkB,EAAA1hB,mBAAmB8d,UAAU2D,GAO/CD,IAEID,GAEFA,EADyC,KAAvB,EAAIC,EAAUH,MAI9BG,EAAU,IAAU9kB,KAAKsjB,SAASqB,EAAOG,EAASD,GAyExD,QAAQpa,GACNA,EAAIyP,aAAala,KAAKgjB,gBAAiB,aACvCvY,EAAIyP,aAAala,KAAKijB,gBAAiB,aAEvC,MAAMgC,EAAKxa,EAAIzG,SACbhE,KAAKkkB,kBACL,kCAEFzZ,EAAIxG,OAAO,EAAAC,WAAWkC,OAAQ6e,GAE9B,MAAMC,EAAMza,EAAIzG,SACdhE,KAAKskB,oBACL,kCAEF7Z,EAAIxG,OAAO,EAAAC,WAAWkC,OAAQ8e,GAE9B,MAAMrkB,EAAK4J,EAAIrG,SAAS,mCACxBpE,KAAKiH,IAAIlF,IAAIlB,IArOjB,sB,2FClCA,gBAEA,MAAa8S,UAA0B,EAAA4E,SAWrC,cACEnT,MAAM,OAXA,KAAAnD,OAASoF,SAASC,cAAc,MAEhC,KAAA6d,SAAW9d,SAASC,cAAc,QAElC,KAAA8d,SAAW/d,SAASC,cAAc,QAElC,KAAA+d,OAAShe,SAASC,cAAc,QAEhC,KAAAge,WAAaje,SAASC,cAAc,QAI1CtH,KAAKiC,OAAOsH,YAAc,oBAC1BvJ,KAAKqZ,aAAajX,OAChBpC,KAAKiC,OACLjC,KAAKmlB,SACLnlB,KAAKolB,SACLplB,KAAKqlB,OACLrlB,KAAKslB,YAIT,QAAQ3f,EAAiB4f,EAAiBC,GACxCxlB,KAAKmlB,SAAS5b,YAAc,SAASgc,KACrCvlB,KAAKolB,SAAS7b,YAAc,uBAAuB5D,EAAItB,OACvDrE,KAAKqlB,OAAO9b,YAAc,kBAAkB5D,EAAIkM,KAChD7R,KAAKslB,WAAW/b,YAAcic,EAC1B,0BAA0BA,IAC1B,IA7BR,uB,6KCHA,gBAGA,aAEA,MAAahZ,UAAkB,EAAA+L,SAG7B,cACEnT,MAAM,OAHA,KAAAqgB,SAAWpe,SAASC,cAAc,OAS1C,KAAAuC,eAAkB6b,IACZA,EAAY1lB,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO4jB,mBAClD3lB,KAAKqZ,aAAavX,UAAU8C,OAAO,UAAO+gB,oBAP/C3lB,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO6H,OACvC5J,KAAKqZ,aAAajX,SAClBpC,KAAKylB,SAAS3jB,UAAUC,IAAI,UAAO,0BAQrC,SAAS0K,GACHzM,KAAKqZ,aAAauM,iBACpB5lB,KAAKqZ,aAAawM,WAAWzc,SAAQ0c,GAASA,EAAMlhB,WAEtD5E,KAAKylB,SAASrjB,OAAOqK,EAAQsZ,aAC7B/lB,KAAKqZ,aAAajX,OAAOpC,KAAKylB,SAAUhZ,EAAQhN,cApBpD,e,mLCLA,gBAEA,UACA,UAQA,UAEA,UACA,UAEA,aACA,UAEA,MAAayC,UAAwB,EAAAqW,SASnC,YAAqB7Y,EAA4B,EAAAC,eAAewC,QAC9DiD,MAAM,UADa,KAAA1F,UAFX,KAAAsmB,MAAgB,GAqDlB,KAAAC,kBAAoB1kB,MAAOC,IACjC,MAAM,IAAET,GAAQS,EAgBhB,OAfIT,aAAe,EAAAU,0BACjBzB,KAAKkmB,QAAQ9c,SAAQ+c,IACfA,EAAOC,aAAa,UAAYrlB,EAAIW,SACtCykB,EAAOrkB,UAAUC,IAAI,UAAO,8BAE5BokB,EAAOrkB,UAAU8C,OAAO,UAAO,iCAIjC7D,aAAe,EAAAslB,0BACE,eAAftlB,EAAI0F,OACNzG,KAAKsmB,aAAaxkB,UAAUC,IAAI,UAAO,0BACjB,SAAfhB,EAAI0F,QACXzG,KAAKsmB,aAAaxkB,UAAU8C,OAAO,UAAO,2BAEvC,EAAAjD,sBAAsBC,MAlE7B5B,KAAKP,YAAYqC,UAAUC,IAAI,UAAOE,QAGtCjC,KAAKumB,KAAOlf,SAASC,cAAc,MACnCtH,KAAKumB,KAAKzkB,UAAUC,IAAI,UAAOykB,cAC/B,MAAMC,EAAYpf,SAASC,cAAc,QACzCmf,EAAUld,YAAc,QACxBkd,EAAUC,QAAQnd,YAAc,QAChC,MAAMod,EAAatf,SAASC,cAAc,QAC1Cqf,EAAWpd,YAAc,OACzBod,EAAWD,QAAQnd,YAAc,OACjCvJ,KAAKumB,KAAKnkB,OAAOqkB,EAAWE,GAC5B3mB,KAAKP,YAAY2C,OAAOpC,KAAKumB,MAG7BvmB,KAAKsmB,aAAejf,SAASC,cAAc,OAC3CtH,KAAKsmB,aAAaxkB,UAAUC,IAAI,UAAO,eACvC/B,KAAKP,YAAY2C,OAAOpC,KAAKsmB,cAG7B,MAAMM,EAAKvf,SAASC,cAAc,MAClCsf,EAAG9kB,UAAUC,IAAI,UAAO,qBACxB/B,KAAKsmB,aAAalkB,OAAOwkB,GAGzB,MAAM9kB,EAAY,CAChB+kB,GAAI,UAAO,oBACXhY,EAAG,UAAO,sBACViY,IAAK,UAAO,mBACZrC,KAAM,UAAO,qBAMTsC,EAAW,CAHK,IAAI,EAAAC,QAAQ,SAAU,UAAWllB,GAChC,IAAI,EAAAklB,QAAQ,UAAW,WAAYllB,IAG1D9B,KAAKkmB,QAAUa,EAASrX,KAAIuX,GAAQA,EAAKd,SAEzCS,EAAGxkB,UAAU2kB,EAASrX,KAAIuX,GAAQA,EAAKxnB,eAGzC,QAAQgL,GACN,MAAMyc,EAAezc,EAAIzG,SACvBhE,KAAKimB,kBACL,wBAEFxb,EAAIxG,OAAO,EAAAC,WAAWC,QAAS+iB,IAzDnC,qB,iFCnBA,gBASA,MAAaF,UAAgB,EAAAzO,SAO3B,YACE4O,EACAC,EACAC,EACAC,GAEAliB,MAAM,MAEFiiB,GAAQR,IAAI7mB,KAAKqZ,aAAavX,UAAUC,IAAIslB,EAAOR,IACvD7mB,KAAKunB,QAAUlgB,SAASC,cAAc,KACtCtH,KAAKunB,QAAQC,aAAa,OAAQJ,GAE9BC,GAAQxY,GAAG7O,KAAKunB,QAAQzlB,UAAUC,IAAIslB,EAAOxY,GAE7CyY,IACFtnB,KAAKynB,UAAYpgB,SAASC,cAAc,OACxCtH,KAAKynB,UAAUxN,IAAMqN,EAEjBD,GAAQP,KAAK9mB,KAAKynB,UAAU3lB,UAAUC,IAAIslB,EAAOP,KACrD9mB,KAAKunB,QAAQnlB,OAAOpC,KAAKynB,YAE3BznB,KAAKykB,KAAOpd,SAASC,cAAc,QACnCtH,KAAKykB,KAAKlb,YAAc4d,EACxBnnB,KAAKykB,KAAKiC,QAAQnd,YAAc4d,EAE5BE,GAAQ5C,MAAMzkB,KAAKykB,KAAK3iB,UAAUC,IAAIslB,EAAO5C,MACjDzkB,KAAKunB,QAAQnlB,OAAOpC,KAAKykB,MAEzBzkB,KAAKP,YAAY2C,OAAOpC,KAAKunB,SAG/B,aACE,OAAOvnB,KAAKunB,SAvChB,a,uFCRA,gBACA,UAEA,MAAaG,UAAsB,EAAAnP,SAejC,YAAYzP,EAAe6e,EAA2BjL,GACpDtX,MAAM,MAfA,KAAAwiB,UAAYvgB,SAASC,cAAc,MAEnC,KAAAugB,OAASxgB,SAASC,cAAc,MAEhC,KAAAwgB,cAAgBzgB,SAASC,cAAc,MAEvC,KAAAygB,SAAW1gB,SAASC,cAAc,MAElC,KAAA0gB,SAAW3gB,SAASC,cAAc,MAElC,KAAA2gB,aAAe5gB,SAASC,cAAc,MAO5CtH,KAAK4nB,UAAUre,YAAcT,EAAMU,WACnCxJ,KAAK6nB,OAAOte,YAAcoe,EAAW9V,GAAGrI,WACxCxJ,KAAKkoB,WAAa,EAAAxb,QAAQyb,WAAWzL,GACrC1c,KAAK8nB,cAAc1lB,OAAOpC,KAAKkoB,YAC/BloB,KAAK+nB,SAASxe,YAAcmT,EAAQrY,KACpCrE,KAAKgoB,SAASze,YAAcoe,EAAWrS,KAAK9L,WAC5CxJ,KAAKioB,aAAa1e,YAAcoe,EAAWpV,KAAK/I,WAEhDxJ,KAAKqZ,aAAajX,OAChBpC,KAAK4nB,UACL5nB,KAAK6nB,OACL7nB,KAAK8nB,cACL9nB,KAAK+nB,SACL/nB,KAAKgoB,SACLhoB,KAAKioB,cAIF,gBACL,OAAOjoB,KAAKkoB,YArChB,mB,+KCJA,gBACA,SACA,SACA,UAIA,UACA,UAEA,aACA,aAGA,MAAa3jB,UAAoB,EAAAgU,SAiC/B,cACEnT,MAAM,WA/BA,KAAAgjB,MAAQ/gB,SAASC,cAAc,SAE/B,KAAA+gB,UAAYhhB,SAASC,cAAc,SAEnC,KAAAghB,UAAYjhB,SAASC,cAAc,SAEnC,KAAAihB,KAAOlhB,SAASC,cAAc,MAE9B,KAAAkhB,MAAQnhB,SAASC,cAAc,MAE/B,KAAAmhB,OAASphB,SAASC,cAAc,MAEhC,KAAAohB,OAASrhB,SAASC,cAAc,MAEhC,KAAAqhB,WAAathB,SAASC,cAAc,MAIpC,KAAAshB,mBAAqBvhB,SAASC,cAAc,OAM5C,KAAAuhB,UAA4B,MAE5B,KAAAC,SAA6C,OAE7C,KAAA3hB,eAAiB,GAsFjB,KAAAK,cAAgBjG,MAAOkG,IAC7B,IAEE,aADMzH,KAAK2H,WAAWF,IACf,EACP,MACA,OAAO,IAyDH,KAAAshB,uBAAyBxnB,MAAOkB,IACtC,IAAImM,EACJ,OAAQnM,EAAEoR,QACR,KAAK7T,KAAKuoB,KACR3Z,EAAO,EAAAoa,iCAAiCnX,GACxC,MACF,KAAK7R,KAAK0oB,OACR9Z,EAAO,EAAAoa,iCAAiC1T,KACxC,MACF,KAAKtV,KAAK2oB,WACR/Z,EAAO,EAAAoa,iCAAiCzW,KAK5C,GAAI3D,EAAM,CACR5O,KAAKmI,MAAMC,YAAW,GACtB,MAAM2L,EAAOtR,EAAEoR,OACf7T,KAAK6oB,UAAY9U,EAAKjS,UAAUka,SAC9B,UAAO,4BAEL,MACA,OACJhc,KAAK8oB,SAAWla,QACV5O,KAAK2H,aACX3H,KAAKipB,mBAAmBlV,GACxB/T,KAAKmI,MAAMC,YAAW,KAIlB,KAAA6gB,mBAAsBlV,IACxB/T,KAAKkpB,gBACPlpB,KAAKkpB,eAAepnB,UAAU8C,OAAO,UAAO,uBAE9CmP,EAAKjS,UAAUC,IAAI,UAAO,uBAC1B/B,KAAKkpB,eAAiBnV,EAEC,QAAnB/T,KAAK6oB,WACP9U,EAAKjS,UAAU8C,OAAO,UAAO,4BAC7BmP,EAAKjS,UAAUC,IAAI,UAAO,6BAE1BgS,EAAKjS,UAAU8C,OAAO,UAAO,2BAC7BmP,EAAKjS,UAAUC,IAAI,UAAO,8BA1L5B/B,KAAKqZ,aAAavX,UAAUC,IAAI,UAAOonB,SACvCnpB,KAAKqZ,aAAa/N,MAAMC,YACtB,mBACA,0FAGFvL,KAAKmI,MAAQ,IAAI,EAAA6B,MAAMhK,KAAKmH,eAAgBnH,KAAKwH,eACjDxH,KAAKopB,UAAYppB,KAAKmI,MAAMoC,eAE5BvK,KAAKqpB,cAELrpB,KAAKspB,cAELtpB,KAAKqZ,aAAajX,OAAOpC,KAAKooB,OAGxB,cACNpoB,KAAKupB,oBACLvpB,KAAKooB,MAAMtmB,UAAUC,IAAI,UAAOqmB,OAChCpoB,KAAKooB,MAAMhmB,OACTpC,KAAKsoB,UACLtoB,KAAKqoB,UACLroB,KAAK4oB,mBACL5oB,KAAKopB,WAID,oBACN,MAAMI,EAAKniB,SAASC,cAAc,MAE5BmiB,EAAUpiB,SAASC,cAAc,MACvCmiB,EAAQlgB,YAAc,IACtBvJ,KAAKuoB,KAAKhf,YAAc,KACxBvJ,KAAKuoB,KAAKzmB,UAAUC,IAAI,UAAO,yBAC/B/B,KAAKwoB,MAAMjf,YAAc,MACzBvJ,KAAKyoB,OAAOlf,YAAc,OAC1BvJ,KAAK0oB,OAAOnf,YAAc,OAC1BvJ,KAAK0oB,OAAO5mB,UAAUC,IAAI,UAAO,yBACjC/B,KAAK2oB,WAAWpf,YAAc,YAC9BvJ,KAAK2oB,WAAW7mB,UAAUC,IAAI,UAAO,yBAErCynB,EAAGpnB,OACDqnB,EACAzpB,KAAKuoB,KACLvoB,KAAKwoB,MACLxoB,KAAKyoB,OACLzoB,KAAK0oB,OACL1oB,KAAK2oB,YAEP3oB,KAAKsoB,UAAUlmB,OAAOonB,GACtBxpB,KAAKsoB,UAAU9lB,iBAAiB,QAASxC,KAAK+oB,wBAGxC,cACN,MAAM3e,EAAcpK,KAAKmI,MAAMkC,iBAE/BD,EAAYtI,UAAUC,IACpB,UAAasH,IACb,UAAa,SACb,UAAO,cAGT,MAAMa,EAAclK,KAAKmI,MAAMgC,iBAE/BD,EAAYpI,UAAUC,IACpB,UAAasH,IACb,UAAa,SACb,UAAO,cAGTrJ,KAAK4oB,mBAAmB9mB,UAAUC,IAAI,UAAOoG,OAC7CnI,KAAK4oB,mBAAmBxmB,OAAOgI,EAAaF,GAE5ClK,KAAKopB,UAAUtnB,UAAUC,IAAI,UAAO,eAGtC,SACE/B,KAAK2H,aAAauD,MAAK,IACrBlL,KAAKipB,mBAAmBjpB,KAAKkpB,gBAAkBlpB,KAAK2oB,cAahD,iBAAiBlhB,GACvB,OAAO,IAAI9D,SAAQ,CAACC,EAAKoH,KACvB,MAAMY,EAAOnE,EACD,SAARA,EACEzH,KAAKmI,MAAM0D,oBAAsB,EACjC7L,KAAKmI,MAAM0D,oBAAsB,EACnC7L,KAAKmI,MAAM0D,oBAEfrI,QAAQC,IAAImI,EAAM5L,KAAK8oB,SAAU9oB,KAAK6oB,WACtC,EAAA3T,oBAAoBwU,WAClB9d,EACA5L,KAAKmH,eACLnH,KAAK8oB,SACL9oB,KAAK6oB,WACL3d,MAAK3J,MAAMwK,IAEX,GADA/L,KAAKmI,MAAM+D,gBAAgBC,OAAOC,SAASL,EAASC,MAAO,KAC9B,IAAzBD,EAASE,KAAKT,OAAc,CAC9B,GAAI/D,EAEF,YADAuD,IAIF,GAAIY,EAAO,EAGT,aAFM5L,KAAKmI,MAAMS,cAAc,aAC/BhF,IAIJ,MAAM+lB,EAAO,IAAIC,MAAqB7d,EAASE,KAAKT,QAC9Cqe,EAA+B,GAC/BC,EAAwB,IAAZle,EAAO,GAWzB,IAVAG,EAASE,KAAK7C,SAAQ,CAAC2gB,EAAQjhB,KAC7B,MAAMnG,EAAU,EAAAW,mBAAmB0mB,OAAOD,EAAOlY,IAAI3G,MAAKvF,IACxD,MAAMskB,EAAanhB,EAAQghB,EAAW,EAChCI,EAAM,IAAI,EAAAxC,cAAcuC,EAAYF,EAAQpkB,GAClDnC,QAAQC,IAAIwmB,EAAYF,EAAOxX,MAC/BoX,EAAK7gB,GAASohB,KAEhBL,EAASjd,KAAKjK,YAEVgB,QAAQ6N,WAAWqY,GAClB7pB,KAAKqoB,UAAUhb,YAAYrN,KAAKqoB,UAAUhb,WAAWzI,SAC5D5E,KAAKqoB,UAAUjmB,UACVunB,EAAKja,KAAIwa,IACVA,EAAIC,gBAAgBroB,UAAUC,IAAI,UAAO,2BAClCmoB,EAAIzqB,gBAGfmE,WA9KR,gBACkB,EAAAwmB,iBAAmB,I,8GCfrC,gBAkEMnG,EAAiB,EAAAzH,cAAc6N,WAhEtB,CACbC,YAAa,CACX,aACA,SACA,SACA,cACA,gBACA,OACA,aACA,UACA,SACA,iBACA,YACA,WACA,WACA,SACA,QACA,QACA,aACA,WACA,SACA,SACA,SACA,SACA,SAEF,eAAgB,CACd,cACA,WACA,MACA,kBACA,WACA,wBACA,aACA,SACA,sBACA,aAEFC,QAAS,CACP,OACA,YACA,UACA,eACA,aACA,oBACA,WACA,SACA,aACA,UAEFC,WAAY,CACV,gBACA,QACA,cACA,WACA,UACA,UACA,SACA,WACA,QACA,UAMK,EAAAvG,iBAET,MAAMH,EAAsB,EAAAtH,cAAc6N,WACxCI,OAAOC,KAAKzG,IAGL,EAAAH,uB,gFC1ET,iBAGE,YAAY6G,EAAmC,OAC7C3qB,KAAKqZ,aAAehS,SAASC,cAAcqjB,GAG7C,kBACE,OAAO3qB,KAAKqZ,gB,+LCRhB,gBAEA,aAEA,MAAanW,UAAoC,EAAA0nB,yBAC/C,cACExlB,QACApF,KAAKiC,OAAOsH,YAAc,aAC1BvJ,KAAKiC,OAAOykB,QAAQnd,YAAcvJ,KAAKiC,OAAOsH,YAC9CvJ,KAAKiC,OAAOH,UAAUC,IAAI,UAAa,kBACvC/B,KAAKmnB,KAAKrlB,UAAUC,IAAI,UAAa,mBANzC,iC,4LCJA,gBAEA,aAEA,MAAsB6oB,UAAiC,EAAAC,oBACrD,cACEzlB,QACApF,KAAKqZ,aAAavX,UAAUC,IAAI,UAAO,gBACvC,MAAM+oB,EAAYzjB,SAASC,cAAc,OACzCwjB,EAAUhpB,UAAUC,IAAI,UAAO,aAC/B/B,KAAKqZ,aAAajX,OAAO0oB,GACzB9qB,KAAK+qB,KAAKjpB,UAAUC,IAAI,UAAO,eAC/B+oB,EAAU1oB,OAAOpC,KAAK+qB,MACtB/qB,KAAKiC,OAAOH,UAAUC,IAAI,UAAO,sBACjC/B,KAAKmnB,KAAKrlB,UAAUC,IAAI,UAAO,oBAGjC,UAAUolB,GAGR,OAFAnnB,KAAKiC,OAAOsH,YAAc4d,EAC1BnnB,KAAKiC,OAAOykB,QAAQnd,YAAc4d,EAC3BnnB,KAGT,QAAQmnB,GAGN,OAFAnnB,KAAKmnB,KAAK5d,YAAc4d,EACxBnnB,KAAKmnB,KAAKT,QAAQnd,YAAc4d,EACzBnnB,KAGT,KAAKkc,GAGH,OAFaA,GAAY7U,SAAS0jB,MAC7B3oB,OAAOpC,KAAKqZ,cACVrZ,KAGT,OAEE,OADAA,KAAKqZ,aAAazU,SACX5E,MAjCX,8B,oMCJA,gBAEA,aACA,aAEA,MAAaiQ,UAAyC,EAAA2a,yBAKpD,cACExlB,QALM,KAAA4lB,aAAe3jB,SAASC,cAAc,OAEtC,KAAA2jB,IAAM5jB,SAASC,cAAc,OAInCtH,KAAKgrB,aAAalpB,UAAUC,IAAI,UAAO0H,WACvCzJ,KAAKirB,IAAInpB,UAAUC,IAAI,UAAOkpB,KAC9BjrB,KAAKgrB,aAAa5oB,OAAOpC,KAAKirB,KAC9BjrB,KAAKmnB,KAAKrlB,UAAUC,IAAI,UAAOolB,KAAM,UAAa,kBAClDnnB,KAAK+qB,KAAKjpB,UAAUC,IAAI,UAAOgpB,MAC/B/qB,KAAK+qB,KAAK3oB,OAAOpC,KAAKgrB,cAGxB,UAAU7D,GAER,OADA/hB,MAAM8lB,UAAU/D,GACTnnB,KAGT,QAAQmnB,GAEN,OADA/hB,MAAMjC,QAAQgkB,GACPnnB,KAGT,QAIE,OAHAA,KAAKirB,IAAI3f,MAAMI,eAAe,cAC9B1L,KAAKmnB,KAAK5d,YAAc,GACxBvJ,KAAKmnB,KAAKT,QAAQnd,YAAc,GACzBvJ,KAGT,YAAY4Q,GAEV,OADA5Q,KAAKirB,IAAI3f,MAAMC,YAAY,aAAc,GAAGqF,MACrC5Q,MAlCX,sC,6FCLA,gBAMA,MAAsB6qB,UAA4B,EAAAtS,SAOhD,cACEnT,MAAM,OAENpF,KAAK+qB,KAAO1jB,SAASC,cAAc,OACnCtH,KAAKiC,OAASoF,SAASC,cAAc,MACrCtH,KAAKmnB,KAAO9f,SAASC,cAAc,KAEnCtH,KAAK+qB,KAAK3oB,OAAOpC,KAAKiC,OAAQjC,KAAKmnB,MACnCnnB,KAAKqZ,aAAajX,OAAOpC,KAAK+qB,OAflC,yB,gFCNA,oBAAyBI,GACvB,IAAIC,EACJ,GAAI,2BAA2BC,KAAKF,GAUlC,OARAC,EAAID,EAAIG,MAAM,IACG,IAAbF,EAAE5f,SACJ4f,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAMhC,CAAE7K,EAJCpU,OAAOC,SAAS+e,EAAII,MAAM,EAAG,GAAI,IAI/B/K,EAHFrU,OAAOC,SAAS+e,EAAII,MAAM,EAAG,GAAI,IAG5Bzc,EAFL3C,OAAOC,SAAS+e,EAAII,MAAM,EAAG,GAAI,KAI7C,MAAM,IAAI1a,MAAM,a,4ICdlB,uBACE,MAAM2a,EAAM,IAAIC,WAAW,GAC3B,OAAOlpB,OAAOmpB,OAAOC,gBAAgBH,GAAKI,KAAK,KAGjD,wBAA6BC,GAC3B,OAAOhe,KAAKie,MAAMje,KAAKke,SAAWF,IAGpC,iCAAsC/d,EAAa+d,GACjD,OAAOhe,KAAKie,MAAMje,KAAKke,UAAYF,EAAM/d,GAAOA,IAGlD,6BAAgBkX,IACd,MAAM3J,EAAQ,IAAIxN,KAAKie,MAAsB,SAAhBje,KAAKke,UAAuBviB,SAAS,MAClE,OAAqB,IAAjB6R,EAAM7P,OAAqB6P,EACxB2J,M,aCRT,SAAgBpQ,EACdtJ,EACA0gB,GAEA,MAAMC,EAAe3gB,EAClB4gB,iBAAiB,uBACjBC,QAAQ,IAAK,IACbb,MAAM,KACT,IAAIc,EAAYH,EAAaI,YAAYL,GAIzC,IAFmB,IAAfI,IAAkBA,EAAYH,EAAaI,YAAY,SAExC,IAAfD,EAKF,OAJ0B9gB,EACvB4gB,iBAAiB,uBACjBC,QAAQ,IAAK,IACbb,MAAM,KACgBc,G,oGAjB7B,0BAuBA,6BACElZ,GAEA,OAAO,IAAIvP,SAAQiZ,IACjB,MAAM0P,EAA2BC,IAC3BrZ,EAAOsZ,KAAKtZ,EAAOa,KAAKzI,MAAMC,YAAY2H,EAAO8Y,KAAM9Y,EAAOsZ,KAElE3oB,YAAW,KACT+Y,GAAQ,KAFG2P,GAAS,KAqCxB,GAAIrZ,EAAOuZ,mBACTH,EAAwBpZ,EAAOuZ,yBAC5B,GACHvZ,EAAOwZ,WACPnqB,OAAO+K,iBAAiB4F,EAAOa,MAAMmY,iBAAiBhZ,EAAO8Y,QAC3D9Y,EAAOwZ,UAETJ,QACG,CACH,MACM3X,EAAWC,EADHrS,OAAO+K,iBAAiB4F,EAAOa,MACCb,EAAO8Y,MAEhDrX,GAAyB,OAAbA,EAzCW,MAC5B,MAAMgY,EAAgBlqB,IAChBA,EAAEoR,SAAWX,EAAOa,MAEpBtR,EAAEmqB,eAAiB1Z,EAAO8Y,OAG5B9Y,EAAOwZ,WACPnqB,OAAO+K,iBAAiB4F,EAAOa,MAAMmY,iBAAiBhZ,EAAO8Y,QAC3D9Y,EAAOwZ,YAKXxZ,EAAOa,KAAKtI,oBAAoB,gBAAiBkhB,GACjDzZ,EAAOa,KAAKtI,oBAAoB,gBAAiBkhB,GAKjD/P,GAAQ,MAGV1J,EAAOa,KAAKvR,iBAAiB,gBAAiBmqB,GAC9CzZ,EAAOa,KAAKvR,iBAAiB,mBAAoBmqB,GAE7CzZ,EAAOsZ,KAAKtZ,EAAOa,KAAKzI,MAAMC,YAAY2H,EAAO8Y,KAAM9Y,EAAOsZ,MAkBhEK,GAFAP,U,oFCnFR,wBAA6BQ,GAE3B,MAAO,WADaA,GAC4C,mBAD5CA,EACiC/nB,S,qFCuCvD,MAAMyX,EAAgB,IA7CtB,oBACW,KAAA6N,WAAiB0C,IACxB,GAAmB,iBAARA,GAA4B,OAARA,EAAc,CAC3C,MAAMC,EAASD,EASf,OARAtC,OAAOC,KAAKsC,GAAQ5jB,SAAQ4iB,IAEA,iBAAjBgB,EAAOhB,IACbvB,OAAOwC,SAASD,EAAOhB,KAExBhsB,KAAKqqB,WAAW2C,EAAOhB,OAGpBvB,OAAOvpB,OAAO6rB,GAEvB,MAAM,IAAIlc,MAAM,eAGT,KAAA4L,UAAgB5I,IACvB,GAAI+V,MAAMsD,QAAQrZ,GAAS,CACzB,MAAMwN,EAAQ,GAId,OAHCxN,EAAqBzK,SAAQ+jB,IAC5B9L,EAAMzU,KAAKugB,MAEN9L,EAAM3R,KAAK0d,GAAeptB,KAAKyc,UAAU2Q,KAGlD,GAAsB,iBAAXvZ,GAAkC,OAAXA,EAAiB,CACjD,GAAIA,aAAkBC,YACpB,OAAOD,EAAOwZ,WAAU,GAC1B,GAAIxZ,aAAkByZ,KAAM,OAAOzZ,EAAO0X,QAC1C,MAAMlK,EAAQ,IACRxN,GAQN,OAJA4W,OAAOC,KAAKrJ,GAAOjY,SAAQmkB,IACzBlM,EAAMkM,GAAKvtB,KAAKyc,UAAU4E,EAAMkM,OAElC9C,OAAO+C,eAAenM,EAAOoJ,OAAOgD,eAAe5Z,IAC5CwN,EAET,OAAOxN,KAMF,EAAA2I,gBADTA,EAAc6N,WAAW7N,I,8EC7CzB,gBACA,UACA,UACA,SACA,UAEA,UACA,SAIA,UACA,UACA,UAEA,aAkBE,cAEE,OAnBM,KAAAkR,QAAwC,IAAIla,IAE5C,KAAAma,UAAY,CAClB1mB,IAAK,EACL2mB,IAAK,GAGC,KAAAC,WAAa,IAAI3mB,IAEjB,KAAA4mB,WAAa,IAAI5mB,IAEjB,KAAA6mB,aAAe,IAAIva,IAEnB,KAAAwa,cAAgB,IAAI9mB,IAkJpB,KAAA+mB,WAAa,CAACzsB,EAAkByjB,KAWtC,OAAQzjB,EAAK0sB,QAAQltB,UACnB,KAAK,EAAAC,gBAAgBogB,MACnB,MAZgB,MAClB,MAAM8M,EAAa,EAAA3R,cAAcC,UAAUjb,GAC3C,OAAOyjB,EAAGmJ,KAAKD,IAUNE,GACT,KAAK,EAAAptB,gBAAgBC,OACnB,MATiB,MACnB,MAAMotB,EAAc,EAAA9R,cAAc6N,WAAW7oB,GAC7C,OAAOyjB,EAAGmJ,KAAKE,IAONC,GACT,QACE,MAAM,IAAI1d,MAAM,EAAA2d,YAAYC,wBA9JhCzuB,KAAK0uB,MAAQ,EAAAzd,YACNwZ,OAAOvpB,OAAOlB,MAGhB,UAAU2uB,EAAcC,GAC7B,OAAO5uB,KAAK6uB,sBAAsBF,OAAKhjB,EAAWijB,GAG5C,sBACND,EACAG,EACAF,GAEA,GAAI5uB,KAAK+tB,aAAa1V,IAAIsW,GACxB,MAAM,IAAI9d,MAAM,EAAA2d,YAAYO,yBAE9B,KAAMJ,EAAIjvB,WAAW,EAAAC,gBACnB,MAAM,IAAIkR,MAAM,EAAA2d,YAAYQ,yBAE9B,IAAItvB,EAAUovB,EAAS,GAAGA,KAAUH,EAAIjvB,UAAYivB,EAAIjvB,QAGxD,GAFIkvB,IAAQlvB,GAAW,IAAIkvB,KAEvB5uB,KAAKguB,cAAc3V,IAAI3Y,GACzB,MAAM,IAAImR,MAAM,EAAA2d,YAAYS,sBAE9B,MAUMC,EAAgB,IAAI,EAAAC,eAVDC,GAAkBpvB,KAAKoE,SAAS1E,EAAS0vB,KAC1C,CAAChB,EAAkBgB,IACzCpvB,KAAKqvB,SAASjB,EAAMgB,KACA,CAACE,EAAmBrK,IACxCjlB,KAAKiE,OAAOqrB,EAAOrK,KACG,CAACqK,EAAmBrK,IAC1CjlB,KAAKuvB,SAASD,EAAOrK,KACI,CAACuK,EAAiBC,IAC3CzvB,KAAK6uB,sBAAsBW,EAAQ9vB,EAAS+vB,KAe9C,OALAzvB,KAAKguB,cAAcjsB,IAAIrC,GACvBM,KAAK+tB,aAAajX,IAAI6X,EAAKO,GAE3B,EAAA1S,cAAc6N,WAAW6E,GAElBP,EAAIe,QAAQR,GAGb,SAASxvB,EAAiB0vB,GAChC,MAAMvd,EAAK,EAAAZ,YACL0e,EAAY3vB,KAAK2tB,UAAU1mB,MAgB3BpG,EAAK,IAAI,EAAA+uB,OAAOD,EAAW9d,EAAI7R,KAAK0uB,OAdlBntB,MAAOsuB,IAC7B,MAAMC,EAAO,IAAI,EAAAC,kBACfrwB,EACAmS,EACA8d,EACAE,EAAK1uB,SACL0uB,EAAK7uB,SACLouB,GAEI5tB,EAAO,IAAI,EAAAwuB,WAAWF,EAAMD,EAAK9uB,KAEvC,aADqBf,KAAKc,SAASU,MAM/ByuB,EAAY,EAAAzT,cAAc6N,WAAWxpB,GAI3C,OAFAb,KAAK8tB,WAAW/rB,IAAIkuB,GAEbA,EAGD,SAAS7B,EAAkBgB,GACjC,MAAMvd,EAAK,EAAAZ,YACL0e,EAAY3vB,KAAK2tB,UAAUC,MAC3B3I,EAAK,IAAI,EAAAiL,OAAOP,EAAW9d,EAAI7R,KAAK0uB,MAAON,EAAMgB,GACjDe,EAAY,EAAA3T,cAAc6N,WAAWpF,GAE3C,OADAjlB,KAAK6tB,WAAW9rB,IAAIouB,GACbA,EAGD,OAAOb,EAAmBrK,GAChC,IAAKjlB,KAAK6tB,WAAWxV,IAAI4M,GAAK,MAAM,IAAIpU,MAAM,EAAA2d,YAAY4B,SACrDpwB,KAAK0tB,QAAQrV,IAAIiX,IAAQtvB,KAAK0tB,QAAQ5W,IAAIwY,EAAO,IAAIpoB,KAC1DlH,KAAK0tB,QAAQ/X,IAAI2Z,IAAQvtB,IAAIkjB,GAGvB,SAASqK,EAAmBrK,GAClCjlB,KAAK0tB,QAAQ/X,IAAI2Z,IAAQxZ,OAAOmP,GAG1B,eAAezjB,GACrB,IAAKxB,KAAK0tB,QAAQrV,IAAI7W,EAAKT,IAAIuuB,OAC7B,MAAM,IAAIze,MAAM,EAAA2d,YAAY6B,oBAG9B,MAAMzC,EAAM5tB,KAAK0tB,QAAQ/X,IAAInU,EAAKT,IAAIuuB,OAEtC,QAAY3jB,IAARiiB,GAAkC,IAAbA,EAAI3lB,KAC3B,MAAM,IAAI4I,MAAM,EAAA2d,YAAY8B,kBAE9B,IAUInY,EAVAoY,EAAuB,GAE3B,GAAI/uB,EAAKT,IAAIoE,mBAIX,GAHAyoB,EAAIxkB,SAAQ6b,IACNzjB,EAAKT,IAAIoE,mBAAmByW,SAASqJ,EAAGpT,KAAK0e,EAAW3jB,KAAKqY,MAEzC,IAAtBsL,EAAW/kB,OACb,MAAM,IAAIqF,MAAM,EAAA2d,YAAYgC,6BACzBD,EAAa,IAAI3C,GAGxB,OAAQpsB,EAAK0sB,QAAQ/sB,UACnB,KAAK,EAAAC,gBAAgBqW,IACnBU,QAAexU,QAAQ8T,IACrB8Y,EAAW7gB,KAAIuV,GAAMjlB,KAAKiuB,WAAWzsB,EAAMyjB,MAE7C,MACF,KAAK,EAAA7jB,gBAAgBC,UACnB8W,QAAexU,QAAQ6N,WACrB+e,EAAW7gB,KAAIuV,GAAMjlB,KAAKiuB,WAAWzsB,EAAMyjB,MAE7C,MACF,KAAK,EAAA7jB,gBAAgBqvB,OACnBtY,EAASoY,EACT,MACF,KAAK,EAAAnvB,gBAAgB0L,OACrB,QACEyjB,EAAW7gB,KAAIuV,GAAMjlB,KAAKiuB,WAAWzsB,EAAMyjB,KAC3C9M,GAAS,EAGb,OAAOA,K,+FC7KX,MAOMxW,EAPN,QAO8B6a,cAAc6N,WALhB,CAC1BzoB,KAAM,OACN8uB,YAAa,gBAKN,EAAA/uB,yB,qFCTT,MAaM6sB,EAbN,QAaoBhS,cAAc6N,WAXf,CACjB4E,qBAAsB,uBACtBF,wBAAyB,0BACzBC,wBAAyB,0BACzBoB,QAAS,UACTC,mBAAoB,qBACpBC,iBAAkB,mBAClBE,uBAAwB,yBACxB/B,qBAAsB,yBAKf,EAAAD,e,wFCfT,gBAkBMzB,EAAM,IAhBZ,oBACW,KAAAntB,IAAM,MAEN,KAAA+wB,OAAS,SAET,KAAAvqB,OAAS,SAET,KAAAjE,OAAS,SAET,KAAA4gB,cAAgB,gBAEhB,KAAAJ,cAAgB,gBAEhB,KAAA3b,kBAAoB,sBAKzBrH,EAAiB,EAAA6c,cAAc6N,WAAW0C,GAEvC,EAAAptB,kB,mGCtBT,gBAWA,qBAA0BmtB,GACxB,MAAM8D,EAAc9D,EACpB,MACE,YAAa8D,GACb,YAAaA,GACkB,iBAAxBA,EAAYlxB,SACnBkxB,EAAYlxB,WAAW,EAAAC,gBAI3B,sBAOE,YACmBkxB,EACAC,EAIAC,EACAC,EACD9W,GAPC,KAAA2W,kBACA,KAAAC,kBAIA,KAAAC,gBACA,KAAAC,kBACD,KAAA9W,eAdV,KAAA+W,IAAM,IAAI/pB,IAEV,KAAAgqB,IAAM,IAAIhqB,IAEV,KAAAiqB,WAAa,IAAI3d,IAgBzB,SAAS4a,EAAkBgB,GACzB,MAAMnK,EAAKjlB,KAAK8wB,gBAAgB1C,EAAMgB,GAEtC,OADApvB,KAAKixB,IAAIlvB,IAAIkjB,GACNA,EAGT,SAASmK,GACP,MAAMvuB,EAAKb,KAAK6wB,gBAAgBzB,GAEhC,OADApvB,KAAKkxB,IAAInvB,IAAIlB,GACNA,EAGT,OAAOyuB,EAAmBrK,GACnBjlB,KAAKmxB,WAAW9Y,IAAIiX,IAAQtvB,KAAKmxB,WAAWra,IAAIwY,EAAO,IAAIpoB,KAChElH,KAAKmxB,WAAWxb,IAAI2Z,IAAQvtB,IAAIkjB,GAChCjlB,KAAK+wB,cAAczB,EAAOrK,GAG5B,SAASqK,EAAmBrK,GAC1BjlB,KAAKmxB,WAAWxb,IAAI2Z,IAAQxZ,OAAOmP,GACnCjlB,KAAKgxB,gBAAgB1B,EAAOrK,M,6EC1DhC,eACE,YACW0K,EACA9d,EACA6c,EACAN,EACAgB,GAJA,KAAAO,YACA,KAAA9d,KACA,KAAA6c,QACA,KAAAN,OACA,KAAAgB,U,aCVb,IAAYlrB,E,sEAAAA,EAAA,EAAAA,aAAA,EAAAA,WAAU,KACpB,uBACA,yBACA,+BACA,uBACA,mDACA,4B,yFCJF,0BACE,YACWxE,EACA0xB,EACAC,EACAlwB,EACAH,EACAswB,GALA,KAAA5xB,UACA,KAAA0xB,OACA,KAAAC,cACA,KAAAlwB,WACA,KAAAH,WACA,KAAAswB,Y,kFCNb,mBACE,YAAqBpD,EAAqCntB,GAArC,KAAAmtB,UAAqC,KAAAntB,S,YCG5D,IAAYE,EAPAG,E,6FAAAA,EAAA,EAAAA,kBAAA,EAAAA,gBAAe,KACzB,qBACA,iBACA,6BACA,wBAGUH,EAAA,EAAAA,kBAAA,EAAAA,gBAAe,KACzB,mBACA,wB,8ECPF,eACE,YACW0uB,EACA9d,EACA6c,EACA5tB,GAHA,KAAA6uB,YACA,KAAA9d,KACA,KAAA6c,QACA,KAAA5tB,c,+ECLb,gBACE,YACWwuB,EACApqB,EACAC,GAFA,KAAAmqB,QACA,KAAApqB,QACA,KAAAC,uB,6ECNb,cAaE,YACUgC,EACWoqB,EACXnnB,EAAc/C,SAASC,cAAc,UACrC4C,EAAc7C,SAASC,cAAc,WAHrC,KAAAH,iBACW,KAAAoqB,eACX,KAAAnnB,cACA,KAAAF,cAhBF,KAAAsnB,gBAAkB,EAElB,KAAAC,eAAiBzxB,KAAKwxB,gBAEtB,KAAAE,eAAiB,EAEjB,KAAAtI,UAAY/hB,SAASC,cAAc,QAEnC,KAAAqqB,aAAe,EAEf,KAAAC,kBAAmB,EAQzB,MAAMC,EAAcxqB,SAASC,cAAc,QAC3CuqB,EAAYtoB,YAAc,YAC1BvJ,KAAKkK,YAAY9H,OAAOyvB,GAExB,MAAMC,EAAczqB,SAASC,cAAc,QAC3CwqB,EAAYvoB,YAAc,YAC1BvJ,KAAKoK,YAAYhI,OAAO0vB,GAExB9xB,KAAKkK,YAAY1H,iBAAiB,SAAS,IAAMxC,KAAK+xB,aAAa,UACnE/xB,KAAKoK,YAAY5H,iBAAiB,SAAS,IAAMxC,KAAK+xB,aAAa,UAG9D,WAAWC,GAChBhyB,KAAKiyB,mBAAmBD,GAGnB,oBACL,OAAOhyB,KAAKmH,eAGP,kBAAkBimB,GACvBptB,KAAK0xB,eAAiBtE,EACjBptB,KAAK4xB,kBAAkB5xB,KAAKiyB,oBAAmB,GAG/C,gBAAgB7E,GACrBptB,KAAK2xB,aAAevE,EACpBptB,KAAK0xB,eAAiB7jB,KAAKqkB,KAAKlyB,KAAK2xB,aAAe3xB,KAAKmH,gBACzDnH,KAAKmyB,iBACAnyB,KAAK4xB,kBAAkB5xB,KAAKiyB,oBAAmB,GAG/C,oBACL,OAAOjyB,KAAKyxB,eAGP,iBACL,OAAOzxB,KAAKoK,YAGP,iBACL,OAAOpK,KAAKkK,YAGP,eACL,OAAOlK,KAAKopB,UAGd,cAAc3hB,GACZ,OAAOzH,KAAK+xB,aAAatqB,GAGnB,iBACN,MAAM2qB,EAAapyB,KAAK2xB,aAAe,EAAI3xB,KAAKyxB,eAAiB,EACjEzxB,KAAKopB,UAAU7f,YAAc,YAAYvJ,KAAK2xB,uBAAuBS,KAAcpyB,KAAK0xB,iBAGlF,mBAAmBjqB,GACzB,IAAIzH,KAAK4xB,iBAAT,CAIA,GAHA5xB,KAAK4xB,kBAAmB,EACxB5xB,KAAKiyB,oBAAmB,SACIjyB,KAAKuxB,aAAa9pB,GAC3B,CACjB,OAAQA,GACN,IAAK,OACHzH,KAAKyxB,iBACL,MACF,IAAK,OACHzxB,KAAKyxB,iBAKTzxB,KAAKmyB,iBAEPnyB,KAAKiyB,oBAAmB,GACxBjyB,KAAK4xB,kBAAmB,GAGlB,mBAAmBzmB,GACzB,IAAc,IAAVA,EAGF,OAFAnL,KAAKoK,YAAY8J,UAAW,OAC5BlU,KAAKkK,YAAYgK,UAAW,GAI1BlU,KAAKyxB,eAAiBzxB,KAAKwxB,gBAC7BxxB,KAAKoK,YAAY8J,UAAW,EACzBlU,KAAKoK,YAAY8J,UAAW,EAE7BlU,KAAKyxB,eAAiBzxB,KAAK0xB,eAC7B1xB,KAAKkK,YAAYgK,UAAW,EACzBlU,KAAKkK,YAAYgK,UAAW,K,2FC/GrC,gBACA,UAEA,MAAsBme,UAA0B,EAAArtB,QAC9C,YAAYE,EAAkBC,GAC5BC,MAAM,EAAAlB,WAAWC,QAASe,EAAOC,IAFrC,uB,kGCHA,gBAGA,MAAa1D,UAAiC,EAAA4wB,kBAC5C,YACW3wB,EACA4wB,EACTptB,EACAC,GAEAC,MAAMF,EAAOC,GALJ,KAAAzD,WACA,KAAA4wB,WAHb,8B,iGCHA,gBAIA,MAAajM,UAAgC,EAAAgM,kBAC3C,YACW5rB,EACTvB,EACAC,GAEAC,MAAMF,EAAOC,GAJJ,KAAAsB,UAFb,6B,mGCJA,gBAIA,MAAa2Q,UAAkC,EAAAib,kBAC7C,YACW7sB,EACA+sB,EACTrtB,EACAC,GAEAC,MAAMF,EAAOC,GALJ,KAAAK,SACA,KAAA+sB,YAHb,+B,yFCJA,0BACE,YACW9P,EACA+P,EACAD,EACAE,EACAC,GAJA,KAAAjQ,OACA,KAAA+P,OACA,KAAAD,WACA,KAAAE,mBACA,KAAAC,sB,sFCNb,gBACA,UAEA,UAEA,SAKA,UACA,UAIA,UAUA,qBAeE,YAAYC,GACV,OAfO,KAAAjzB,QAAU,EAAAC,eAAegxB,OAE1B,KAAAiC,OAAiC,IAAI1rB,IAMrC,KAAAD,IAAmB,IAAIC,IAIvB,KAAA2rB,UAAyC,IAAI3rB,IA2H7C,KAAA4rB,kBAAoBvxB,MAAOC,IACjC,GAAIA,EAAKT,eAAe,EAAAqW,0BAA2B,CACjD,MAAM,OAAE5R,EAAM,SAAE+sB,GAAa/wB,EAAKT,IACnB,aAAXyE,GACFxF,KAAK6yB,UAAU9wB,IAAIwwB,GACS,IAAxBvyB,KAAK6yB,UAAU5qB,MACjBjI,KAAK+yB,uBAAuB,gBAE9B/yB,KAAK6yB,UAAU/c,OAAOyc,GACM,IAAxBvyB,KAAK6yB,UAAU5qB,MAAYjI,KAAK+yB,uBAAuB,WAjIvDJ,EAAQvyB,MACd,IAAK,IAEH,MACF,IAAK,IACH,MAAM,IAAIyQ,MAAM,GAAG8hB,EAAQvyB,8BAC7B,QACE,MAAM,IAAIyQ,MAAM,GAAG8hB,EAAQvyB,0BAE/BJ,KAAK2yB,QAAU,EAAAnW,cAAc6N,WAAWsI,GAExCpwB,OAAOC,iBAAiB,YAAYjB,UAClC,GAAIgB,OAAOiC,SAAS4iB,OAASpnB,KAAKgzB,UAElC,GAAIhzB,KAAK6yB,UAAU5qB,KAAO,EAAG,CAC3B,MAAMgrB,EAAc1wB,OAAOiC,SAAS4iB,KAEhCpnB,KAAKgzB,UACPzwB,OAAOiC,SAAS4iB,KAAOpnB,KAAKgzB,UACnBhzB,KAAK2yB,QAAQtyB,cACtBkC,OAAOiC,SAAS4iB,KAAO,GAAG7kB,OAAOiC,SAAS0uB,QAAQlzB,KAAK2yB,QAAQtyB,eAEjE,MAAMmrB,EAAM,IAAIxrB,KAAK6yB,UAAUM,UACzBtJ,EAAW2B,EAAI9b,KAAI0jB,GAASA,MAC5Bjb,QAAexU,QAAQ8T,IAAIoS,GACjC,IAAIwJ,GAAoB,EAExB,GAAIzJ,MAAMsD,QAAQ/U,GAChB,IAAK,IAAI6H,EAAI,EAAGA,EAAI7H,EAAO3M,OAAQwU,IAAK,CACtC,GAAyB,kBAAd7H,EAAO6H,GAChB,MAAM,IAAInP,MAAM,6CAElB,GAAKsH,EAAO6H,GACP,CACH,MAAMoO,EAAO5C,EAAIxL,GAEboO,GAAMpuB,KAAK6yB,UAAU/c,OAAOsY,GACJ,IAAxBpuB,KAAK6yB,UAAU5qB,MACjBjI,KAAK+yB,uBAAuB,aANhBM,GAAoB,EAWnCA,IAAmB9wB,OAAOiC,SAAS4iB,KAAO6L,QAE/CjzB,KAAKsC,0BAKH,uBAAuBmE,GAC7B,MAAM1F,EAAM,IAAI,EAAAslB,wBAAwB5f,GACxCzG,KAAKiH,IAAImC,SAAQvI,IACfA,EAAGC,SAAS,CACVC,MACAC,SAAU,EAAAC,gBAAgBC,OAC1BC,SAAU,EAAAC,gBAAgB0L,YAKhC,qBAAqBwlB,GACnBtyB,KAAKgzB,UAAYzwB,OAAOiC,SAAS4iB,KACjC,IAAIkM,EAAiB,EACrB,MAAMC,EAAS,GAEf,IAAKvzB,KAAK2yB,QAAQa,UAAkC,MAAtBxzB,KAAK2yB,QAAQvyB,KAAc,CACvD,MAAMqzB,EAAY,IAAIzzB,KAAK4yB,QAC3B,IAAK,IAAI5S,EAAI,EAAGA,EAAIhgB,KAAK4yB,OAAO3qB,KAAM+X,IACpC,GAAIyT,EAAUzT,IAAIwS,OAASjwB,OAAOiC,SAASC,KAAM,CAC/C,IACEgvB,EAAUzT,IAAIuS,SAASD,GACvB,MAAOzvB,GACPA,EAAM+J,KAAK/J,GAEbywB,IACA,MAImB,IAAnBA,IAEAtzB,KAAKM,cACLN,KAAK2yB,QAAQtyB,cAAgBkC,OAAOiC,SAASC,KAE7CzE,KAAKM,aAAaiyB,SAASD,GAE3BiB,EAAO3mB,KAAK,IAAIiE,MAAM,yBAgB5B,OAXI7Q,KAAKiH,IAAIgB,KAAO,GAClBjI,KAAKiH,IAAImC,SAAQvI,IACf,MAAME,EAAM,IAAI,EAAAU,yBAAyBc,OAAOiC,SAASC,KAAM6tB,GAC/DzxB,EAAGC,SAAS,CACVC,MACAI,SAAU,EAAAC,gBAAgB0L,OAC1B9L,SAAU,EAAAC,gBAAgBC,YAK5BqyB,EAAO/nB,OAAS,EAAU+nB,EACvBD,EAAiB,EAG1B,eAAeI,GACb1zB,KAAK4yB,OAAO7wB,IAAI2xB,GAGlB,kBAAkBA,GAChB1zB,KAAK4yB,OAAO9c,OAAO4d,GAGrB,oBACE1zB,KAAK4yB,OAAO7c,QAkBd,QAAQtL,GACN,MAAM5J,EAAK4J,EAAIrG,SAAS,8BACxBpE,KAAKiH,IAAIlF,IAAIlB,GAEb,MAAMokB,EAAKxa,EAAIzG,SACbhE,KAAK8yB,kBACL,sCAEFroB,EAAIxG,OAAO,EAAAC,WAAWC,QAAS8gB,M,4FCvLnC,gBACA,UA8DM8H,EAAM,IAvDZ,MAKE,YAAoB4G,GAAA,KAAAA,UAJZ,KAAAC,OAAS,UAKf5zB,KAAK6zB,QAAUF,EAAU3zB,KAAK4zB,OAGhC,aACE/hB,EACApL,GAEA,OAAO,IAAI9C,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,cAAchiB,YAAapL,IAC/CjD,QAAQC,IAAIqwB,GACZC,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAC7C,MAAM,IAAIpjB,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAOC,IACFA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,eAAetiB,GACb,OAAO,IAAIlO,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,cAAchiB,iBAClCrO,QAAQC,IAAIqwB,GACZC,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACoB,MAApBA,EAAStF,OAAgB7C,GAAI,GACJ,MAApBmI,EAAStF,OAAgB7C,GAAI,GACjCoH,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBmxB,uBAEtCtxB,OAAOC,IACFA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,uBAMJ,yBAE3BziB,EAAqB,EAAA8K,cAAc6N,WAAW0C,GAE3C,EAAArb,sB,2FClET,gBACA,UACA,UAoIMqb,EAAM,IAlIZ,MAOE,YAAoB4G,GAAA,KAAAA,UANV,KAAAS,WAAa,EAAAC,kBAAkBjuB,OAEjC,KAAAwtB,OAAS,UAKf5zB,KAAK6zB,QAAUF,EAAU3zB,KAAK4zB,OAGhC,QACEhoB,EACAI,GAEA,OAAO,IAAIrI,SAAQ,CAACC,EAAKoH,KACvB,MAAMspB,EAAWtoB,GAAS,GACpB8nB,EAAM,GAAG9zB,KAAK6zB,iBAAiBjoB,YAAe0oB,IACpD,IAAIC,EAAgB,GACpBR,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAEX,OADA8tB,EAAgBxoB,EAASmiB,QAAQvY,IAAI,iBAC9B5J,EAASkoB,OAElB,MAAM,IAAIpjB,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAI,CAAEoI,MAAOuoB,EAAetoB,KAAMgoB,MAC/CrxB,OAAOC,IACFA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,OAAOtiB,GACL,OAAO,IAAIlO,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWhiB,IAC/BkiB,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAE7C,GAAwB,MAApBloB,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,UAAUjT,GACR,OAAO,IAAIvd,SAAQ,CAACC,EAAKoH,KACvB+oB,MAAM/zB,KAAK6zB,QAAS,CAClBG,OAAQ,OACR9F,QAAS,CAAE,eAAgB,oBAC3BnD,KAAMyJ,KAAKC,UAAUvT,KAEpBhW,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAC7C,MAAM,IAAIpjB,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,UAAUtiB,GACR,OAAO,IAAIlO,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWhiB,IAC/BkiB,MAAMD,EAAK,CACTE,OAAQ,WAEP9oB,MAAKa,IAEJ,GADwB,MAApBA,EAAStF,QAAgB7C,GAAI,GACT,MAApBmI,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnCtxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,UAAUO,GACR,OAAO,IAAI/wB,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWa,EAAO7iB,KAChCrQ,EAAqBkzB,EAC3BX,MAAMD,EAAK,CACTE,OAAQ,MACR9F,QAAS,CAAE,eAAgB,oBAC3BnD,KAAMyJ,KAAKC,UAAUjzB,KAEpB0J,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAC7C,GAAwB,MAApBloB,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,uBAMJ,yBAE3B7wB,EAAqB,EAAAkZ,cAAc6N,WAAW0C,GAE3C,EAAAzpB,sB,0GC3IT,gBAUMypB,EAAM,IARZ,oBACW,KAAAlb,GAAK,KAEL,KAAAyD,KAAO,OAEP,KAAA/C,KAAO,SAKZyW,EAAmC,EAAAxM,cAAc6N,WAAW0C,GAEzD,EAAA/D,oC,4FCbT,gBACA,UAyIM+D,EAAM,IAtIZ,MAKE,YAAoB4G,GAAA,KAAAA,UAJZ,KAAAC,OAAS,WAKf5zB,KAAK6zB,QAAUF,EAAU3zB,KAAK4zB,OAGhC,WACEhoB,EAAO,EACPI,EACA4C,EACA+lB,GAEA,OAAO,IAAIhxB,SAAQ,CAACC,EAAKoH,KACvB,MAAMspB,EAAWtoB,GAAS,GAC1B,IAAI8nB,EAAM,GAAG9zB,KAAK6zB,iBAAiBjoB,YAAe0oB,IAC9C1lB,IAAMklB,GAAO,UAAUllB,KACvB+lB,IAAOb,GAAO,WAAWa,KAC7B,IAAIJ,EAAgB,GACpBR,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAEX,OADA8tB,EAAgBxoB,EAASmiB,QAAQvY,IAAI,iBAC9B5J,EAASkoB,OAElB,MAAM,IAAIpjB,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GACJrwB,EAAI,CAAEoI,MAAOuoB,EAAetoB,KAAMgoB,MAEnCrxB,OAAOC,IACFA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,UAAUtiB,GACR,OAAO,IAAIlO,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWhiB,IAC/BkiB,MAAMD,EAAK,CACTE,OAAQ,QAEP9oB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAE7C,GAAwB,MAApBloB,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,aAAaS,GACX,OAAO,IAAIjxB,SAAQ,CAACC,EAAKoH,KACvB+oB,MAAM/zB,KAAK6zB,QAAS,CAClBG,OAAQ,OACR9F,QAAS,CAAE,eAAgB,oBAC3BnD,KAAMyJ,KAAKC,UAAUG,KAEpB1pB,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAC7C,MAAM,IAAIpjB,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,aAAatiB,GACX,OAAO,IAAIlO,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWhiB,IAC/BkiB,MAAMD,EAAK,CACTE,OAAQ,WAEP9oB,MAAKa,IAEJ,GADwB,MAApBA,EAAStF,QAAgB7C,GAAI,GACT,MAApBmI,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnCtxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,qBAKnC,aAAaxM,GACX,OAAO,IAAIhkB,SAAQ,CAACC,EAAKoH,KACvB,MAAM8oB,EAAM,GAAG9zB,KAAK6zB,WAAWlM,EAAW9V,KACpCrQ,EAAsBmmB,EAC5BoM,MAAMD,EAAK,CACTE,OAAQ,MACR9F,QAAS,CAAE,eAAgB,oBAC3BnD,KAAMyJ,KAAKC,UAAUjzB,KAEpB0J,MAAKa,IACJ,GAAwB,MAApBA,EAAStF,OAAgB,OAAOsF,EAASkoB,OAC7C,GAAwB,MAApBloB,EAAStF,OACX,MAAM,IAAIoK,MAAM,EAAA9N,kBAAkByS,WACpC,MAAM,IAAI3E,MAAM,EAAA9N,kBAAkBmxB,sBAEnChpB,MAAK+oB,GAAQrwB,EAAIqwB,KACjBrxB,OAAMC,IACDA,EAAMC,WAAW,EAAAC,mBAAmBiI,EAAInI,GACtB,oBAAlBA,EAAMC,QACRkI,EAAI,IAAI6F,MAAM,EAAA9N,kBAAkBC,qBAC7BgI,EAAI,EAAAjI,kBAAkBoxB,uBAMH,yBAE5Bjf,EAAsB,EAAAsH,cAAc6N,WAAW0C,GAE5C,EAAA7X,uB,2FC/IT,MASMnS,EATN,QAS0ByZ,cAAc6N,WAPhB,CACtB6J,kBAAmB,oBACnBC,cAAe,gBACf3e,UAAW,YACXxS,mBAAoB,uBAOb,EAAAD,qB,2FCbT,gBAQMsxB,EAAoB,IAN1B,oBACW,KAAAjuB,OAAS,SAET,KAAAyuB,QAAU,YAOZ,EAAAR,oBAFT,EAAA7X,cAAc6N,WAAWgK,KCTrBS,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrpB,IAAjBspB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,IAOV,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,QCpBfH,EAAoBO,EAAI,CAACJ,EAASK,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEP,EAASM,IAC5E/K,OAAOiL,eAAeR,EAASM,EAAK,CAAEG,YAAY,EAAMhgB,IAAK4f,EAAWC,MCJ3ET,EAAoBU,EAAI,CAAC1I,EAAKf,IAAUvB,OAAOmL,UAAUC,eAAeR,KAAKtI,EAAKf,GCClF+I,EAAoBxU,EAAK2U,IACH,oBAAXY,QAA0BA,OAAOC,aAC1CtL,OAAOiL,eAAeR,EAASY,OAAOC,YAAa,CAAE5U,MAAO,WAE7DsJ,OAAOiL,eAAeR,EAAS,aAAc,CAAE/T,OAAO,K,MCLvD,gBAEA5e,OAAOC,iBAAiB,QAAQ,KAC9B,MAAMwzB,EAAS3uB,SAASC,cAAc,OACtCD,SAAS0jB,KAAK3oB,OAAO4zB,GACT,IAAI,EAAAC,IAAID,O","file":"main.74fb209efacaaf1e336e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"garage\":\"_21SC4SGf5mTamWfNdNRR\",\"garage__bg\":\"_2VnbeeG4HKnZfSWUedizHh\",\"garage__track-container\":\"_1rsPT6UvHnbHI-FUFvPaSe\",\"hue-rotate\":\"_3MSD3skhU7RLqKdx6pBax7\",\"garage__track-container_finish\":\"_1khEfVJzcbQlBMhoHPdhzY\",\"garage__winner-popup\":\"_17InT8lGlAlk8k1JRcrTCM\",\"garage-bg\":\"-BA3r_cxZwAYkgGQVVZeo\",\"garage-bg__video\":\"_3byu86MCf3s6B7JQuetNAw\",\"garage-bg__car-ctl-btn\":\"_3upDU-ngLjybmFg4wiVvfl\",\"garage-bg__car-ctl-block-number\":\"_3dT19pzigDW1UKuPVLEguq\",\"garage-bg__car-ctl-block\":\"_2e0Ox8Joh0jw60ztR_rVt5\",\"garage-bg__cars-ctls-block\":\"wMVLCRcoluFnZleBHWXlm\",\"garage-bg__self-ctls-block\":\"_2VQVmkB2amN4PG9XCyFye9\",\"garage-bg__pager\":\"_2avafWgl8XDS2KLJswKq0H\",\"garage-bg__pager-span\":\"_3ktlpozBQghco3VMHLJBo1\",\"garage-bg__pager-btn\":\"_2QdjLaEnj3Balh89eZAya4\",\"synthwave-background\":\"_2pUKJme_w_0KTS_JoVNV5b\",\"synthwave-background_race-mode\":\"n1z9UH35nfilmkK2lmQvV\",\"race\":\"_375ItX4gjZY-ZT7KrEfBgG\",\"move-grid\":\"_1MqERRNbzZtvdd9iE43L04\"};","// extracted by mini-css-extract-plugin\nexport default {\"car-div\":\"_3pRKwGaRv59JcJqlApAnkk\",\"car-div__canvas\":\"rH6_OMXna8-zeemMHF11D\",\"car-div__wheel\":\"_3WNDl-LGGtViqzAfLLX4CB\",\"car-div__wheel_forward\":\"_3Rdh32fs7fi-95LcabV_Ed\",\"car-div__wheel_backward\":\"_3xptMXOOFn6YcMVYMigRMa\",\"car-div__explosion\":\"_3w8-mlW0m2zLABohqiDQ3e\",\"car-div_ignite\":\"_3gEkh_UHPsV03BNqNGmyBe\",\"car-div_borken\":\"UxI1dTvw1TMcYTYZRUsCf\",\"car-div_rollForward\":\"_3xWmq3Q2UpNiq2nICrGAIN\",\"car-div-anim\":\"_381V-1xCMVwSdGT0FxnQiO\",\"hue-rotate-360\":\"_2xfuDYbUjW8QtSLtmjzC7b\",\"tire-anim\":\"_2Qs9DAZPIqZivw_0ON2Vot\",\"glitch-animation-1\":\"_18DmdiFkNll__X_lkGV0vb\",\"glitch-animation-2\":\"_3dfetHNRAa7hXqdHw76Uur\",\"glitch-animation-3-xy\":\"qr9kE_7wWzjw836QOZH4l\",\"glitch-animation-4-xy\":\"bBFhOAPzr7ZHO1gMz8m2a\",\"hue-rotate-90\":\"_3V692dxTWP4I0NCS1rUiMn\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2uo9WXSTJyDD3jBlT_quev\",\"text-input\":\"_2YNdYEaErpy02Ske_bZONx\",\"color-input\":\"_3Ye7rbfoBnq4HZn4H-yDB8\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-controls\":\"_2b_svto1O0DGSO3_579_Xj\",\"btn-block\":\"_262VSHreYXfZUHLGeCJEvZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"track\":\"_2hDrLwwwZMiv2NrI-XZZqJ\",\"track_illuminated\":\"_3zXlLAoKpXJ_jlpauHLjHR\",\"track__controls-block\":\"_3pqcODoHFqX9rxmLKBnhD4\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_3TTTWNe5aoHesw4iV0YUGU\",\"header__logo\":\"_2idUQTZia_1M_0xkhMkXf8\",\"glitch-animation-1\":\"_15gesIXTXGxm1uBGCwmmqp\",\"glitch-animation-2\":\"s3dyJTG8fG5lknNowsTqO\",\"header-nav\":\"_7vejZGT8OzUejTiWyGs1P\",\"header-nav__item\":\"_1NYwlHRXmh2YGu63soBsjx\",\"header-nav__anchor\":\"_2n39qEg5Iz5Tym2Z0Jrjz9\",\"header-nav__anchor_active\":\"_2bRvd3RlExbbSpyXLuxSdS\",\"header-nav_not-active\":\"_3gNs_UBLjSUG-Bq-Vf2T67\",\"glitch-animation-3-xy\":\"_3uLEqFHW9zkb7hCp_s1nFC\",\"header-nav__svg\":\"_2FCXcgNK7Jgl9f3ZK-O56I\",\"header-nav__span\":\"_1NVrpdaSQLvqho4VNqQqit\",\"header-nav__list\":\"_1vy8OijKt-Cy7SGXyM4ek9\",\"header-nav__list_disabled\":\"_25SilQm6mkAlbl-WpajKBY\",\"glitch-animation-4-xy\":\"_1oG3arGYS7T4HAPVRP9NtY\",\"hue-rotate-90\":\"_3ejf9WYQ_keT8RXiF6nTIR\",\"hue-rotate-360\":\"_7lIM2sgFifv2jKmceFM04\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"HVDfoBgyIQ4teF5EKFzcD\",\"table\":\"_3mJKnd573Tt4WspNl7gf1J\",\"table__car-preview-box\":\"_86kcZK8UgXIsvYD-wpDED\",\"table__can-be-sorted\":\"_3Xa74hpyx3g6XUuZ9fB9Cm\",\"table__sorted-elem\":\"rfPuVNCW0Sd4nzQGO8-R8\",\"table__sorted-elem_asc\":\"N6296gY2c5AFEX4KjE4I4\",\"table__sorted-elem_desc\":\"_37bMOUs2OF28ZqMubJCPnM\",\"pager\":\"_2q-noyJbwIpKOMhl7AWlq5\",\"pager-span\":\"_1O8erRuDz9RWa3C9tqnUm-\",\"pager-btn\":\"_3OktYstRgXgDE6zlpOM6LA\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup-modal\":\"_3KlZOyoPt2P4FT1Ofdi1oz\",\"popup-bg\":\"_1QGzfQYEHvrYonFptRzkG6\",\"popup-body\":\"_3zDyJwNy615xogiYvCl4vt\",\"popup-body-header\":\"_2DglTs5KJlA1QJriRI6bVZ\",\"popup-body-text\":\"_2oMxBL_Jv1KW3bHu3sVdaA\",\"popup-body__btn-close\":\"HV1Imp7Np5N8O5nUXwQsS\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1KBIW4BNGKHwQtRcKc6JIF\",\"hue-rotate\":\"_1t6lrd-wEBCB6ei-o9kDmk\",\"bar\":\"_2DWg3PnmWwM25SBd7sLJQK\",\"body\":\"_24wm1l_qZHsMTx2Oy-enF4\",\"text\":\"_1UFV3thankQQ1R2Ly1Zle2\"};","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"_2ljk-3_Qk7EjDct5a15qZP\",\"main-component\":\"_394erWdWCWrQmkYlaBZ1L5\",\"btn\":\"_3cliA46UjEIGfEKGRnJzCZ\",\"btn-1\":\"_7q7sGuJSjnM-fV8DfMtl5\",\"btn-4\":\"KE9Fso9VtLV8xX_x8IAiF\",\"btn-6\":\"_35BryCkuNmCUsRxmBw_Y1\",\"btn-9\":\"_9jiLaDmXVuzxrmO3P-9mb\",\"btn-13\":\"_1872fOtVBrHuR0iXYtVhRT\",\"btn-15\":\"TNTO3dtfSfS40M6g8U274\",\"glitched-text\":\"xB_2phBrodgB6jPUYYf8V\",\"glitch-animation-1\":\"_2N8U2GaQpCAdpuVv32CY9B\",\"glitch-animation-2\":\"_1g8DjVAkpXimf-Ld9-LLk8\",\"glitched-item\":\"_1d3HUb7Ipak7Hmv8rOld49\",\"glitch-animation-3-xy\":\"_1-Bstbuj6gmQLGeJ4IzWwX\",\"glitch-animation-4-xy\":\"_35f5UNHMiojkZNKF8axfVl\",\"hue-rotate-90\":\"_1F7WsXPziunUGTlO5-H9zq\",\"hue-rotate-360\":\"_1m-mJQEmO1AKxl_uKQmUQt\"};","import { BaseComp } from '../lib/components/base-comp/base-comp';\nimport { SimpleRouterAgent } from '../lib/services/simple-router/simple-router-agent';\nimport { SimpleRouter } from '../lib/services/simple-router/simple-router';\nimport { DBus } from '../lib/services/dbus/dbus';\nimport { DBusMsgRouteIsChangedMsg } from '../lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { DBusTopics } from '../lib/services/dbus/defs/dbus-topics.def';\nimport { DBUS_COMMON_RESPONSES } from '../lib/services/dbus/defs/dbus-common-responses.def';\nimport { HeaderComponent } from '../components/header/header';\n\nimport sharedStyles from '../styles.scss';\nimport { DBusTXData } from '../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { GarageComp } from '../components/garage/garage';\nimport {\n  DBusHub,\n  isDBusHub,\n  DBusInterface,\n} from '../lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from '../lib/services/dbus/defs/dbus-hub-names.def';\nimport { WinnersComp } from '../components/winners/winners';\nimport { REST_CLIENT_ERROR } from '../services/rest-clients/rest-clients-errors.def';\nimport { isNotifiable } from '../lib/interfaces/notifiable';\nimport { PopupStandaloneModal404Comp } from '../lib/components/popups/standalone/modal/404/popup-404';\nimport { REST_CLIENT_GARAGE } from '../services/rest-clients/client-garage/rest-client-garage';\nimport { AppFlags } from './app-flags';\nimport { DBusMsgRebootMsg } from './dbus-msgs/reboot-msg.def';\nimport { DBusTX } from '../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\n\nexport class App implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.APP;\n\n  protected loadedMainComponents: Record<string, BaseComp> = {};\n\n  protected currMainComponent: BaseComp | undefined;\n\n  protected defaultRouterAgent = new SimpleRouterAgent('hash', '', () =>\n    this.loadMainComponent('default'),\n  );\n\n  protected router = new SimpleRouter({\n    mode: '#',\n    defaultRoot: '',\n    defaultAgent: this.defaultRouterAgent,\n  });\n\n  protected mainlineDBus = new DBus();\n\n  protected tx: DBusTX | undefined;\n\n  protected rebootMsg = new DBusMsgRebootMsg('reboot');\n\n  protected emergencyHandlerIsWorking = false;\n\n  constructor(private readonly rootElement: HTMLElement) {\n    this.setupEmergencyHandler();\n\n    this.rootElement.classList.add(sharedStyles.app);\n\n    const header = new HeaderComponent(DBUS_HUB_NAMES.HEADER);\n    this.rootElement.append(header.rootElement);\n\n    this.mainlineDBus.attachHub(this);\n    this.mainlineDBus.attachHub(header);\n    this.mainlineDBus.attachHub(this.router);\n\n    this.router.activateWantedAgents();\n  }\n\n  private setupEmergencyHandler() {\n    window.addEventListener('unhandledrejection', e => {\n      e.preventDefault();\n      e.promise.catch((error: Error) => {\n        if (\n          !this.emergencyHandlerIsWorking &&\n          error.message in REST_CLIENT_ERROR &&\n          error.message === REST_CLIENT_ERROR.CONNECTION_REFUSED\n        ) {\n          this.emergencyHandlerIsWorking = true;\n          const popup = new PopupStandaloneModal404Comp();\n          popup\n            .setText(\n              `No connection! Check that the server is online\n          and nothing is blocking the connection!`,\n            )\n            .show();\n          const retry = async () => {\n            try {\n              await REST_CLIENT_GARAGE.getCars();\n              console.log('SEND MSG!');\n              await this.sendRebootMsg();\n              console.log('HIDDING');\n              popup.hide();\n              this.emergencyHandlerIsWorking = false;\n            } catch {\n              console.log('catched');\n              await new Promise(res => setTimeout(res, 1000));\n              retry();\n            }\n          };\n          retry();\n        }\n      });\n    });\n  }\n\n  private sendRebootMsg = () => {\n    return this.tx?.transmit({\n      msg: this.rebootMsg,\n      prepMode: DBusTXPrepModes.freeze,\n      waitMode: DBusTXWaitModes.allSetled,\n    });\n  };\n\n  connect(intrfce: DBusInterface) {\n    const routeRX = intrfce.getNewRX(this.watchRouterMsgs);\n    intrfce.plugRX(DBusTopics.ROUTING, routeRX);\n    this.tx = intrfce.getNewTX('APP SYSTEM MSGS TX');\n  }\n\n  private watchRouterMsgs = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      // TODO: Rework with enum!?\n      this.loadMainComponent(msg.newRoute);\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private loadMainComponent(name: string): void {\n    if (!(name in this.loadedMainComponents)) {\n      switch (name) {\n        case '#garage':\n          this.loadedMainComponents[`${name}`] = new GarageComp();\n          break;\n        case '#winners':\n          this.loadedMainComponents[`${name}`] = new WinnersComp();\n          break;\n        default:\n          window.location.hash = '#garage';\n          break;\n      }\n    }\n    const newComponent = this.loadedMainComponents[`${name}`];\n\n    if (newComponent) {\n      if (this.currMainComponent) {\n        this.currMainComponent.rootElement.remove();\n      }\n\n      this.currMainComponent = newComponent;\n      newComponent.rootElement.classList.add(sharedStyles['main-component']);\n      this.rootElement.append(newComponent.rootElement);\n\n      if (isDBusHub(this.currMainComponent)) {\n        try {\n          this.mainlineDBus.attachHub(this.currMainComponent);\n        } catch {\n          // no need to catch\n        }\n      }\n      if (isNotifiable(this.currMainComponent)) {\n        console.log('notify');\n        this.currMainComponent.notify(null);\n      }\n    }\n  }\n}\n","import { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgRebootMsg extends DBusMsg {\n  constructor(\n    readonly signal: 'reboot',\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.APP_CTL, rxIds, prefResponseRxIds);\n  }\n}\n","export enum CarActions {\n  CREATED,\n  SELECTED,\n  REMOVED,\n  UPDATED,\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { CarActions } from '../../../car-actions.def';\n\nexport class DBusMsgCarActionMsg extends DBusMsg {\n  constructor(\n    readonly action: CarActions,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.CAR_ACTION, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionCreatedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.CREATED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { GarageServicemanContract } from '../../../garage-serviceman-contract.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionRemovedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly nullifiedContract: GarageServicemanContract,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.REMOVED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionSelectedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly notifyChanges?: (car: RegCarData) => unknown,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.SELECTED, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageMsg } from './garage-msg.def';\n\nexport class DBusMsgGaragePageIsChangedMsg extends DBusMsgGarageMsg {}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageRaceMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgRaceRequestMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { RaceStatusesList } from '../../../race-statuses.def';\nimport { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgGarageRaceStatusMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly status: RaceStatusesList,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageResetMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageResetMsg } from './garage-reset-msg.def';\n\nexport class DBusMsgGarageResetReqMsg extends DBusMsgGarageResetMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageMsg } from './garage-msg.def';\n\nexport type GarageStatus =\n  | 'need reset'\n  | 'car moves'\n  | 'all cars stopped'\n  | 'reset is not needed';\n\nexport class DBusMsgGarageStatusMsg extends DBusMsgGarageMsg {\n  constructor(\n    readonly status: GarageStatus,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBUS_HUB_NAMES } from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageManagersTeam } from './garage-managers-team';\nimport { CarComp } from './subcomps/car/car';\nimport { TrackComp } from './subcomps/track/track';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { DBusMsgCarActionCreatedMsg } from './dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport { DBusMsgRaceRequestMsg } from './dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport { DBusMsgGarageResetReqMsg } from './dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Pager } from '../../lib/services/pager/pager';\nimport { DBusMsgGenerateCarsMsg } from './subcomps/main-controls/dbus-msgs/generate-cars-msg.def';\nimport { DBusMsgRebootMsg } from '../../app/dbus-msgs/reboot-msg.def';\nimport { DBusMsgGaragePageIsChangedMsg } from './dbus-msgs/by-topic/garage/garage-page-is-changed.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\n\ntype TracksGeometry = {\n  trackHeights: number[];\n  displacements: number[];\n  paddingBase: number;\n  paddingShift: number;\n};\n\nexport class GarageCompCtlAkaDirector implements DBusHub {\n  static readonly DISPLACEMENT_FIX = -30;\n\n  static readonly CAR_WIDTH_RATIO = 0.2;\n\n  static readonly CAR_MAX_WIDTH =\n    1920 * GarageCompCtlAkaDirector.CAR_WIDTH_RATIO;\n\n  static readonly SKIPPED_PROGRESSION_MEMBERS_COUNT = 2;\n\n  static readonly PADDING_SHIFT_BASE = 20;\n\n  static readonly PADDING_SHIFT_BASE_VW = 1920;\n\n  static readonly CAR_IMG_RATIO = 3.78;\n\n  static readonly SCALE_FACTOR = 0.95;\n\n  readonly hubName = DBUS_HUB_NAMES.GARAGE_CONTROLLER;\n\n  protected txs = new Set<DBusTX>();\n\n  private garageManagersTeam: GarageManagersTeam;\n\n  private pager: Pager;\n\n  private entriesPerPage = 7;\n\n  private pagerContainer = document.createElement('div');\n\n  private racePromise: Promise<unknown> | undefined;\n\n  private ctlBlocks: HTMLElement[] = [];\n\n  // * FINISHED < 40 LINES *\n  constructor(\n    private tracksContainer: HTMLElement,\n    private carCtlsBlock: HTMLElement,\n  ) {\n    this.garageManagersTeam = new GarageManagersTeam(\n      tracksContainer,\n      carCtlsBlock,\n      this.lockCallback,\n    );\n\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n    this.setupPager();\n  }\n\n  // * FINISHED < 40 LINES *\n  private setupPager() {\n    const btnNextPage = this.pager.getBtnNextPage();\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n\n    const pagerInfo = this.pager.getPagerSpan();\n    pagerInfo.classList.add(styles['garage-bg__pager-span']);\n\n    this.pagerContainer.classList.add(styles['garage-bg__pager']);\n    this.pagerContainer.append(btnPrevPage, btnNextPage, pagerInfo);\n  }\n\n  // * FINISHED < 40 LINES *\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.resetState();\n      await this.reloadData(dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  // * FINISHED < 40 LINES *\n  async startWorking(): Promise<boolean> {\n    try {\n      await this.reloadData();\n      window.addEventListener('resize', () => this.redraw());\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // * FINISHED < 40 LINES *\n  async connect(int: DBusInterface): Promise<void> {\n    this.txs.add(int.getNewTX('broadcast paging'));\n    this.garageManagersTeam.autoConnect(int);\n\n    const carActionsMsgsRX = int.getNewRX(\n      this.carActionsRXFunc,\n      'monitor cars removes',\n    );\n    int.plugRX(DBusTopics.CAR_ACTION, carActionsMsgsRX);\n\n    const raceMsgsRX = int.getNewRX(this.racingRXFunc, 'handle race requsets');\n    int.plugRX(DBusTopics.GARAGE, raceMsgsRX);\n\n    const generatorMsgsRX = int.getNewRX(this.generatorRXFunc);\n    int.plugRX(DBusTopics.GENERATE, generatorMsgsRX);\n\n    const appCtlMsgsRX = int.getNewRX(\n      this.appCtlRXFunc,\n      'handle app reboot msgs',\n    );\n    int.plugRX(DBusTopics.APP_CTL, appCtlMsgsRX);\n  }\n\n  private appCtlRXFunc = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRebootMsg && data.msg.signal === 'reboot') {\n      await this.resetState();\n      await this.reloadData();\n      return true;\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  // * FINISHED < 40 LINES *\n  private generatorRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgGenerateCarsMsg &&\n      data.msg.status === 'end'\n    ) {\n      const contracts = this.garageManagersTeam.getContracts();\n\n      if (contracts.size < this.entriesPerPage) {\n        await this.resetState();\n        await this.reloadData();\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  // * FINISHED < 40 LINES *\n  private racingRXFunc = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRaceRequestMsg) {\n      this.pager.toogleLock(true);\n      await this.performRace();\n      this.pager.toogleLock(false);\n      return true;\n    }\n    if (data.msg instanceof DBusMsgGarageResetReqMsg) {\n      return this.resetState();\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  // * FINISHED < 40 LINES *\n  private async resetState() {\n    return new Promise((res, rej) => {\n      this.toggleCtlsBlockDisabled(true);\n      this.pager.toogleLock(true);\n      this.garageManagersTeam\n        .resetState()\n        .then(() => res(true))\n        .catch((error: Error) => {\n          rej(error);\n        })\n        .finally(() => {\n          this.pager.toogleLock(false);\n          this.toggleCtlsBlockDisabled(false);\n        });\n    });\n  }\n\n  private async lockCallback(state: boolean) {\n    this.pager.toogleLock(state);\n    return true;\n  }\n\n  private toggleCtlsBlockDisabled(state: boolean) {\n    if (state === true) {\n      this.carCtlsBlock.addEventListener(\n        'click',\n        this.carCtlsBlockBlockListener,\n        {\n          capture: true,\n        },\n      );\n      this.ctlBlocks.forEach((block, index) => {\n        block.style.setProperty(\n          '--glitch-delay',\n          `${index / this.ctlBlocks.length}s`,\n        );\n        block.classList.add(sharedStyles['glitched-item']);\n      });\n    } else {\n      this.carCtlsBlock.removeEventListener(\n        'click',\n        this.carCtlsBlockBlockListener,\n        {\n          capture: true,\n        },\n      );\n      this.ctlBlocks.forEach(block => {\n        block.classList.remove(sharedStyles['glitched-item']);\n        block.style.removeProperty('--glitch-delay');\n      });\n    }\n  }\n\n  private carCtlsBlockBlockListener = (e: Event) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // * FINISHED < 40 LINES *\n  // ! NOT TESTED PROMISE !\n  private async performRace() {\n    this.racePromise = this.garageManagersTeam.performRace().finally(() => {\n      this.racePromise = undefined;\n    });\n    return this.racePromise;\n  }\n\n  // * FINISHED < 40 LINES *\n  private carActionsRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgCarActionRemovedMsg ||\n      data.msg instanceof DBusMsgCarActionCreatedMsg\n    ) {\n      if (this.racePromise) await this.racePromise;\n      try {\n        if (data.msg instanceof DBusMsgCarActionRemovedMsg) {\n          this.garageManagersTeam.handleCarRm(data.msg.car);\n        }\n        this.resetState().finally(() => this.reloadData());\n      } catch {\n        this.pager.tryChangePage('prev');\n      }\n    }\n\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  // * FINISHED < 40 LINES *\n  private reloadData(dir?: 'prev' | 'next') {\n    return new Promise<boolean>((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : this.pager.getCurrPageNumber() - 1\n        : this.pager.getCurrPageNumber();\n      REST_CLIENT_GARAGE.getCars(page, this.pager.getEntriesPerPage()).then(\n        async response => {\n          const { limit, cars } = response;\n          this.pager.setEntriesCount(Number.parseInt(limit, 10));\n          if (response.cars.length === 0) {\n            if (dir) {\n              rej();\n              return;\n            }\n\n            if (page > 1) {\n              await this.pager.tryChangePage('prev');\n              res(true);\n              return;\n            }\n          }\n          this.broadcastPaging();\n\n          await this.garageManagersTeam.nullifyContracts();\n          const newContracts: GarageServicemanContract[] = [];\n\n          cars.forEach((car, index) => {\n            const track = new TrackComp();\n            const carComp = new CarComp(car, index + 1);\n            track.placeCar(carComp);\n            newContracts.push({ track, car: carComp });\n          });\n\n          this.garageManagersTeam.addContracts(...newContracts);\n          this.garageManagersTeam.resetState();\n          this.redraw();\n          res(true);\n        },\n      );\n    });\n  }\n\n  private broadcastPaging() {\n    const msg = new DBusMsgGaragePageIsChangedMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  // * FINISHED < 40 LINES *\n  private redraw() {\n    this.clearDOM();\n\n    const geometry = this.calcGeometry();\n    this.setStylesForTracks(geometry);\n\n    this.drawTracks();\n    this.drawCarsCtls();\n  }\n\n  // * FINISHED < 40 LINES *\n  private clearDOM() {\n    while (this.tracksContainer.firstChild)\n      this.tracksContainer.firstChild.remove();\n    while (this.carCtlsBlock.firstChild) this.carCtlsBlock.firstChild.remove();\n  }\n\n  // ! MORE THAN 40 LINES ! BUT IT IS AN ONE-PIECE FUNCTION !\n  // ! BETTER TO SAVE IT AS IS\n  private calcGeometry(): TracksGeometry {\n    const style = window.getComputedStyle(this.tracksContainer);\n    const containerHeight =\n      Number.parseFloat(style.height) -\n      Number.parseFloat(style.paddingBottom) -\n      Number.parseFloat(style.paddingTop);\n    const firstAutoWidth = Math.min(\n      window.innerWidth * GarageCompCtlAkaDirector.CAR_WIDTH_RATIO,\n      GarageCompCtlAkaDirector.CAR_MAX_WIDTH,\n    );\n    const firstAutoHeight =\n      firstAutoWidth / GarageCompCtlAkaDirector.CAR_IMG_RATIO;\n    const heights: number[] = [];\n    let heightSum = 0;\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      const factor = GarageCompCtlAkaDirector.SCALE_FACTOR ** index;\n      const carTrackHeight = firstAutoHeight * factor;\n      heightSum += carTrackHeight;\n      heights.push(carTrackHeight);\n    });\n\n    const excessHeight = heightSum - containerHeight;\n    const heightsReversed = heights.sort((a, b) => a - b);\n    const displacementBase =\n      excessHeight > 0\n        ? excessHeight / this.garageManagersTeam.getContracts().size -\n          GarageCompCtlAkaDirector.SKIPPED_PROGRESSION_MEMBERS_COUNT\n        : 0;\n\n    const displacements: number[] = [];\n    const midIndex = (contracts.length - 1) / 2;\n\n    contracts.forEach((contract, index) => {\n      const diff = index - midIndex;\n      const displacement =\n        displacementBase * -diff + GarageCompCtlAkaDirector.DISPLACEMENT_FIX;\n      displacements.push(displacement);\n    });\n\n    const paddingBase =\n      (heightsReversed[0] as number) * GarageCompCtlAkaDirector.CAR_IMG_RATIO;\n    const paddingShift =\n      (GarageCompCtlAkaDirector.PADDING_SHIFT_BASE * window.innerWidth) /\n      GarageCompCtlAkaDirector.PADDING_SHIFT_BASE_VW;\n\n    return {\n      trackHeights: heightsReversed,\n      displacements,\n      paddingBase,\n      paddingShift,\n    };\n  }\n\n  // * FINISHED < 40 LINES *\n  private setStylesForTracks(geometry: TracksGeometry) {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      contract.track.rootElement.style.setProperty(\n        'height',\n        `${geometry.trackHeights[index]}px`,\n      );\n\n      contract.track.rootElement.style.setProperty(\n        'top',\n        `${geometry.displacements[index]}px`,\n      );\n\n      contract.track.rootElement.style.setProperty('z-index', `${index + 1}`);\n\n      contract.track.rootElement.style.setProperty(\n        '--padding-w',\n        `${\n          (geometry.trackHeights[\n            geometry.trackHeights.length - 1 - index\n          ] as number) *\n            GarageCompCtlAkaDirector.CAR_IMG_RATIO -\n          geometry.paddingBase +\n          geometry.paddingShift * (contracts.length - 1 - index)\n        }px`,\n      );\n    });\n  }\n\n  // * FINISHED < 40 LINES *\n  private drawTracks() {\n    this.tracksContainer.append(\n      this.pagerContainer,\n      ...[...this.garageManagersTeam.getContracts()].map(\n        contract => contract.track.rootElement,\n      ),\n    );\n  }\n\n  // * FINISHED < 40 LINES *\n  private drawCarsCtls() {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n    this.ctlBlocks = contracts.map((contract, index) => {\n      const block = this.createCarCtlBlock(contract.car, index + 1);\n      this.connectCtlAndTrack(block, contract.track);\n      return block;\n    });\n    this.carCtlsBlock.append(...this.ctlBlocks);\n  }\n\n  // * FINISHED < 40 LINES *\n  private createCarCtlBlock = (car: CarComp, index: number): HTMLElement => {\n    const btns = [car.btnSelect, car.btnStart, car.btnReset, car.btnRm];\n\n    btns.forEach(btn => {\n      btn.classList.add(sharedStyles.btn, styles['garage-bg__car-ctl-btn']);\n    });\n\n    car.btnStart.classList.add(sharedStyles['btn-15']);\n    car.btnSelect.classList.add(sharedStyles['btn-13']);\n    car.btnReset.classList.add(sharedStyles['btn-9']);\n    car.btnRm.classList.add(sharedStyles['btn-4']);\n\n    const numberSpan = document.createElement('span');\n    numberSpan.classList.add(styles['garage-bg__car-ctl-block-number']);\n    numberSpan.textContent = index.toString();\n\n    const container = document.createElement('div');\n    container.classList.add(styles['garage-bg__car-ctl-block']);\n    container.append(numberSpan, ...btns);\n\n    return container;\n  };\n\n  // * FINISHED < 40 LINES *\n  // ? REFACTOR TO BE ABLE TO RM EVENT LISTENERS ?\n  private connectCtlAndTrack = (ctlElem: HTMLElement, track: TrackComp) => {\n    ctlElem.addEventListener(\n      'mouseover',\n      () => track.illuminateSelf(true),\n      true,\n    );\n    ctlElem.addEventListener(\n      'mouseout',\n      () => track.illuminateSelf(false),\n      true,\n    );\n  };\n}\n","import { PopupStandaloneModalProgressComp } from '../../lib/components/popups/standalone/modal/progress/popup-progress';\nimport { genUniqId } from '../../lib/generators/generators';\nimport {\n  EngineResponse,\n  REST_CLIENT_ENGINE,\n} from '../../services/rest-clients/client-engine/rest-client-engine';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\n\nexport enum GarageDriverCommands {\n  START_DRIVING,\n  STOP_DRIVING,\n}\n\nexport class GarageDriver {\n  private contract: GarageServicemanContract | undefined;\n\n  private currDriveId: string | undefined;\n\n  private drivePromise: Promise<unknown> | undefined;\n\n  private ignitionPromise: Promise<unknown> | undefined;\n\n  private lastStart: number | undefined;\n\n  private lastTimeInMs: number | undefined;\n\n  public isFree(): boolean {\n    if (!this.contract) return true;\n    return false;\n  }\n\n  putBehindTheWheel(contract: GarageServicemanContract): void {\n    if (this.contract) throw new Error('ALREADY IN CAR');\n    this.contract = contract;\n  }\n\n  async getOutOfTheCar() {\n    this.contract = undefined;\n  }\n\n  async performDrivingProtocol(flags?: Record<string, unknown>) {\n    const newPromise = new Promise<{\n      driveParams: EngineResponse;\n      drivePromise: Promise<number | false>;\n    }>((res, rej) => {\n      if (flags) this.contract?.car.disableCtls(); // race\n      const thisDriveId = genUniqId();\n      this.currDriveId = thisDriveId;\n      console.log('ignite');\n      this.ignitionPromise = this.TurnOnTheIgnition()\n        .then(driveParams => {\n          console.log('ignited');\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          // console.log(driveParams);\n          const drivePromise = this.drive(driveParams, thisDriveId, flags);\n          res({\n            driveParams,\n            drivePromise,\n          });\n        })\n        .catch((error: Error) => {\n          console.log(error);\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          else rej(error);\n        });\n    });\n    return newPromise;\n  }\n\n  private async TurnOnTheIgnition() {\n    if (!this.contract) throw new Error('NOT_BEHIND_THE_WHEEL');\n    if (this.drivePromise) await Promise.allSettled([this.drivePromise]);\n    console.log('new promise');\n    const { car } = this.contract;\n    car.toggleIgniteAnim(true);\n    const params = await REST_CLIENT_ENGINE.toggleEngine(\n      this.contract.car.currCar.id,\n      'started',\n    ).finally(() => {\n      car.toggleIgniteAnim(false);\n    });\n    // console.log('ENGINE STARTED');\n    return params;\n  }\n\n  public isInStartPosition() {\n    return !this.currDriveId;\n  }\n\n  // !!! If animation fails, this promise never resolves!\n  async returnToStart() {\n    this.currDriveId = undefined;\n    if (this.contract) {\n      if (this.ignitionPromise) await this.ignitionPromise;\n      if (this.drivePromise) {\n        console.log('return', this.contract);\n        await this.stopCar(true, false);\n        console.log('return', this.contract);\n        await this.contract.car.rollBack(this.drivePromise);\n        console.log('return', this.contract);\n        const msgBlock = document.createElement('div');\n        msgBlock.style.setProperty('height', '100%');\n        msgBlock.style.setProperty('width', '40%');\n        msgBlock.style.setProperty('position', 'absolute');\n        msgBlock.style.setProperty('right', '0px');\n        msgBlock.style.setProperty('top', '100%');\n        msgBlock.style.setProperty('transform', 'translate(-40%, -120%)');\n        this.contract.track.rootElement.append(msgBlock);\n        const popup = new PopupStandaloneModalProgressComp();\n\n        popup\n          .setText(\n            `I can't let the engine start again until\n          the server finishes its business, read the notes, please.`,\n          )\n          .show(msgBlock);\n        const interval = this.updateProgress(popup);\n        await this.contract.car.playAwaitingAnim(this.drivePromise);\n        if (interval) clearTimeout(interval);\n        popup.hide();\n        msgBlock.remove();\n      } else {\n        await this.stopCar(false, false);\n        await this.contract.car.rollBack();\n      }\n    }\n    return true;\n  }\n\n  private updateProgress(\n    popup: PopupStandaloneModalProgressComp,\n  ): NodeJS.Timeout {\n    const interval = setInterval(() => {\n      if (this.lastTimeInMs && this.lastStart) {\n        const progress =\n          ((Date.now() - this.lastStart) / this.lastTimeInMs) * 100;\n        popup.setProgress(progress);\n      } else clearInterval(interval);\n    }, 500);\n    return interval;\n  }\n\n  private async drive(\n    driveParams: EngineResponse,\n    driveId: string,\n    flags?: Record<string, unknown>,\n  ): Promise<false | number> {\n    return new Promise<false | number>((res, rej) => {\n      if (this.contract) {\n        const { contract } = this;\n        const time = GarageDriver.calculateDriveTime(driveParams);\n        this.lastStart = Date.now();\n        this.lastTimeInMs = time * 1000;\n        const start = Date.now();\n        console.log('enter drive mode');\n        this.drivePromise = REST_CLIENT_ENGINE.enterDriveMode(\n          contract.car.currCar.id,\n        ).then(success => {\n          if (\n            !(contract === this.contract) ||\n            !(driveId === this.currDriveId)\n          ) {\n            rej(new Error('interrupted'));\n          } else if (success) {\n            res(time);\n            console.log('stop car finish');\n            this.stopCar(true, true, false, flags);\n          } else {\n            console.log('stop car broken');\n            this.stopCar(true, false, true, flags);\n            res(false);\n          }\n          console.log(`time from start: ${Date.now() - start}`);\n        });\n        contract.car\n          .rollForward(time, !flags)\n          .catch(() => {\n            res(false);\n          })\n          .then(async playbackRate => {\n            if (playbackRate && playbackRate > 0) {\n              this.stopCar(true, true, false, flags);\n              const connectionRestored = await this.emergencyAwaitServer(\n                time * 1000,\n                1000,\n                this.drivePromise,\n              );\n              if (!connectionRestored) {\n                rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n              }\n            }\n          });\n      } else rej(new Error('No car'));\n    });\n  }\n\n  private emergencyAwaitServer = (\n    timeInMS: number,\n    delayInMS: number,\n    resPromise?: Promise<unknown>,\n  ) => {\n    const popup = new PopupStandaloneModalProgressComp();\n    popup.setText(`Connection is lost... awaiting server`).setProgress(1);\n    return new Promise<boolean>(res => {\n      const startTime = Date.now();\n      let IamResolved = false;\n      let interval: NodeJS.Timeout;\n      const resFunc = () => {\n        IamResolved = true;\n        if (interval) clearInterval(interval);\n        popup.hide();\n        res(false);\n      };\n      const chargeInterval = () => {\n        interval = setInterval(() => {\n          if (IamResolved) {\n            clearInterval(interval);\n            return;\n          }\n          popup.show();\n          const currTime = Date.now();\n          const elapsedTime = currTime - startTime;\n          if (elapsedTime < timeInMS) {\n            const progress = (elapsedTime / timeInMS) * 100;\n            popup.setProgress(progress);\n          } else resFunc();\n        }, timeInMS / 20); // 5%\n      };\n\n      resPromise?.finally(() => {\n        resFunc();\n      });\n      setTimeout(() => {\n        chargeInterval();\n      }, delayInMS);\n    });\n  };\n\n  private async stopCar(\n    onlyAnim = false,\n    rollover = true,\n    broken = false,\n    flags?: Record<string, unknown>,\n  ) {\n    if (this.contract) {\n      if (!broken && !onlyAnim) {\n        const response = await REST_CLIENT_ENGINE.toggleEngine(\n          this.contract.car.currCar.id,\n          'stopped',\n        );\n        console.log('stopped by server', response);\n      }\n      await this.contract.car.stop(rollover, broken, flags);\n      return true;\n    }\n    throw new Error('No car');\n  }\n\n  private static calculateDriveTime(params: EngineResponse) {\n    const time = params.distance / 1000 / params.velocity; /// !!! distance units???\n    return time;\n  }\n}\n","import { RegCarData, WinnerCarData } from '../../definitions/car-data.def';\nimport { DBusInterface } from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgCarActionSelectedMsg } from './dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { GarageDriver, GarageDriverCommands } from './garage-driver';\nimport { genUniqId } from '../../lib/generators/generators';\n\nimport styles from './garage.scss';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\nimport { DBusMsgGarageRaceStatusMsg } from './dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { RaceStatusesList } from './race-statuses.def';\nimport {\n  getTransitionDuration,\n  transitionPromise,\n} from '../../lib/gui/animation';\nimport { GaragePopupWinner } from './subcomps/popup-winner/popup-winner';\nimport {\n  DBusMsgRoutingRestrainMsg,\n  RoutingRestrainActions,\n} from '../../lib/services/simple-router/dbus-msgs-defs/types/routing-restrict-msg.def';\nimport {\n  DBusMsgGarageStatusMsg,\n  GarageStatus,\n} from './dbus-msgs/by-topic/garage/garage-status-msg.def';\n\ntype RaceData = {\n  raceId: string;\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n  participantsCount: number;\n  flags: Record<string, unknown>;\n  stratedCount: number;\n};\n\ntype RaceResults = {\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n};\nexport class GarageManagersTeam implements DBusPort {\n  protected txs = new Set<DBusTX>();\n\n  protected contracts = new Set<GarageServicemanContract>();\n\n  protected freeDrivers = new Set<GarageDriver>();\n\n  protected busyDrivers = new Map<GarageServicemanContract, GarageDriver>();\n\n  protected movingDrivers = new Map<GarageServicemanContract, GarageDriver>();\n\n  protected currRaceId: string | undefined;\n\n  protected winnerPopup = new GaragePopupWinner();\n\n  constructor(\n    private readonly tracksContainer: HTMLElement,\n    private readonly carCtlsBlock: HTMLElement,\n    private readonly directorLockCb: (state: boolean) => Promise<boolean>,\n  ) {\n    this.carCtlsBlock.addEventListener('click', this.carCtlsClickListener);\n    this.winnerPopup.rootElement.classList.add(styles['garage__winner-popup']);\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('garage serviceman');\n    this.txs.add(tx);\n  }\n\n  public getContracts() {\n    return this.contracts;\n  }\n\n  public handleCarRm(car: RegCarData) {\n    this.contracts.forEach(contract => {\n      if (contract.car.currCar.id === car.id)\n        this.busyDrivers.get(contract)?.getOutOfTheCar();\n    });\n  }\n\n  async nullifyContracts(contracts?: GarageServicemanContract[]) {\n    if (contracts) {\n      this.tryFreeDrivers(...contracts);\n      contracts.forEach(contract => {\n        this.contracts.delete(contract);\n      });\n    } else {\n      this.tryFreeDrivers(...this.contracts);\n      this.contracts.clear();\n    }\n  }\n\n  addContracts(...сontracts: GarageServicemanContract[]) {\n    сontracts.forEach(newContract => this.contracts.add(newContract));\n  }\n\n  private carCtlsClickListener = (e: Event) => {\n    if (e.target instanceof HTMLElement) {\n      const elem = e.target;\n      let btn: HTMLButtonElement | undefined;\n\n      if (elem instanceof HTMLButtonElement) btn = elem;\n      else if (elem.parentElement instanceof HTMLButtonElement)\n        btn = elem.parentElement;\n\n      if (btn && btn.disabled !== true) {\n        this.contracts.forEach(contract => {\n          if (this.currRaceId) return;\n          if (btn === contract.car.btnSelect) {\n            this.handleSelection(contract);\n            return;\n          }\n          if (btn === contract.car.btnRm) {\n            contract.car.btnRm.disabled = true;\n            this.handleRemoving(contract);\n            return;\n          }\n          if (btn === contract.car.btnStart) {\n            contract.car.btnStart.disabled = true;\n            this.startDriving(contract);\n            return;\n          }\n          if (btn === contract.car.btnReset) {\n            contract.car.btnReset.disabled = true;\n            this.handleRestoreState(contract);\n          }\n        });\n      }\n    }\n  };\n\n  async resetState(prepareForRace?: boolean) {\n    if (!prepareForRace) this.currRaceId = undefined;\n    this.winnerPopup.rootElement.remove();\n    this.tracksContainer.classList.remove(\n      styles['synthwave-background_race-mode'],\n    );\n    await this.rollbackCars();\n    this.broadcastGarageStatus('reset is not needed');\n\n    if (!prepareForRace) {\n      this.broadcastRaceStatus('READY_TO_GO');\n    }\n  }\n\n  private async handleRestoreState(contract: GarageServicemanContract) {\n    const driver = this.busyDrivers.get(contract);\n    if (driver) {\n      await driver.returnToStart();\n      await this.broadcastIfAllInStart();\n    }\n  }\n\n  private async broadcastIfAllInStart() {\n    const allInStart = [...this.busyDrivers].every(contract =>\n      contract[1].isInStartPosition(),\n    );\n    if (allInStart) {\n      this.broadcastGarageStatus('reset is not needed');\n    }\n  }\n\n  private async startDriving(\n    contract: GarageServicemanContract,\n    flags?: Record<string, unknown>,\n  ) {\n    let choosedDriver = this.busyDrivers.get(contract);\n\n    if (!choosedDriver) {\n      // !!! excess check?\n      choosedDriver = [...this.freeDrivers].find(driver => driver.isFree());\n\n      if (choosedDriver) {\n        this.freeDrivers.delete(choosedDriver);\n      } else {\n        choosedDriver = new GarageDriver();\n      }\n\n      this.busyDrivers.set(contract, choosedDriver);\n\n      choosedDriver.putBehindTheWheel(contract);\n    }\n\n    this.movingDrivers.set(contract, choosedDriver);\n    if (this.movingDrivers.size === 1) {\n      await this.broadcastGarageStatus('need reset');\n      await this.toggleRoutingRestrains('restrain');\n      await this.broadcastGarageStatus('car moves');\n    }\n\n    return choosedDriver\n      .performDrivingProtocol(flags)\n      .then(response => {\n        response.drivePromise.finally(() => {\n          this.movingDrivers.delete(contract);\n          console.log(`MOVING DRIVERS: ${this.movingDrivers.size}`);\n\n          if (this.movingDrivers.size === 0) {\n            this.toggleRoutingRestrains('unleash');\n            this.broadcastGarageStatus('all cars stopped');\n          }\n        });\n        return response;\n      })\n      .catch(error => {\n        this.movingDrivers.delete(contract);\n\n        if (this.movingDrivers.size === 0) {\n          this.toggleRoutingRestrains('unleash');\n          this.broadcastGarageStatus('all cars stopped');\n        }\n\n        console.log(`MOVING DRIVERS: ${this.movingDrivers.size}`);\n        throw error;\n      });\n  }\n\n  private async broadcastGarageStatus(status: GarageStatus) {\n    const msg = new DBusMsgGarageStatusMsg(status);\n    const transmissions: Promise<unknown>[] = [];\n    this.txs.forEach(tx => {\n      const x = tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      transmissions.push(x);\n    });\n    return Promise.allSettled(transmissions);\n  }\n\n  private async toggleRoutingRestrains(action: RoutingRestrainActions) {\n    const msg = new DBusMsgRoutingRestrainMsg(action, this.routingRestrainFunc);\n    const transmissions: Promise<unknown>[] = [];\n    this.txs.forEach(tx => {\n      const x = tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      transmissions.push(x);\n    });\n    return Promise.allSettled(transmissions);\n  }\n\n  private routingRestrainFunc = async () => {\n    return false;\n  };\n\n  private handleRemoving(contract: GarageServicemanContract) {\n    REST_CLIENT_GARAGE.deleteCar(contract.car.currCar.id).then(async () => {\n      await REST_CLIENT_WINNERS.deleteWinner(contract.car.currCar.id).catch(\n        () => {},\n      );\n      this.tryFreeDrivers(contract);\n      this.contracts.delete(contract);\n      const msg = new DBusMsgCarActionRemovedMsg(\n        contract.car.currCar,\n        contract,\n      );\n      this.txs.forEach(tx => {\n        tx.transmit({\n          msg,\n          prepMode: DBusTXPrepModes.freeze,\n          waitMode: DBusTXWaitModes.nowait,\n        });\n      });\n    });\n  }\n\n  private handleSelection(contract: GarageServicemanContract) {\n    const msg = new DBusMsgCarActionSelectedMsg(\n      contract.car.currCar,\n      this.genSelectCallback(contract),\n    );\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  private async rollbackCars() {\n    this.tracksContainer.classList.remove(\n      styles['garage__track-container_finish'],\n    );\n    this.tracksContainer.style.setProperty('--translate-x', '0px');\n    // rollback cars\n    const rollbacks: Promise<unknown>[] = [];\n    this.busyDrivers.forEach(driver => {\n      rollbacks.push(driver.returnToStart());\n    });\n    console.log('awaiting', rollbacks);\n    await Promise.all(rollbacks);\n    console.log('rollbacks done');\n  }\n\n  async performRace() {\n    // prepare\n    const thisRaceId = genUniqId();\n    this.currRaceId = thisRaceId;\n    await this.resetState(true);\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    // process race\n    const raceData: RaceData = {\n      raceId: thisRaceId,\n      arrivedByOrder: [],\n      notArrived: [],\n      participantsCount: this.contracts.size,\n      flags: {\n        roadElem: this.tracksContainer,\n        isFinishVisible: false, // TODO: rm\n      },\n      stratedCount: 0,\n    };\n    this.broadcastRaceStatus('IN_PROCESS');\n    await this.processRace(raceData)\n      .catch((error: Error) => {\n        if (!(thisRaceId !== this.currRaceId)) throw error;\n      })\n      .finally(() => {\n        this.tracksContainer.classList.remove(\n          styles['synthwave-background_race-mode'],\n        );\n      });\n\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    // console.log(raceData);\n\n    this.broadcastRaceStatus('NEED_RESET');\n    // TODO: Do something else?\n  }\n\n  private broadcastRaceStatus(status: RaceStatusesList) {\n    const msg = new DBusMsgGarageRaceStatusMsg(status);\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  // false if race was interrupted\n  private processRace(raceData: RaceData) {\n    return new Promise<RaceData | false>(res => {\n      this.contracts.forEach(contract => {\n        this.startDriving(contract, raceData.flags).then(response => {\n          if (raceData.raceId !== this.currRaceId) {\n            res(false);\n            return;\n          }\n\n          if (raceData.stratedCount === raceData.participantsCount - 1) {\n            this.tracksContainer.classList.add(\n              styles['synthwave-background_race-mode'],\n            );\n            raceData.flags.isRoadMoves = true;\n          } else raceData.stratedCount++;\n\n          if (!(response instanceof Error)) {\n            response.drivePromise\n              .then(result =>\n                this.handleDriveResult(raceData, contract, result),\n              )\n              .catch((error: Error) => {\n                if (error.message === 'interrupted') res(false);\n              })\n              .finally(() => {\n                console.log(raceData);\n                if (\n                  raceData.arrivedByOrder.length +\n                    raceData.notArrived.length ===\n                  raceData.participantsCount\n                ) {\n                  console.log(raceData);\n                  res(raceData);\n                }\n              });\n          } else {\n            throw response;\n          }\n        });\n      });\n    });\n  }\n\n  private handleDriveResult(\n    raceData: RaceData,\n    contract: GarageServicemanContract,\n    result: number | false,\n  ) {\n    if (raceData.raceId !== this.currRaceId) return;\n    if (result !== false) {\n      if (raceData.arrivedByOrder.length === 0) {\n        this.handleWinner(contract, result, raceData.flags);\n      }\n      raceData.arrivedByOrder.push(contract);\n    } else {\n      raceData.notArrived.push(contract);\n    }\n  }\n\n  private handleWinner = async (\n    contract: GarageServicemanContract,\n    time: number,\n    flags: Record<string, unknown>,\n  ) => {\n    flags.isFinishVisible = true;\n    this.tracksContainer.classList.add(\n      styles['garage__track-container_finish'],\n    );\n    const style = window.getComputedStyle(this.tracksContainer, '::after');\n    const duration = getTransitionDuration(style, 'right');\n    if (duration) {\n      const awaitTime = Number.parseFloat(duration);\n      if (awaitTime > 0)\n        await new Promise(res => setTimeout(res, awaitTime * 1000));\n    }\n    this.tracksContainer.classList.remove(\n      styles['synthwave-background_race-mode'],\n    );\n    flags.isRoadMoves = false;\n    const winnerCar = contract.car.currCar;\n    this.winnerPopup.setData(\n      winnerCar,\n      time.toFixed(2),\n      contract.car.index?.toString(),\n    );\n    this.tracksContainer.append(this.winnerPopup.rootElement);\n    REST_CLIENT_WINNERS.getWinner(winnerCar.id)\n      .then(winnerRecord => {\n        const updatedWinnerData: WinnerCarData = {\n          id: winnerRecord.id,\n          wins: winnerRecord.wins + 1,\n          time:\n            time < winnerRecord.time\n              ? Number.parseFloat(time.toFixed(2))\n              : winnerRecord.time,\n        };\n        REST_CLIENT_WINNERS.updateWinner(updatedWinnerData);\n      })\n      .catch((error: Error) => {\n        if (error.message === REST_CLIENT_ERROR.NOT_FOUND) {\n          const newWinnerData: WinnerCarData = {\n            id: winnerCar.id,\n            wins: 1,\n            time: Number.parseFloat(time.toFixed(2)),\n          };\n          REST_CLIENT_WINNERS.createWinner(newWinnerData);\n        }\n      });\n  };\n\n  private tryFreeDrivers(...contracts: GarageServicemanContract[]) {\n    contracts.forEach(contract => {\n      const driver = this.busyDrivers.get(contract);\n      if (driver) {\n        driver.getOutOfTheCar().then(() => {\n          this.busyDrivers.delete(contract);\n          this.freeDrivers.add(driver);\n        });\n      }\n    });\n  }\n\n  private genSelectCallback(contract: GarageServicemanContract) {\n    return (car: RegCarData) => {\n      if (!this.contracts.has(contract)) return;\n      contract.car.updateData(car);\n    };\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { GarageCompCtlAkaDirector } from './garage-controller';\nimport { MainControlsComp } from './subcomps/main-controls/main-controls';\n\nimport styles from './garage.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\nimport { PopupStandaloneModalProgressComp } from '../../lib/components/popups/standalone/modal/progress/popup-progress';\n\nexport class GarageComp extends BaseComp implements DBusHub, Notifiable {\n  readonly hubName = DBUS_HUB_NAMES.GARAGE;\n\n  private controller: GarageCompCtlAkaDirector;\n\n  private isControllerWorking = false;\n\n  private mainControlsComp = new MainControlsComp();\n\n  private carsCtlsBlock = document.createElement('div');\n\n  private bgVideo = document.createElement('video');\n\n  private popup = new PopupStandaloneModalProgressComp();\n\n  constructor() {\n    super('section');\n    console.log('show');\n    this.popup.setText('Loading...').setProgress(1).show();\n    this._rootElement.classList.add(styles.garage);\n\n    const selfCtlsBlock = document.createElement('div');\n    selfCtlsBlock.classList.add(styles['garage-bg__self-ctls-block']);\n    selfCtlsBlock.append(this.mainControlsComp.rootElement);\n\n    const bg = document.createElement('div');\n    bg.classList.add(styles.garage__bg, styles['garage-bg']);\n    bg.append(this.bgVideo, selfCtlsBlock);\n\n    const tracksContainer = document.createElement('div');\n    tracksContainer.classList.add(\n      styles['garage__track-container'],\n      styles['synthwave-background'],\n    );\n\n    this.carsCtlsBlock.classList.add(styles['garage-bg__cars-ctls-block']);\n\n    this.controller = new GarageCompCtlAkaDirector(\n      tracksContainer,\n      this.carsCtlsBlock,\n    );\n\n    this.setupBgVideo();\n\n    this._rootElement.append(bg, tracksContainer, this.carsCtlsBlock);\n  }\n\n  private setupBgVideo() {\n    this.bgVideo.addEventListener('progress', this.bgVideoProgressListener);\n    this.bgVideo.addEventListener(\n      'canplaythrough',\n      this.bgVideoCanPlayListener,\n    );\n    this.renderBgVideo();\n  }\n\n  private renderBgVideo() {\n    this.bgVideo.classList.add(styles['garage-bg__video']);\n    this.bgVideo.controls = false;\n    this.bgVideo.loop = true;\n    this.bgVideo.defaultMuted = true;\n    this.bgVideo.muted = true;\n    this.bgVideo.autoplay = true;\n    this.bgVideo.src = './assets/videos/bg/cyberpunk2077-garage.mp4';\n  }\n\n  private bgVideoProgressListener = () => {\n    if (this.bgVideo.buffered.length > 0) {\n      const progress =\n        (this.bgVideo.buffered.end(0) / this.bgVideo.duration) * 100;\n      this.popup.setProgress(progress);\n    }\n  };\n\n  private bgVideoCanPlayListener = async () => {\n    this.bgVideo.removeEventListener(\n      'canplaythrough',\n      this.bgVideoCanPlayListener,\n    );\n    this.bgVideo.removeEventListener('progress', this.bgVideoProgressListener);\n    this.popup.setProgress(100).reset().hide();\n    this.isControllerWorking = await this.controller.startWorking();\n  };\n\n  connect(int: DBusInterface): void {\n    int.attachSubHub(this.controller);\n    int.attachSubHub(this.mainControlsComp);\n  }\n\n  notify = async (): Promise<void> => {\n    try {\n      this.bgVideo.play();\n    } catch {\n      // do nothing...\n    }\n    if (!this.isControllerWorking) {\n      this.isControllerWorking = await this.controller.startWorking();\n    }\n  };\n}\n","import { RegCarData, UnregCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { hexToRgb } from '../../../../lib/convertors/colors';\nimport { transitionPromise } from '../../../../lib/gui/animation';\nimport { OBJ_PROCESSOR } from '../../../../lib/processors/obj-processor';\nimport styles from './car.scss';\nimport garageStyles from '../../garage.scss';\n\nexport class CarComp extends BaseComp {\n  static readonly TIMING_FUNCTION = 'cubic-bezier(.72,.2,.54,.77)';\n\n  static readonly CAR_BODY_IMG_SRC = './assets/imgs/cars/body.gif';\n\n  static readonly CAR_WHEEL_IMG_SRC = './assets/imgs/cars/tire back.gif';\n\n  static readonly CAR_EXPLOSION_IMG_DATA = {\n    BASE_URL: './assets/imgs/cars/explosion/',\n    EXTENSION: '.png',\n    FRAMES_COUNT: 9,\n    FRAME_TIME_MS: 200,\n  };\n\n  protected canvas = document.createElement('canvas');\n\n  protected tireBack = document.createElement('img');\n\n  private btnSelect$ = document.createElement('button');\n\n  private btnRm$ = document.createElement('button');\n\n  private _spanCarName = document.createElement('span');\n\n  private btnStart$ = document.createElement('button');\n\n  private btnReset$ = document.createElement('button');\n\n  private currAnimation: Animation | undefined;\n\n  private currOutOfSceneAnim: Animation | undefined;\n\n  private isReseted = true;\n\n  private observer: MutationObserver;\n\n  private movingClassName = garageStyles['synthwave-background_race-mode'];\n\n  constructor(private _currCar: RegCarData, public index?: number) {\n    super('div');\n\n    this._rootElement.classList.add(styles['car-div']);\n    this.canvas.classList.add(styles['car-div__canvas']);\n    this._rootElement.append(this.canvas);\n\n    const selectSpan = document.createElement('span');\n    const rmSpan = document.createElement('span');\n    const startSpan = document.createElement('span');\n    const resetSpan = document.createElement('span');\n\n    selectSpan.textContent = 'select';\n    rmSpan.textContent = 'remove';\n    startSpan.textContent = 'start!';\n    resetSpan.textContent = 'reset';\n\n    this.btnSelect$.append(selectSpan);\n    this.btnRm$.append(rmSpan);\n    this.btnReset$.append(resetSpan);\n    this.btnStart$.append(startSpan);\n\n    this.btnReset$.disabled = true;\n\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    this._spanCarName.textContent = `${index}: ${_currCar.name}`;\n    CarComp.drawWheels(this._rootElement);\n\n    this.observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.oldValue?.includes(this.movingClassName)) {\n          this.currOutOfSceneAnim?.pause();\n          this.observer.disconnect();\n        } else {\n          const elem = mutation.target as HTMLElement;\n          if (elem.classList.contains(this.movingClassName)) {\n            this.outOfScene();\n          }\n        }\n      });\n    });\n  }\n\n  static drawWheels(rootElem: HTMLElement) {\n    const wheelImg = new Image();\n    wheelImg.src = CarComp.CAR_WHEEL_IMG_SRC;\n    wheelImg.onload = () => {\n      wheelImg.classList.add(styles['car-div__wheel']);\n      const backwardWheelImg = OBJ_PROCESSOR.deepClone(wheelImg);\n      wheelImg.classList.add(styles['car-div__wheel_forward']);\n      backwardWheelImg.classList.add(styles['car-div__wheel_backward']);\n\n      rootElem.append(wheelImg);\n      rootElem.append(backwardWheelImg);\n    };\n  }\n\n  updateData(carData: RegCarData) {\n    this._currCar = carData;\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    this._spanCarName.textContent = `${this.index}: ${carData.name}`;\n    // this._rootElement.style.setProperty('background-color', carData.color);\n  }\n\n  public toggleIgniteAnim(state: boolean) {\n    if (state) this._rootElement.classList.add(styles['car-div_ignite']);\n    else this._rootElement.classList.remove(styles['car-div_ignite']);\n  }\n\n  public async rollBack(finishPromise: Promise<unknown> = Promise.resolve()) {\n    return new Promise(res => {\n      const asyncFunc = async () => {\n        if (!this.isReseted) {\n          this.observer.disconnect();\n          this._rootElement.classList.remove(styles['car-div_borken']);\n          await this.playOutAnim();\n          if (this.currOutOfSceneAnim) {\n            this.currOutOfSceneAnim.cancel();\n            // await this.currOutOfSceneAnim.finished;\n            this.clearAnimFromElem(this.currOutOfSceneAnim);\n            this.currOutOfSceneAnim = undefined;\n          }\n          if (this.currAnimation) {\n            await this.stop();\n            this.currAnimation.playbackRate = -10;\n            this.currAnimation.play();\n            console.log(`wait curr anim ${this.index}`);\n            await this.currAnimation.finished;\n            this.clearAnimFromElem(this.currAnimation);\n            this.currAnimation = undefined;\n            this._rootElement.classList.remove(styles['car-div_rollForward']);\n          }\n          this._rootElement.style.removeProperty('transition');\n          this._rootElement.style.removeProperty('transform');\n          await this.playInAnim();\n          this._rootElement.style.removeProperty('opacity');\n          finishPromise.finally(() => {\n            this.btnStart$.disabled = false;\n            this.btnReset$.disabled = true;\n            this.btnRm$.disabled = false;\n            this.btnSelect$.disabled = false;\n          });\n        }\n        console.log(`reseted ${this.index}`);\n        this.isReseted = true;\n        res(true);\n      };\n      asyncFunc();\n    });\n  }\n\n  async playOutAnim() {\n    const animOut = this._rootElement.animate(\n      [\n        { opacity: `0.5` },\n        { opacity: `0.9` },\n        { opacity: `0.3` },\n        { opacity: `0.7` },\n        { opacity: `0.1` },\n        { opacity: `0.4` },\n        { opacity: `0` },\n      ],\n      {\n        duration: 300,\n        easing: 'linear',\n        fill: 'forwards',\n      },\n    );\n    await animOut.finished;\n    this.clearAnimFromElem(animOut);\n  }\n\n  async playAwaitingAnim(promiseToAwait: Promise<unknown>) {\n    return new Promise<void>(res => {\n      const animIn = this._rootElement.animate(\n        [\n          { opacity: `0` },\n          { opacity: `0.6` },\n          { opacity: `0.3` },\n          { opacity: `0.8` },\n          { opacity: `0.3` },\n          { opacity: `0.6` },\n          { opacity: `0` },\n        ],\n        {\n          duration: 400,\n          easing: 'linear',\n          fill: 'forwards',\n          iterations: Number.POSITIVE_INFINITY,\n        },\n      );\n      promiseToAwait.finally(() => {\n        animIn.cancel();\n        this.clearAnimFromElem(animIn);\n        res();\n      });\n    });\n  }\n\n  async playInAnim() {\n    const animIn = this._rootElement.animate(\n      [\n        { opacity: `0` },\n        { opacity: `0.6` },\n        { opacity: `0.3` },\n        { opacity: `0.8` },\n        { opacity: `0.5` },\n        { opacity: `1` },\n      ],\n      {\n        duration: 300,\n        easing: 'linear',\n        fill: 'forwards',\n      },\n    );\n    await animIn.finished;\n    this.clearAnimFromElem(animIn);\n  }\n\n  private clearAnimFromElem = (a: Animation) => {\n    const anim = a as unknown as Record<string, unknown>;\n    if ('commitStyles' in anim && typeof anim.commitStyles === 'function')\n      anim.commitStyles();\n  };\n\n  private outOfScene() {\n    // console.log(`OUT OF SCENE ${this.index}`);\n    this.isReseted = false;\n    this.currOutOfSceneAnim = this._rootElement.animate(\n      [{ transform: `translateX(${-1000}%)` }],\n      {\n        duration: 3600,\n        easing: 'ease-in',\n        fill: 'forwards',\n      },\n    );\n  }\n\n  public disableCtls() {\n    this.btnStart$.disabled = true;\n    this.btnRm$.disabled = true;\n    this.btnSelect$.disabled = true;\n    this.btnReset$.disabled = true;\n  }\n\n  public async rollForward(time: number, handleBtns = true) {\n    this.isReseted = false;\n    // console.log(`anim time: ${time} ${this.index}`);\n    return new Promise<number | undefined>((res, rej) => {\n      const start = Date.now();\n      if (handleBtns) {\n        this.btnStart$.disabled = true;\n        this.btnRm$.disabled = true;\n        this.btnSelect$.disabled = true;\n        this.btnReset$.disabled = false;\n      }\n      const rootStyle = window.getComputedStyle(\n        this._rootElement.parentElement as HTMLElement,\n      );\n      const selfStyle = window.getComputedStyle(this.rootElement);\n\n      const rootWidth =\n        Number.parseFloat(rootStyle.width) -\n        Number.parseFloat(rootStyle.paddingLeft) -\n        Number.parseFloat(rootStyle.paddingRight);\n      const selfWidth = Number.parseFloat(selfStyle.width);\n\n      const coordinateInPercents = ((rootWidth - selfWidth) / selfWidth) * 100;\n\n      this._rootElement.classList.add(styles['car-div_rollForward']);\n\n      this.currAnimation = this._rootElement.animate(\n        [{ transform: `translateX(${coordinateInPercents}%)` }],\n        {\n          duration: time * 1000 + 1000,\n          easing: 'ease-in-out',\n          fill: 'forwards',\n        },\n      );\n\n      this.currAnimation.onfinish = (e: Event) => {\n        // console.log(`time from anim start: ${Date.now() - start}`);\n        // console.log('stop animation by roll forward finish');\n        // this._rootElement.classList.remove(styles['car-div_rollForward']);\n        // this.stop();\n        // console.log('TRUE', e);\n        res(this.currAnimation?.playbackRate);\n      };\n\n      this.currAnimation.oncancel = () => {\n        // console.log(`curr Anim cancel ${this.index}`);\n        this._rootElement.classList.remove(styles['car-div_rollForward']);\n        rej();\n      };\n    });\n  }\n\n  public async stop(\n    rollover = true,\n    broken = false,\n    flags?: Record<string, unknown>,\n  ) {\n    // console.log(`STOP, broken: ${broken}, ${this.index}`);\n    // this.rootElement.style.setProperty('transition', '');\n    if (rollover) {\n      await new Promise(res => {\n        if (this.currAnimation?.playState === 'running') {\n          // console.log(\n          //   this.currAnimation,\n          //   `awaiting for animation ${this.index}`,\n          // );\n          this.currAnimation.addEventListener('finish', () => res(true));\n          this.currAnimation.addEventListener('cancel', () => res(true));\n        } else res(true);\n      });\n    }\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n    this.currAnimation?.pause();\n    if (broken) {\n      if (flags) {\n        const roadElem = flags.roadElem as HTMLElement;\n        const roadIsMoving = roadElem.classList.contains(this.movingClassName);\n        if (roadIsMoving) this.outOfScene();\n        this.observer.observe(roadElem, {\n          attributes: true,\n          attributeOldValue: true,\n        });\n      }\n      console.log(`exp anim ${this.index}`);\n      const img = new Image();\n      let frameNumber = 0;\n      img.classList.add(styles['car-div__explosion']);\n      img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n      img.onload = async () => {\n        this._rootElement.append(img);\n        await new Promise(res =>\n          setTimeout(res, CarComp.CAR_EXPLOSION_IMG_DATA.FRAME_TIME_MS),\n        );\n        frameNumber++;\n        if (frameNumber < CarComp.CAR_EXPLOSION_IMG_DATA.FRAMES_COUNT) {\n          img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n        } else {\n          img.remove();\n        }\n      };\n      this._rootElement.classList.add(styles['car-div_borken']);\n    }\n  }\n\n  public get currCar(): RegCarData {\n    return this._currCar;\n  }\n\n  public get btnSelect() {\n    return this.btnSelect$;\n  }\n\n  public get btnRm() {\n    return this.btnRm$;\n  }\n\n  public get btnStart() {\n    return this.btnStart$;\n  }\n\n  public get btnReset() {\n    return this.btnReset$;\n  }\n\n  public get spanCarName() {\n    return this._spanCarName;\n  }\n\n  static drawCar(canvas: HTMLCanvasElement, hexColor: string) {\n    const img = new Image();\n    img.src = CarComp.CAR_BODY_IMG_SRC;\n    img.onload = () => {\n      canvas.height = img.height / 3;\n      canvas.width = img.width / 3;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.shadowColor = hexColor;\n        ctx.shadowBlur = 25;\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      }\n\n      CarComp.paintCarBody(canvas, hexColor);\n    };\n  }\n\n  static paintCarBody(canvas: HTMLCanvasElement, hexColor: string) {\n    const imageData = canvas\n      .getContext('2d')\n      ?.getImageData(0, 0, canvas.width, canvas.height);\n    if (imageData) {\n      const rgb = hexToRgb(hexColor);\n      for (let j = 0; j < imageData.width; j++) {\n        for (let i = 0; i < imageData.height; i++) {\n          // index: red, green, blue, alpha, red, green, blue, alpha..etc.\n          const index = i * 4 * imageData.width + j * 4;\n          const red = imageData.data[index] as number;\n          const green = imageData.data[index + 1] as number;\n          const blue = imageData.data[index + 2] as number;\n          // const alpha = imageData.data[index + 3] as number;\n\n          const blueDiff = 2 * blue - red - green;\n          const blueDiffThreshold = 10;\n          const threshold = 70;\n          if (\n            red > threshold &&\n            green > threshold &&\n            blue > threshold &&\n            blueDiff < blueDiffThreshold\n          ) {\n            imageData.data[index] = (red / 255) * rgb.r;\n            imageData.data[index + 1] = (green / 255) * rgb.g;\n            imageData.data[index + 2] = (blue / 255) * rgb.b;\n            // imageData.data[index + 3] = 225; /// !!! TEST !!!\n          }\n        }\n      }\n      canvas\n        .getContext('2d')\n        ?.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  static genPreview(car: UnregCarData): HTMLElement {\n    const container = document.createElement('div');\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles['car-div__canvas']);\n    container.append(canvas);\n    CarComp.drawWheels(container);\n    CarComp.drawCar(canvas, car.color);\n    return container;\n  }\n}\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionCreatedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class CreateCompController extends CreateUpdateCompControllerProto {\n  private txs = new Set<DBusTX>();\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnCreate();\n  }\n\n  private setupBtnCreate() {\n    this.btn.addEventListener('click', () => {\n      if (!this.reportValidity()) return;\n      this.btn.disabled = true;\n      const unregCar: UnregCarData = {\n        name: this.inputText.value,\n        color: this.inputColor.value,\n      };\n      REST_CLIENT_GARAGE.createCar(unregCar)\n        .then(car => {\n          // TODO: Notify with DBus\n          const msg = new DBusMsgCarActionCreatedMsg(car);\n          this.txs.forEach(tx => {\n            tx.transmit({\n              msg,\n              prepMode: DBusTXPrepModes.clone,\n              waitMode: DBusTXWaitModes.nowait,\n            });\n          });\n        })\n        .finally(() => {\n          this.btn.disabled = false;\n        });\n    });\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('send created car msgs');\n    this.txs.add(tx);\n  }\n}\n","import { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\n\nexport interface CreateUpdateCompControllerReqElems {\n  inputText: HTMLInputElement;\n  inputColor: HTMLInputElement;\n  btn: HTMLButtonElement;\n}\n\nexport abstract class CreateUpdateCompControllerProto implements DBusPort {\n  protected ctlsStateMap = new Map<HTMLElement, boolean>();\n\n  protected ctls = [this.inputText, this.inputColor, this.btn];\n\n  constructor(\n    protected inputText: HTMLInputElement,\n    protected inputColor: HTMLInputElement,\n    protected btn: HTMLButtonElement,\n  ) {}\n\n  abstract autoConnect(int: DBusInterface): void | Promise<void>;\n\n  protected reportValidity() {\n    if (this.inputText.value.length === 0) {\n      this.inputText.setCustomValidity('Please, enter a name');\n      this.inputText.pattern = '';\n      this.inputText.reportValidity();\n      this.inputText.removeAttribute('pattern');\n      return false;\n    }\n    return true;\n  }\n\n  protected toogleCtlsDisabled(state: boolean) {\n    this.inputText.disabled = state;\n    this.inputColor.disabled = state;\n    this.btn.disabled = state;\n  }\n\n  protected pushCtlsState() {\n    this.ctls.forEach(ctl => {\n      this.ctlsStateMap.set(ctl, ctl.disabled);\n    });\n  }\n\n  protected popCtlsState() {\n    this.ctls.forEach(ctl => {\n      const state = this.ctlsStateMap.get(ctl);\n      if (state !== undefined) ctl.disabled = state;\n    });\n    this.ctlsStateMap.clear();\n  }\n\n  disable() {\n    this.pushCtlsState();\n    this.toogleCtlsDisabled(true);\n  }\n\n  enable() {\n    this.popCtlsState();\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../../../lib/processors/obj-processor';\nimport { DBUS_COMMON_RESPONSES } from '../../../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../../../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { DBusMsgCarActionSelectedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport { DBusMsgGaragePageIsChangedMsg } from '../../../dbus-msgs/by-topic/garage/garage-page-is-changed.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class UpdateCompController\n  extends CreateUpdateCompControllerProto\n  implements DBusPort\n{\n  private choosedCar: RegCarData | undefined;\n\n  private notifyCb: ((car: RegCarData) => unknown) | undefined;\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnUpdate();\n  }\n\n  autoConnect(int: DBusInterface) {\n    const rxCarActions = int.getNewRX(\n      this.carActionsListener,\n      'listen car choosing',\n    );\n    int.plugRX(DBusTopics.CAR_ACTION, rxCarActions);\n\n    const rxGarage = int.getNewRX(\n      this.garageMsgsListener,\n      'listen garage paging',\n    );\n    int.plugRX(DBusTopics.GARAGE, rxGarage);\n  }\n\n  private garageMsgsListener = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgGaragePageIsChangedMsg) {\n      this.reset();\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private reset() {\n    this.notifyCb = undefined;\n    this.choosedCar = undefined;\n    this.inputText.value = '';\n    this.inputColor.value = '#000000';\n    this.toogleCtlsDisabled(true);\n  }\n\n  private carActionsListener = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgCarActionSelectedMsg) {\n      this.choosedCar = OBJ_PROCESSOR.deepClone(data.msg.car);\n      this.notifyCb = data.msg.notifyChanges;\n      this.inputColor.value = data.msg.car.color;\n      this.inputText.value = data.msg.car.name;\n      this.toogleCtlsDisabled(false);\n    }\n    if (\n      data.msg instanceof DBusMsgCarActionRemovedMsg &&\n      data.msg.car.id === this.choosedCar?.id\n    ) {\n      this.reset();\n    }\n\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private setupBtnUpdate() {\n    this.toogleCtlsDisabled(true);\n    this.btn.addEventListener('click', () => {\n      if (!this.reportValidity()) return;\n      this.toogleCtlsDisabled(true);\n      if (!this.choosedCar) return;\n      this.choosedCar.color = this.inputColor.value;\n      this.choosedCar.name = this.inputText.value;\n      REST_CLIENT_GARAGE.updateCar(this.choosedCar)\n        .then(car => {\n          if (this.notifyCb) this.notifyCb(car);\n        })\n        .finally(() => {\n          this.toogleCtlsDisabled(false);\n        });\n    });\n  }\n}\n","import { BaseComp } from '../../../../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { CreateCompController } from './controller-create';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\nimport { UpdateCompController } from './controller-update';\n\nimport styles from './create-update.scss';\nimport sharedStyles from '../../../../../styles.scss';\n\nexport class CreateUpdateComponent extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.CREATE_UPDATE;\n\n  protected textInput = document.createElement('input');\n\n  protected colorInput = document.createElement('input');\n\n  protected btn = document.createElement('button');\n\n  protected controller: CreateUpdateCompControllerProto;\n\n  constructor(type: 'CREATE' | 'UPDATE', btnText: string) {\n    super('div');\n    this._rootElement.classList.add(styles.root);\n    this.textInput.type = 'text';\n    this.textInput.classList.add(styles['text-input']);\n    this.colorInput.type = 'color';\n    this.colorInput.classList.add(styles['color-input']);\n    this.btn.textContent = btnText;\n    this.btn.classList.add(sharedStyles.btn);\n    this._rootElement.append(this.textInput, this.colorInput, this.btn);\n\n    const elements: CreateUpdateCompControllerReqElems = {\n      inputText: this.textInput,\n      inputColor: this.colorInput,\n      btn: this.btn,\n    };\n\n    switch (type) {\n      case 'UPDATE':\n        this.controller = new UpdateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']);\n        break;\n      case 'CREATE':\n      default:\n        this.controller = new CreateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']); // TODO: maybe change?\n        break;\n    }\n  }\n\n  getController() {\n    return this.controller;\n  }\n\n  connect(int: DBusInterface) {\n    this.controller.autoConnect(int);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgGenerateCarsMsg extends DBusMsg {\n  constructor(\n    readonly status: 'start' | 'end',\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GENERATE, rxIds, prefResponseRxIds);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CreateUpdateComponent } from './create-update/create-update';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from '../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport { DBusMsgRaceRequestMsg } from '../../dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusMsgGarageResetReqMsg } from '../../dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './main-controls.scss';\nimport sharedStyles from '../../../../styles.scss';\nimport { REST_CLIENT_GARAGE } from '../../../../services/rest-clients/client-garage/rest-client-garage';\nimport {\n  CAR_MODEL_LIST,\n  CAR_MODEL_LIST_KEYS,\n} from '../../../../definitions/car-random-data.def';\nimport {\n  genRandomHexColor,\n  getRandomInt,\n} from '../../../../lib/generators/generators';\nimport { UnregCarData } from '../../../../definitions/car-data.def';\nimport { DBusTXData } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBUS_COMMON_RESPONSES } from '../../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusMsgGarageRaceStatusMsg } from '../../dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { DBusTopics } from '../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTX } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgGenerateCarsMsg } from './dbus-msgs/generate-cars-msg.def';\nimport { PopupStandaloneModalProgressComp } from '../../../../lib/components/popups/standalone/modal/progress/popup-progress';\nimport { DBusMsgGarageStatusMsg } from '../../dbus-msgs/by-topic/garage/garage-status-msg.def';\n\nexport class MainControlsComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.MAIN_CONTROLS;\n\n  private txs = new Set<DBusTX>();\n\n  private createComponent = new CreateUpdateComponent('CREATE', 'create');\n\n  private updateComponent = new CreateUpdateComponent('UPDATE', 'update');\n\n  private btnRace = document.createElement('button');\n\n  private btnReset = document.createElement('button');\n\n  private btnGenerate = document.createElement('button');\n\n  private popup = new PopupStandaloneModalProgressComp();\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles['main-controls']);\n\n    const btnsBlock = this.renderBtns();\n    this.btnRace.addEventListener('click', this.raceClickListener);\n    this.btnReset.addEventListener('click', this.resetClickListener);\n    this.btnGenerate.addEventListener('click', this.generateClickListener);\n\n    this.btnReset.disabled = true;\n    this.btnRace.disabled = true;\n\n    this._rootElement.append(\n      this.createComponent.rootElement,\n      this.updateComponent.rootElement,\n      btnsBlock,\n    );\n  }\n\n  private generateClickListener = async () => {\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgGenerateCarsMsg('start');\n    const transmissions: Promise<unknown>[] = [];\n    this.txs.forEach(tx => {\n      const transmission = tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      transmissions.push(transmission);\n    });\n    await Promise.allSettled(transmissions);\n    this.popup\n      .reset()\n      .setText('please wait while the entries are generated')\n      .show();\n    await this.generate(100, undefined, this.genCb);\n    this.popup.reset().hide();\n    const resolveMsg = new DBusMsgGenerateCarsMsg('end');\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg: resolveMsg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n    this.btnGenerate.disabled = false;\n  };\n\n  private genCb = (progress: number) => {\n    this.popup.setProgress(progress);\n  };\n\n  private raceClickListener = async () => {\n    this.btnRace.disabled = true;\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgRaceRequestMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private resetClickListener = async () => {\n    this.btnReset.disabled = true;\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgGarageResetReqMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private renderBtns(): HTMLElement {\n    // setip btns\n    const span = document.createElement('span');\n    span.textContent = 'race';\n    this.btnRace.append(span);\n    this.btnRace.classList.add(sharedStyles.btn, sharedStyles['btn-15']);\n    this.btnReset.textContent = 'reset';\n    this.btnReset.classList.add(sharedStyles.btn, sharedStyles['btn-9']);\n    this.btnGenerate.textContent = 'generate cars';\n    this.btnGenerate.classList.add(sharedStyles.btn, sharedStyles['btn-1']);\n\n    const btnBlock = document.createElement('div');\n    btnBlock.classList.add(styles['btn-block']);\n    btnBlock.append(this.btnRace, this.btnReset, this.btnGenerate);\n    return btnBlock;\n  }\n\n  private async generate(\n    total: number,\n    left?: number,\n    cb?: (progress: number) => unknown,\n  ): Promise<boolean> {\n    let genLeft = left || total;\n    const randomName = this.genRandomCarName();\n    const color = genRandomHexColor();\n    const unregCarData: UnregCarData = {\n      name: randomName,\n      color,\n    };\n    const car = await REST_CLIENT_GARAGE.createCar(unregCarData);\n    // const winner: WinnerCarData = {\n    //   id: car.id,\n    //   wins: getRandomArbitraryInt(1, 3),\n    //   time: Number.parseFloat((getRandomArbitraryInt(40, 50) / 3).toFixed(2)),\n    // };\n    // await REST_CLIENT_WINNERS.createWinner(winner);\n    genLeft--;\n\n    if (cb) {\n      const progress = (1 - genLeft / total) * 100;\n      cb(progress);\n    }\n\n    if (genLeft > 0) return this.generate(total, genLeft, cb);\n\n    return true;\n  }\n\n  private genRandomCarName = (): string => {\n    const manufacturerNumber = getRandomInt(CAR_MODEL_LIST_KEYS.length - 1);\n    const manufacturerName = CAR_MODEL_LIST_KEYS[\n      manufacturerNumber\n    ] as keyof typeof CAR_MODEL_LIST;\n    const models = CAR_MODEL_LIST[manufacturerName];\n    const modelNumber = getRandomInt(models.length - 1);\n    const modelName = models[modelNumber] as string;\n    return `${manufacturerName} ${modelName}`;\n  };\n\n  private rxFuncForRaceMsgs = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgGarageRaceStatusMsg) {\n      const { status } = data.msg;\n      switch (status) {\n        case 'READY_TO_GO':\n          this.btnRace.disabled = false;\n          this.btnReset.disabled = true;\n          this.btnGenerate.disabled = false;\n          this.createComponent.getController().enable();\n          this.updateComponent.getController().enable();\n          break;\n        case 'IN_PROCESS':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = true;\n          this.createComponent.getController().disable();\n          this.updateComponent.getController().disable();\n          break;\n        case 'NEED_RESET':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = false;\n          this.createComponent.getController().enable();\n          this.updateComponent.getController().enable();\n          break;\n        default:\n          break;\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private rxFuncForGarageMsgs = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgGarageStatusMsg) {\n      switch (data.msg.status) {\n        case 'car moves':\n          this.btnGenerate.disabled = true;\n          this.createComponent.getController().disable();\n          this.updateComponent.getController().disable();\n          break;\n        case 'all cars stopped':\n          this.btnGenerate.disabled = false;\n          this.createComponent.getController().enable();\n          this.updateComponent.getController().enable();\n          break;\n        case 'need reset':\n          this.btnReset.disabled = false;\n          break;\n        case 'reset is not needed':\n          this.btnReset.disabled = true;\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.createComponent, 'cu_create');\n    int.attachSubHub(this.updateComponent, 'cu_delete');\n\n    const rx = int.getNewRX(\n      this.rxFuncForRaceMsgs,\n      'toggle btns in main-ctls-block',\n    );\n    int.plugRX(DBusTopics.GARAGE, rx);\n\n    const rx2 = int.getNewRX(\n      this.rxFuncForGarageMsgs,\n      'toggle btns in main-ctls-block',\n    );\n    int.plugRX(DBusTopics.GARAGE, rx2);\n\n    const tx = int.getNewTX('start race | broadcast generate');\n    this.txs.add(tx);\n  }\n}\n","import { RegCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\n\nexport class GaragePopupWinner extends BaseComp {\n  private header = document.createElement('h3');\n\n  private textTime = document.createElement('span');\n\n  private textName = document.createElement('span');\n\n  private textId = document.createElement('span');\n\n  private textNumber = document.createElement('span');\n\n  constructor() {\n    super('div');\n    this.header.textContent = 'WE HAVE A WINNER!';\n    this._rootElement.append(\n      this.header,\n      this.textTime,\n      this.textName,\n      this.textId,\n      this.textNumber,\n    );\n  }\n\n  setData(car: RegCarData, timeStr: string, indexStr?: string) {\n    this.textTime.textContent = `Time: ${timeStr}s`;\n    this.textName.textContent = `Name of the car: \\n ${car.name}`;\n    this.textId.textContent = `ID of the car: ${car.id}`;\n    this.textNumber.textContent = indexStr\n      ? `Position on the track: ${indexStr}`\n      : ``;\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../car/car';\n\nimport styles from './track.scss';\n\nexport class TrackComp extends BaseComp {\n  private topBlock = document.createElement('div');\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles.track);\n    this._rootElement.append();\n    this.topBlock.classList.add(styles['track__controls-block']);\n  }\n\n  illuminateSelf = (illuminate: boolean) => {\n    if (illuminate) this._rootElement.classList.add(styles.track_illuminated);\n    else this._rootElement.classList.remove(styles.track_illuminated);\n  };\n\n  placeCar(carComp: CarComp) {\n    if (this._rootElement.hasChildNodes()) {\n      this._rootElement.childNodes.forEach(child => child.remove());\n    }\n    this.topBlock.append(carComp.spanCarName);\n    this._rootElement.append(this.topBlock, carComp.rootElement);\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBus } from '../../lib/services/dbus/dbus';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgRouteIsChangedMsg } from '../../lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { DBusMsgRoutingStatusMsg } from '../../lib/services/simple-router/dbus-msgs-defs/types/router-status-msg.def';\n\nimport styles from './header.scss';\nimport { NavItem } from './subcomps/nav-item/nav-item';\n\nexport class HeaderComponent extends BaseComp implements DBusHub {\n  private navContainer: HTMLElement;\n\n  private logo: HTMLElement;\n\n  protected anchors: HTMLAnchorElement[];\n\n  protected buses: DBus[] = [];\n\n  constructor(readonly hubName: DBusHubNamesList = DBUS_HUB_NAMES.HEADER) {\n    super('header');\n    this.rootElement.classList.add(styles.header);\n\n    // logo\n    this.logo = document.createElement('h1');\n    this.logo.classList.add(styles.header__logo);\n    const firstSpan = document.createElement('span');\n    firstSpan.textContent = 'async';\n    firstSpan.dataset.textContent = 'async';\n    const secondSpan = document.createElement('span');\n    secondSpan.textContent = 'race';\n    secondSpan.dataset.textContent = 'race';\n    this.logo.append(firstSpan, secondSpan);\n    this.rootElement.append(this.logo);\n\n    // nav\n    this.navContainer = document.createElement('nav');\n    this.navContainer.classList.add(styles['header-nav']);\n    this.rootElement.append(this.navContainer);\n\n    // ul\n    const ul = document.createElement('ul');\n    ul.classList.add(styles['header-nav__list']);\n    this.navContainer.append(ul);\n\n    // ul items\n    const classList = {\n      li: styles['header-nav__item'],\n      a: styles['header-nav__anchor'],\n      svg: styles['header-nav__svg'],\n      span: styles['header-nav__span'],\n    };\n\n    const garageNavItem = new NavItem('garage', '#garage', classList);\n    const winnersNavItem = new NavItem('winners', '#winners', classList);\n\n    const navItems = [garageNavItem, winnersNavItem];\n    this.anchors = navItems.map(item => item.anchor);\n\n    ul.append(...navItems.map(item => item.rootElement));\n  }\n\n  connect(int: DBusInterface) {\n    const illuminateRX = int.getNewRX(\n      this.illuminateNavItem,\n      'illuminate nav items',\n    );\n    int.plugRX(DBusTopics.ROUTING, illuminateRX);\n  }\n\n  private illuminateNavItem = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      this.anchors.forEach(anchor => {\n        if (anchor.getAttribute('href') === msg.newRoute) {\n          anchor.classList.add(styles['header-nav__anchor_active']);\n        } else {\n          anchor.classList.remove(styles['header-nav__anchor_active']);\n        }\n      });\n    }\n    if (msg instanceof DBusMsgRoutingStatusMsg) {\n      if (msg.status === 'restrained')\n        this.navContainer.classList.add(styles['header-nav_not-active']);\n      else if (msg.status === 'free')\n        this.navContainer.classList.remove(styles['header-nav_not-active']);\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\n\nexport interface NavItemStyles {\n  li?: string;\n  a?: string;\n  svg?: string;\n  span?: string;\n}\n\nexport class NavItem extends BaseComp {\n  private _anchor: HTMLAnchorElement;\n\n  protected iconImage: HTMLImageElement | undefined;\n\n  protected span: HTMLSpanElement;\n\n  constructor(\n    text: string,\n    href: string,\n    styles?: NavItemStyles,\n    iconSrc?: string,\n  ) {\n    super('li');\n\n    if (styles?.li) this._rootElement.classList.add(styles.li);\n    this._anchor = document.createElement('a');\n    this._anchor.setAttribute('href', href);\n\n    if (styles?.a) this._anchor.classList.add(styles.a);\n\n    if (iconSrc) {\n      this.iconImage = document.createElement('img');\n      this.iconImage.src = iconSrc;\n\n      if (styles?.svg) this.iconImage.classList.add(styles.svg);\n      this._anchor.append(this.iconImage);\n    }\n    this.span = document.createElement('span');\n    this.span.textContent = text;\n    this.span.dataset.textContent = text;\n\n    if (styles?.span) this.span.classList.add(styles.span);\n    this._anchor.append(this.span);\n\n    this.rootElement.append(this._anchor);\n  }\n\n  get anchor(): HTMLAnchorElement {\n    return this._anchor;\n  }\n}\n","import { UnregCarData, WinnerCarData } from '../../../definitions/car-data.def';\nimport { BaseComp } from '../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../../garage/subcomps/car/car';\n\nexport class WinnerRowComp extends BaseComp {\n  private indexElem = document.createElement('td');\n\n  private idElem = document.createElement('td');\n\n  private carPreviewBox = document.createElement('td');\n\n  private nameElem = document.createElement('td');\n\n  private winsElem = document.createElement('td');\n\n  private bestTimeElem = document.createElement('td');\n\n  private carPreview: HTMLElement;\n\n  constructor(index: number, winnerData: WinnerCarData, carData: UnregCarData) {\n    super('tr');\n\n    this.indexElem.textContent = index.toString();\n    this.idElem.textContent = winnerData.id.toString();\n    this.carPreview = CarComp.genPreview(carData);\n    this.carPreviewBox.append(this.carPreview);\n    this.nameElem.textContent = carData.name;\n    this.winsElem.textContent = winnerData.wins.toString();\n    this.bestTimeElem.textContent = winnerData.time.toString();\n\n    this._rootElement.append(\n      this.indexElem,\n      this.idElem,\n      this.carPreviewBox,\n      this.nameElem,\n      this.winsElem,\n      this.bestTimeElem,\n    );\n  }\n\n  public getCarPreview() {\n    return this.carPreview;\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport {\n  RestClientWinnersSortOptionsList,\n  REST_CLIENT_WINNERS_SORT_OPTIONS,\n} from '../../services/rest-clients/client-winners/rest-client-winners.def';\nimport { WinnerRowComp } from './subcomps/winner-entry';\nimport { Pager } from '../../lib/services/pager/pager';\n\nimport styles from './winners.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\n\nexport class WinnersComp extends BaseComp implements Notifiable {\n  static readonly TEXT_CONTENT_ENG = {};\n\n  private table = document.createElement('table');\n\n  private tableBody = document.createElement('tbody');\n\n  private tableHead = document.createElement('thead');\n\n  private thId = document.createElement('th');\n\n  private thCar = document.createElement('th');\n\n  private thName = document.createElement('th');\n\n  private thWins = document.createElement('th');\n\n  private thBestTime = document.createElement('th');\n\n  private pager: Pager;\n\n  private pagerBtnsContainer = document.createElement('div');\n\n  private pagerSpan: HTMLSpanElement;\n\n  private currSortedElem: HTMLElement | undefined;\n\n  private currOrder: 'ASC' | 'DESC' = 'ASC';\n\n  private currSort: RestClientWinnersSortOptionsList = 'time';\n\n  private entriesPerPage = 10;\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.winners);\n    this._rootElement.style.setProperty(\n      'background-image',\n      `url('./assets/imgs/backgrounds/winners/anime-girl-cyberpunk-ride-4k-lx-2880x1800.jpg')`,\n    );\n\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n    this.pagerSpan = this.pager.getPagerSpan();\n\n    this.renderPager();\n\n    this.renderTable();\n\n    this._rootElement.append(this.table);\n  }\n\n  private renderTable() {\n    this.renderTableHeader();\n    this.table.classList.add(styles.table);\n    this.table.append(\n      this.tableHead,\n      this.tableBody,\n      this.pagerBtnsContainer,\n      this.pagerSpan,\n    );\n  }\n\n  private renderTableHeader() {\n    const tr = document.createElement('tr');\n\n    const thIndex = document.createElement('th');\n    thIndex.textContent = '№';\n    this.thId.textContent = 'ID';\n    this.thId.classList.add(styles['table__can-be-sorted']);\n    this.thCar.textContent = 'CAR';\n    this.thName.textContent = 'NAME';\n    this.thWins.textContent = 'WINS';\n    this.thWins.classList.add(styles['table__can-be-sorted']);\n    this.thBestTime.textContent = 'BEST TIME';\n    this.thBestTime.classList.add(styles['table__can-be-sorted']);\n\n    tr.append(\n      thIndex,\n      this.thId,\n      this.thCar,\n      this.thName,\n      this.thWins,\n      this.thBestTime,\n    );\n    this.tableHead.append(tr);\n    this.tableHead.addEventListener('click', this.tableHeadClickListener);\n  }\n\n  private renderPager() {\n    const btnPrevPage = this.pager.getBtnPrevPage();\n\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n\n    const btnNextPage = this.pager.getBtnNextPage();\n\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n\n    this.pagerBtnsContainer.classList.add(styles.pager);\n    this.pagerBtnsContainer.append(btnPrevPage, btnNextPage);\n\n    this.pagerSpan.classList.add(styles['pager-span']);\n  }\n\n  notify(): void {\n    this.reloadData().then(() =>\n      this.refreshTableHeader(this.currSortedElem || this.thBestTime),\n    );\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.reloadData(dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  private async reloadData(dir?: 'prev' | 'next'): Promise<void> {\n    return new Promise((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : this.pager.getCurrPageNumber() - 1\n        : this.pager.getCurrPageNumber();\n\n      console.log(page, this.currSort, this.currOrder);\n      REST_CLIENT_WINNERS.getWinners(\n        page,\n        this.entriesPerPage,\n        this.currSort,\n        this.currOrder,\n      ).then(async response => {\n        this.pager.setEntriesCount(Number.parseInt(response.limit, 10));\n        if (response.cars.length === 0) {\n          if (dir) {\n            rej();\n            return;\n          }\n\n          if (page > 1) {\n            await this.pager.tryChangePage('prev');\n            res();\n            return;\n          }\n        }\n        const rows = new Array<WinnerRowComp>(response.cars.length);\n        const promises: Promise<unknown>[] = [];\n        const indexInc = (page - 1) * 10;\n        response.cars.forEach((winner, index) => {\n          const promise = REST_CLIENT_GARAGE.getCar(winner.id).then(car => {\n            const totalIndex = index + indexInc + 1;\n            const row = new WinnerRowComp(totalIndex, winner, car);\n            console.log(totalIndex, winner.time);\n            rows[index] = row;\n          });\n          promises.push(promise);\n        });\n        await Promise.allSettled(promises);\n        while (this.tableBody.firstChild) this.tableBody.firstChild.remove();\n        this.tableBody.append(\n          ...rows.map(row => {\n            row.getCarPreview().classList.add(styles['table__car-preview-box']);\n            return row.rootElement;\n          }),\n        );\n        res();\n      });\n    });\n  }\n\n  private tableHeadClickListener = async (e: Event) => {\n    let sort: RestClientWinnersSortOptionsList | undefined;\n    switch (e.target) {\n      case this.thId:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.id;\n        break;\n      case this.thWins:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.wins;\n        break;\n      case this.thBestTime:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.time;\n        break;\n      default:\n        break;\n    }\n    if (sort) {\n      this.pager.toogleLock(true);\n      const elem = e.target as HTMLElement;\n      this.currOrder = elem.classList.contains(\n        styles['table__sorted-elem_desc'],\n      )\n        ? 'ASC'\n        : 'DESC';\n      this.currSort = sort;\n      await this.reloadData();\n      this.refreshTableHeader(elem);\n      this.pager.toogleLock(false);\n    }\n  };\n\n  private refreshTableHeader = (elem: HTMLElement) => {\n    if (this.currSortedElem)\n      this.currSortedElem.classList.remove(styles['table__sorted-elem']);\n\n    elem.classList.add(styles['table__sorted-elem']);\n    this.currSortedElem = elem;\n\n    if (this.currOrder === 'ASC') {\n      elem.classList.remove(styles['table__sorted-elem_desc']);\n      elem.classList.add(styles['table__sorted-elem_asc']);\n    } else {\n      elem.classList.remove(styles['table__sorted-elem_asc']);\n      elem.classList.add(styles['table__sorted-elem_desc']);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../lib/processors/obj-processor';\n\nconst models = {\n  Lamborghini: [\n    'Murciélago',\n    '350 GT',\n    '400 GT',\n    'Sián FKP 37',\n    'Essenza SCV12',\n    'Urus',\n    'Centenario',\n    'Huracán',\n    'Veneno',\n    'Sesto Elementо',\n    'Aventador',\n    'Reventón',\n    'Gallardo',\n    'Diablo',\n    'LM002',\n    'Jalpa',\n    'Silhouette',\n    'Countach',\n    'Urraco',\n    'Jarama',\n    'Islero',\n    'Espada',\n    'Miura',\n  ],\n  'Aston Martin': [\n    'Project 003',\n    'Valkyrie',\n    'DBS',\n    'Vanquish Zagato',\n    'Vanquish',\n    'Virage/Virage Volante',\n    'V12 Zagato',\n    'One-77',\n    'V8 Coupe/V8 Volante',\n    'V8 Zagato',\n  ],\n  Ferrari: [\n    'Roma',\n    'Portfolio',\n    '488 GTB',\n    'California T',\n    '360 Spider',\n    '355 F1 Berlinetta',\n    'F355 GTS',\n    '456 GT',\n    'Testarossa',\n    'SF1000',\n  ],\n  Koenigsegg: [\n    'Jesko Absolut',\n    'Jesko',\n    'Agera Final',\n    'Agera XS',\n    'Agera X',\n    'Agera S',\n    'Regera',\n    'Agera RS',\n    'One:1',\n    'CCGT',\n  ],\n};\n\nconst CAR_MODEL_LIST = OBJ_PROCESSOR.deepFreeze(models);\n\nexport { CAR_MODEL_LIST };\n\nconst CAR_MODEL_LIST_KEYS = OBJ_PROCESSOR.deepFreeze(\n  Object.keys(CAR_MODEL_LIST),\n);\n\nexport { CAR_MODEL_LIST_KEYS };\n","export class BaseComp {\n  protected _rootElement: HTMLElement;\n\n  constructor(tag: keyof HTMLElementTagNameMap = 'div') {\n    this._rootElement = document.createElement(tag);\n  }\n\n  public get rootElement(): HTMLElement {\n    return this._rootElement;\n  }\n}\n","import { PopupStandaloneModalComp } from '../popup-standalone-modal';\n\nimport sharedStyles from '../../../../../../styles.scss';\n\nexport class PopupStandaloneModal404Comp extends PopupStandaloneModalComp {\n  constructor() {\n    super();\n    this.header.textContent = 'ERROR: 404';\n    this.header.dataset.textContent = this.header.textContent;\n    this.header.classList.add(sharedStyles['glitched-text']);\n    this.text.classList.add(sharedStyles['glitched-text']);\n  }\n}\n","import { PopupStandaloneComp } from '../popup-standalone';\n\nimport styles from './popup-standalone-modal.scss';\n\nexport abstract class PopupStandaloneModalComp extends PopupStandaloneComp {\n  constructor() {\n    super();\n    this._rootElement.classList.add(styles['popup-modal']);\n    const closeArea = document.createElement('div');\n    closeArea.classList.add(styles['popup-bg']);\n    this._rootElement.append(closeArea);\n    this.body.classList.add(styles['popup-body']);\n    closeArea.append(this.body);\n    this.header.classList.add(styles['popup-body-header']);\n    this.text.classList.add(styles['popup-body-text']);\n  }\n\n  setHeader(text: string): PopupStandaloneModalComp {\n    this.header.textContent = text;\n    this.header.dataset.textContent = text;\n    return this;\n  }\n\n  setText(text: string): PopupStandaloneModalComp {\n    this.text.textContent = text;\n    this.text.dataset.textContent = text;\n    return this;\n  }\n\n  show(rootElem?: HTMLElement): PopupStandaloneModalComp {\n    const root = rootElem || document.body;\n    root.append(this._rootElement);\n    return this;\n  }\n\n  hide(): PopupStandaloneModalComp {\n    this._rootElement.remove();\n    return this;\n  }\n}\n","import { PopupStandaloneModalComp } from '../popup-standalone-modal';\n\nimport styles from './popup-progress.scss';\nimport sharedStyles from '../../../../../../styles.scss';\n\nexport class PopupStandaloneModalProgressComp extends PopupStandaloneModalComp {\n  private barContainer = document.createElement('div');\n\n  private bar = document.createElement('div');\n\n  constructor() {\n    super();\n    this.barContainer.classList.add(styles.container);\n    this.bar.classList.add(styles.bar);\n    this.barContainer.append(this.bar);\n    this.text.classList.add(styles.text, sharedStyles['glitched-text']);\n    this.body.classList.add(styles.body);\n    this.body.append(this.barContainer);\n  }\n\n  setHeader(text: string): PopupStandaloneModalProgressComp {\n    super.setHeader(text);\n    return this;\n  }\n\n  setText(text: string): PopupStandaloneModalProgressComp {\n    super.setText(text);\n    return this;\n  }\n\n  reset(): PopupStandaloneModalProgressComp {\n    this.bar.style.removeProperty('--progress');\n    this.text.textContent = '';\n    this.text.dataset.textContent = '';\n    return this;\n  }\n\n  setProgress(progress: number): PopupStandaloneModalProgressComp {\n    this.bar.style.setProperty('--progress', `${progress}%`);\n    return this;\n  }\n}\n","import { BaseComp } from '../../base-comp/base-comp';\n\nexport interface BasePopupAttrs {\n  configurable: boolean;\n}\n\nexport abstract class PopupStandaloneComp extends BaseComp {\n  protected body: HTMLElement;\n\n  protected header: HTMLHeadingElement;\n\n  protected text: HTMLParagraphElement;\n\n  constructor() {\n    super('div');\n\n    this.body = document.createElement('div');\n    this.header = document.createElement('h3');\n    this.text = document.createElement('p');\n\n    this.body.append(this.header, this.text);\n    this._rootElement.append(this.body);\n  }\n}\n","export function hexToRgb(hex: string): { r: number; g: number; b: number } {\n  let c: string[];\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    // c = hex.substring(1).split('');\n    c = hex.split('');\n    if (c.length === 4) {\n      c = [c[1], c[1], c[2], c[2], c[3], c[3]] as string[];\n    }\n    const r = Number.parseInt(hex.slice(1, 3), 16);\n    const g = Number.parseInt(hex.slice(3, 5), 16);\n    const b = Number.parseInt(hex.slice(5, 7), 16);\n    // return `rgb(${r}, ${g}, ${b})`;\n    return { r, g, b };\n  }\n  throw new Error('Bad Hex');\n}\n","export function genUniqId(): string {\n  const arr = new Uint8Array(4);\n  return window.crypto.getRandomValues(arr).join('');\n}\n\nexport function getRandomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n\nexport function getRandomArbitraryInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function genRandomHexColor(): string {\n  const color = `#${Math.floor(Math.random() * 16_777_215).toString(16)}`;\n  if (color.length === 7) return color;\n  return genRandomHexColor();\n}\n","export interface TransitionPromiseInterface {\n  elem: HTMLElement;\n  prop: string;\n  val?: string;\n  valToWait?: string;\n  forceAutoresolveIn?: number;\n}\n\nexport function getTransitionDuration(\n  style: CSSStyleDeclaration,\n  prop: string,\n) {\n  const transPropArr = style\n    .getPropertyValue('transition-property')\n    .replace(',', '')\n    .split(' ');\n  let propIndex = transPropArr.lastIndexOf(prop);\n\n  if (propIndex === -1) propIndex = transPropArr.lastIndexOf('all');\n\n  if (propIndex !== -1) {\n    const transDurationsArr = style\n      .getPropertyValue('transition-duration')\n      .replace(',', '')\n      .split(' ');\n    return transDurationsArr[propIndex];\n  }\n\n  return undefined;\n}\n\nexport function transitionPromise(\n  params: TransitionPromiseInterface,\n): Promise<boolean> {\n  return new Promise(resolve => {\n    const transformAndAutoresolve = (delay?: number): void => {\n      if (params.val) params.elem.style.setProperty(params.prop, params.val);\n      const time = delay || 20;\n      setTimeout(() => {\n        resolve(true);\n        // doesn't work - for cause look forward\n        // window.getComputedStyle(elem)[prop] == val ? resolve(true) : resolve(false);\n      }, time);\n    };\n\n    const transformAndWaitEvent = () => {\n      const eventHandler = (e: TransitionEvent): void => {\n        if (e.target !== params.elem) return;\n\n        if (e.propertyName !== params.prop) return;\n\n        if (\n          params.valToWait &&\n          window.getComputedStyle(params.elem).getPropertyValue(params.prop) !==\n            params.valToWait\n        ) {\n          return;\n        }\n\n        params.elem.removeEventListener('transitionend', eventHandler);\n        params.elem.removeEventListener('transitionend', eventHandler);\n\n        // val should be equal to style ! For example translate != matrix...\n        // if(val) window.getComputedStyle(elem)[prop] == val ? resolve(true) : reject(false);\n        // else\n        resolve(true);\n      };\n\n      params.elem.addEventListener('transitionend', eventHandler);\n      params.elem.addEventListener('transitioncancel', eventHandler);\n\n      if (params.val) params.elem.style.setProperty(params.prop, params.val);\n    };\n\n    if (params.forceAutoresolveIn)\n      transformAndAutoresolve(params.forceAutoresolveIn);\n    else if (\n      params.valToWait &&\n      window.getComputedStyle(params.elem).getPropertyValue(params.prop) ===\n        params.valToWait\n    )\n      transformAndAutoresolve();\n    else {\n      const style = window.getComputedStyle(params.elem);\n      const duration = getTransitionDuration(style, params.prop);\n\n      if (!duration || duration === '0s') {\n        transformAndAutoresolve();\n      } else {\n        transformAndWaitEvent();\n      }\n    }\n  });\n}\n","export interface Notifiable {\n  notify: <T>(params: T) => void | Promise<void>;\n}\n\nexport function isNotifiable(object: unknown): object is Notifiable {\n  const objAsRecord = object as Record<string, unknown>;\n  return 'notify' in objAsRecord && typeof objAsRecord.notify === 'function';\n}\n","class ObjProcessor {\n  readonly deepFreeze = <T>(obj: T): T => {\n    if (typeof obj === 'object' && obj !== null) {\n      const record = obj as Record<string, unknown>;\n      Object.keys(record).forEach(prop => {\n        if (\n          typeof record[prop] === 'object' &&\n          !Object.isFrozen(record[prop])\n        ) {\n          this.deepFreeze(record[prop]);\n        }\n      });\n      return Object.freeze(obj);\n    }\n    throw new Error('not object');\n  };\n\n  readonly deepClone = <T>(target: T): T => {\n    if (Array.isArray(target)) {\n      const clone = [] as unknown[];\n      (target as unknown[]).forEach(v => {\n        clone.push(v);\n      });\n      return clone.map((n: unknown) => this.deepClone(n)) as unknown as T;\n    }\n\n    if (typeof target === 'object' && target !== null) {\n      if (target instanceof HTMLElement)\n        return target.cloneNode(true) as unknown as T;\n      if (target instanceof Blob) return target.slice() as unknown as T;\n      const clone = {\n        ...(target as unknown as { [key: string]: unknown }),\n      } as {\n        [key: string]: unknown;\n      };\n      Object.keys(clone).forEach(k => {\n        clone[k] = this.deepClone(clone[k]);\n      });\n      Object.setPrototypeOf(clone, Object.getPrototypeOf(target));\n      return clone as unknown as T;\n    }\n    return target;\n  };\n}\n\nconst OBJ_PROCESSOR = new ObjProcessor();\nOBJ_PROCESSOR.deepFreeze(OBJ_PROCESSOR);\nexport { OBJ_PROCESSOR };\n","import { DBusTopics } from './defs/dbus-topics.def';\nimport { genUniqId } from '../../generators/generators';\nimport { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_ERRORS } from './defs/dbus-errors.def';\nimport { DBusRX, DBusRXFunc } from './defs/dbus-rx/dbus-rx.def';\nimport { DBusTX } from './defs/dbus-tx/dbus-tx.def';\nimport { DBusTXOptions } from './defs/dbus-tx/dbus-tx-options.def';\nimport { DBusTXData } from './defs/dbus-tx/dbus-tx-data.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from './defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTXDataHeaders } from './defs/dbus-tx/dbus-tx-data-headers.def';\nimport { DBusHub, DBusInterface } from './defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './defs/dbus-hub-names.def';\n\nexport class DBus {\n  private network: Map<DBusTopics, Set<DBusRX>> = new Map();\n\n  private idCounter = {\n    txs: 0,\n    rxs: 0,\n  };\n\n  private createdRXs = new Set<DBusRX>();\n\n  private createdTXs = new Set<DBusTX>();\n\n  private attachedHubs = new Map<DBusHub, DBusInterface>();\n\n  private occupiedNames = new Set<string>();\n\n  readonly busId: string;\n\n  constructor() {\n    this.busId = genUniqId();\n    return Object.freeze(this) as unknown as DBus;\n  }\n\n  public attachHub(hub: DBusHub, suffix?: string): void | Promise<void> {\n    return this.createInterfaceForHub(hub, undefined, suffix);\n  }\n\n  private createInterfaceForHub(\n    hub: DBusHub,\n    prefix?: string,\n    suffix?: string,\n  ): void | Promise<void> {\n    if (this.attachedHubs.has(hub))\n      throw new Error(DBUS_ERRORS.HUB_IS_ALREADY_ATTACHED);\n\n    if (!(hub.hubName in DBUS_HUB_NAMES))\n      throw new Error(DBUS_ERRORS.HUB_NAME_NOT_AUTHORIZED);\n\n    let hubName = prefix ? `${prefix}_${hub.hubName}` : hub.hubName;\n    if (suffix) hubName += `_${suffix}`;\n\n    if (this.occupiedNames.has(hubName))\n      throw new Error(DBUS_ERRORS.HUB_NAME_IS_OCCUPIED);\n\n    const arrowedGetNewTX = (desc?: string) => this.getNewTX(hubName, desc);\n    const arrowedGetNewRX = (func: DBusRXFunc, desc?: string) =>\n      this.genNewRX(func, desc);\n    const arrowedPlugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.plugRX(topic, rx);\n    const arrowedUnplugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.unplugRX(topic, rx);\n    const decoratedAttachHub = (subHub: DBusHub, subSuffix?: string) =>\n      this.createInterfaceForHub(subHub, hubName, subSuffix);\n\n    const dbusInterface = new DBusInterface(\n      arrowedGetNewTX,\n      arrowedGetNewRX,\n      arrowedPlugRX,\n      arrowedUnplugRX,\n      decoratedAttachHub,\n    );\n\n    this.occupiedNames.add(hubName);\n    this.attachedHubs.set(hub, dbusInterface);\n\n    OBJ_PROCESSOR.deepFreeze(dbusInterface);\n\n    return hub.connect(dbusInterface);\n  }\n\n  private getNewTX(hubName: string, desc?: string): DBusTX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.txs++;\n\n    const arrowedTransmit = async (opts: DBusTXOptions) => {\n      const head = new DBusTXDataHeaders(\n        hubName,\n        id,\n        regNumber,\n        opts.waitMode,\n        opts.prepMode,\n        desc,\n      );\n      const data = new DBusTXData(head, opts.msg);\n      const result = await this.transmit(data);\n      return result;\n    };\n\n    const tx = new DBusTX(regNumber, id, this.busId, arrowedTransmit);\n\n    const freezedTX = OBJ_PROCESSOR.deepFreeze(tx);\n\n    this.createdTXs.add(freezedTX);\n\n    return freezedTX;\n  }\n\n  private genNewRX(func: DBusRXFunc, desc?: string): DBusRX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.rxs++;\n    const rx = new DBusRX(regNumber, id, this.busId, func, desc);\n    const freezedRX = OBJ_PROCESSOR.deepFreeze(rx);\n    this.createdRXs.add(freezedRX);\n    return freezedRX;\n  }\n\n  private plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.createdRXs.has(rx)) throw new Error(DBUS_ERRORS.XENO_RX);\n    if (!this.network.has(topic)) this.network.set(topic, new Set());\n    this.network.get(topic)?.add(rx);\n  }\n\n  private unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.network.get(topic)?.delete(rx);\n  }\n\n  private async transmit(data: DBusTXData): Promise<unknown> {\n    if (!this.network.has(data.msg.topic)) {\n      throw new Error(DBUS_ERRORS.TOPIC_IS_NOT_EXIST);\n    }\n\n    const rxs = this.network.get(data.msg.topic);\n\n    if (rxs === undefined || rxs.size === 0)\n      throw new Error(DBUS_ERRORS.TOPIC_HAS_NO_RXS);\n\n    let choosedRXs: DBusRX[] = [];\n\n    if (data.msg.prefResponseRxIds) {\n      rxs.forEach(rx => {\n        if (data.msg.prefResponseRxIds?.includes(rx.id)) choosedRXs.push(rx);\n      });\n      if (choosedRXs.length === 0)\n        throw new Error(DBUS_ERRORS.PREF_RXS_ARE_NOT_EXIST);\n    } else choosedRXs = [...rxs];\n\n    let result;\n    switch (data.headers.waitMode) {\n      case DBusTXWaitModes.all:\n        result = await Promise.all(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.allSetled:\n        result = await Promise.allSettled(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.manual:\n        result = choosedRXs;\n        break;\n      case DBusTXWaitModes.nowait:\n      default:\n        choosedRXs.map(rx => this.callRXFunc(data, rx));\n        result = true;\n        break;\n    }\n    return result;\n  }\n\n  private callRXFunc = (data: DBusTXData, rx: DBusRX) => {\n    const handleClone = () => {\n      const clonedData = OBJ_PROCESSOR.deepClone(data);\n      return rx.func(clonedData);\n    };\n\n    const handleFreeze = () => {\n      const freezedData = OBJ_PROCESSOR.deepFreeze(data);\n      return rx.func(freezedData);\n    };\n\n    switch (data.headers.prepMode) {\n      case DBusTXPrepModes.clone:\n        return handleClone();\n      case DBusTXPrepModes.freeze:\n        return handleFreeze();\n      default:\n        throw new Error(DBUS_ERRORS.UNEXPECTED_PREP_MODE);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusCommonResponses = {\n  VOID: 'VOID',\n  BAD_REQUEST: 'BAD_REQUEST',\n};\n\nconst DBUS_COMMON_RESPONSES = OBJ_PROCESSOR.deepFreeze(dbusCommonResponses);\n\nexport { DBUS_COMMON_RESPONSES };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusErrors = {\n  HUB_NAME_IS_OCCUPIED: 'HUB_NAME_IS_OCCUPIED',\n  HUB_IS_ALREADY_ATTACHED: 'HUB_IS_ALREADY_ATTACHED',\n  HUB_NAME_NOT_AUTHORIZED: 'HUB_NAME_NOT_AUTHORIZED',\n  XENO_RX: 'XENO_RX',\n  TOPIC_IS_NOT_EXIST: 'TOPIC_IS_NOT_EXIST',\n  TOPIC_HAS_NO_RXS: 'TOPIC_HAS_NO_RXS',\n  PREF_RXS_ARE_NOT_EXIST: 'PREF_RXS_ARE_NOT_EXIST',\n  UNEXPECTED_PREP_MODE: 'UNEXPECTED_PREP_MODE',\n};\n\nconst DBUS_ERRORS = OBJ_PROCESSOR.deepFreeze(dbusErrors);\n\nexport { DBUS_ERRORS };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nclass DBusHubNames {\n  readonly APP = 'APP';\n\n  readonly ROUTER = 'ROUTER';\n\n  readonly GARAGE = 'GARAGE';\n\n  readonly HEADER = 'HEADER';\n\n  readonly MAIN_CONTROLS = 'MAIN_CONTROLS';\n\n  readonly CREATE_UPDATE = 'CREATE_UPDATE';\n\n  readonly GARAGE_CONTROLLER = 'GARAGE_CONTROLLER';\n}\n\nconst obj = new DBusHubNames();\n\nconst DBUS_HUB_NAMES = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { DBUS_HUB_NAMES };\n\nexport type DBusHubNamesList = keyof DBusHubNames;\n","import { DBusHubNamesList, DBUS_HUB_NAMES } from './dbus-hub-names.def';\nimport { DBusRX, DBusRXFunc } from './dbus-rx/dbus-rx.def';\nimport { DBusTopics } from './dbus-topics.def';\nimport { DBusTX } from './dbus-tx/dbus-tx.def';\n\nexport interface DBusHub {\n  readonly hubName: DBusHubNamesList;\n  connect: (dbusInterface: DBusInterface) => void | Promise<void>;\n  // TODO: handleSystemRequset: (request: unknown) => unknown | Promise<unknown>;\n}\n\nexport function isDBusHub(object: unknown): object is DBusHub {\n  const objAsRecord = object as Record<string, unknown>;\n  return (\n    'connect' in objAsRecord &&\n    'hubName' in objAsRecord &&\n    typeof objAsRecord.hubName === 'string' &&\n    objAsRecord.hubName in DBUS_HUB_NAMES\n  );\n}\n\nexport class DBusInterface {\n  private RXs = new Set<DBusRX>();\n\n  private TXs = new Set<DBusTX>();\n\n  private RXsPlugMap = new Map<DBusTopics, Set<DBusRX>>();\n\n  constructor(\n    private readonly arrowedGetNewTX: (desc?: string) => DBusTX,\n    private readonly arrowedGetNewRX: (\n      func: DBusRXFunc,\n      desc?: string,\n    ) => DBusRX,\n    private readonly arrowedPlugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    private readonly arrowedUnplugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    public readonly attachSubHub: (\n      subHub: DBusHub,\n      subSuffix?: string,\n    ) => void | Promise<void>,\n  ) {}\n\n  getNewRX(func: DBusRXFunc, desc?: string) {\n    const rx = this.arrowedGetNewRX(func, desc);\n    this.RXs.add(rx);\n    return rx;\n  }\n\n  getNewTX(desc?: string) {\n    const tx = this.arrowedGetNewTX(desc);\n    this.TXs.add(tx);\n    return tx;\n  }\n\n  plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.RXsPlugMap.has(topic)) this.RXsPlugMap.set(topic, new Set());\n    this.RXsPlugMap.get(topic)?.add(rx);\n    this.arrowedPlugRX(topic, rx);\n  }\n\n  unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.RXsPlugMap.get(topic)?.delete(rx);\n    this.arrowedUnplugRX(topic, rx);\n  }\n}\n","import { DBusTXData } from '../dbus-tx/dbus-tx-data.def';\n\nexport type DBusRXFunc = (data: DBusTXData) => Promise<unknown>;\n\nexport class DBusRX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly func: DBusRXFunc,\n    readonly desc?: string,\n  ) {}\n}\n","export enum DBusTopics {\n  APP_CTL,\n  ROUTING,\n  CAR_ACTION,\n  GARAGE,\n  REST_CLIENT_REQUESTS,\n  GENERATE,\n}\n","import { DBusTXPrepModes, DBusTXWaitModes } from './dbus-tx-modes.def';\n\nexport class DBusTXDataHeaders {\n  constructor(\n    readonly hubName: string,\n    readonly txId: string,\n    readonly txRegNumber: number,\n    readonly waitMode: DBusTXWaitModes,\n    readonly prepMode: DBusTXPrepModes,\n    readonly txDesc?: string,\n  ) {}\n}\n","import { DBusMsg } from '../msgs/dbus-msg.def';\nimport { DBusTXDataHeaders } from './dbus-tx-data-headers.def';\n\nexport class DBusTXData {\n  constructor(readonly headers: DBusTXDataHeaders, readonly msg: DBusMsg) {}\n}\n","export enum DBusTXWaitModes {\n  nowait,\n  all,\n  allSetled,\n  manual,\n}\n\nexport enum DBusTXPrepModes {\n  clone,\n  freeze,\n}\n","import { DBusTXOptions } from './dbus-tx-options.def';\n\nexport class DBusTX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly transmit: (options: DBusTXOptions) => Promise<unknown>,\n  ) {}\n}\n","import { DBusTopics } from '../dbus-topics.def';\n\nexport abstract class DBusMsg {\n  constructor(\n    readonly topic: DBusTopics,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {}\n}\n","export class Pager {\n  private firstPageNumber = 1;\n\n  private currPageNumber = this.firstPageNumber;\n\n  private lastPageNumber = 0;\n\n  private pagerSpan = document.createElement('span');\n\n  private entriesCount = 0;\n\n  private callbackIsCalled = false;\n\n  constructor(\n    private entriesPerPage: number,\n    protected readonly listCallback: (dir: 'prev' | 'next') => Promise<boolean>,\n    private btnPrevPage = document.createElement('button'),\n    private btnNextPage = document.createElement('button'),\n  ) {\n    const btnNextSpan = document.createElement('span');\n    btnNextSpan.textContent = 'Next page';\n    this.btnNextPage.append(btnNextSpan);\n\n    const btnPrevSpan = document.createElement('span');\n    btnPrevSpan.textContent = 'Prev page';\n    this.btnPrevPage.append(btnPrevSpan);\n\n    this.btnNextPage.addEventListener('click', () => this.callCallback('next'));\n    this.btnPrevPage.addEventListener('click', () => this.callCallback('prev'));\n  }\n\n  public toogleLock(lock: boolean) {\n    this.toggleBtnsDisabled(lock);\n  }\n\n  public getEntriesPerPage(): number {\n    return this.entriesPerPage;\n  }\n\n  public setLastPageNumber(n: number) {\n    this.lastPageNumber = n;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public setEntriesCount(n: number) {\n    this.entriesCount = n;\n    this.lastPageNumber = Math.ceil(this.entriesCount / this.entriesPerPage);\n    this.updateSpanText();\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public getCurrPageNumber() {\n    return this.currPageNumber;\n  }\n\n  public getBtnPrevPage(): HTMLSpanElement {\n    return this.btnPrevPage;\n  }\n\n  public getBtnNextPage(): HTMLSpanElement {\n    return this.btnNextPage;\n  }\n\n  public getPagerSpan(): HTMLSpanElement {\n    return this.pagerSpan;\n  }\n\n  tryChangePage(dir: 'prev' | 'next') {\n    return this.callCallback(dir);\n  }\n\n  private updateSpanText() {\n    const pageNumber = this.entriesCount > 0 ? this.currPageNumber : 0;\n    this.pagerSpan.textContent = `Entries: ${this.entriesCount}, Page: ${pageNumber}/${this.lastPageNumber}`;\n  }\n\n  private async callCallback(dir: 'prev' | 'next') {\n    if (this.callbackIsCalled) return;\n    this.callbackIsCalled = true;\n    this.toggleBtnsDisabled(true);\n    const pageIsChanged = await this.listCallback(dir);\n    if (pageIsChanged) {\n      switch (dir) {\n        case 'next':\n          this.currPageNumber++;\n          break;\n        case 'prev':\n          this.currPageNumber--;\n          break;\n        default:\n          break;\n      }\n      this.updateSpanText();\n    }\n    this.toggleBtnsDisabled(false);\n    this.callbackIsCalled = false;\n  }\n\n  private toggleBtnsDisabled(state: boolean) {\n    if (state === true) {\n      this.btnPrevPage.disabled = true;\n      this.btnNextPage.disabled = true;\n      return;\n    }\n\n    if (this.currPageNumber > this.firstPageNumber)\n      this.btnPrevPage.disabled = false;\n    else this.btnPrevPage.disabled = true;\n\n    if (this.currPageNumber < this.lastPageNumber)\n      this.btnNextPage.disabled = false;\n    else this.btnNextPage.disabled = true;\n  }\n}\n","import { DBusTopics } from '../../dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgRoutingMsg extends DBusMsg {\n  constructor(rxIds?: string[], prefResponseRxIds?: string[]) {\n    super(DBusTopics.ROUTING, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\nimport { ROUTES } from '../../routes.def';\n\nexport class DBusMsgRouteIsChangedMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly newRoute: keyof typeof ROUTES | string,\n    readonly addInfo?: unknown,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\n\nexport type RouterStatus = 'restrained' | 'free';\n\nexport class DBusMsgRoutingStatusMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly status: RouterStatus,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\n\nexport type RoutingRestrainActions = 'restrain' | 'unleash';\n\nexport class DBusMsgRoutingRestrainMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly action: RoutingRestrainActions,\n    readonly callback: () => Promise<boolean>,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","export class SimpleRouterAgent {\n  constructor(\n    readonly type: string,\n    readonly path: string,\n    readonly callback: CallableFunction,\n    readonly getStateCallback?: CallableFunction,\n    readonly setStateCallback?: CallableFunction,\n  ) {}\n}\n","import { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_HUB_NAMES } from '../dbus/defs/dbus-hub-names.def';\nimport { DBusHub, DBusInterface } from '../dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../dbus/defs/dbus-tx/dbus-tx-data.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRouteIsChangedMsg } from './dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport {\n  DBusMsgRoutingStatusMsg,\n  RouterStatus,\n} from './dbus-msgs-defs/types/router-status-msg.def';\nimport { DBusMsgRoutingRestrainMsg } from './dbus-msgs-defs/types/routing-restrict-msg.def';\nimport { SimpleRouterAgent } from './simple-router-agent';\n\nexport interface RouterOptions {\n  mode: string;\n  onlyDBus?: true;\n  defaultRoot?: string;\n  defaultAgent?: SimpleRouterAgent;\n}\n\nexport class SimpleRouter implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.ROUTER;\n\n  private agents: Set<SimpleRouterAgent> = new Set();\n\n  private options: RouterOptions;\n\n  private currRoute: string | undefined;\n\n  private txs: Set<DBusTX> = new Set();\n\n  private defaultAgent: SimpleRouterAgent | undefined;\n\n  private restrains: Set<() => Promise<boolean>> = new Set();\n\n  constructor(options: RouterOptions) {\n    switch (options.mode) {\n      case '#':\n        // just filter that # mode\n        break;\n      case '?':\n        throw new Error(`${options.mode} is not supported yet!`);\n      default:\n        throw new Error(`${options.mode} is not supported!`);\n    }\n    this.options = OBJ_PROCESSOR.deepFreeze(options);\n\n    window.addEventListener('popstate', async () => {\n      if (window.location.href === this.currRoute) return;\n\n      if (this.restrains.size > 0) {\n        const wantedRoute = window.location.href;\n\n        if (this.currRoute) {\n          window.location.href = this.currRoute;\n        } else if (this.options.defaultRoot) {\n          window.location.href = `${window.location.host}/${this.options.defaultRoot}`;\n        }\n        const arr = [...this.restrains.values()];\n        const promises = arr.map(arrow => arrow());\n        const result = await Promise.all(promises);\n        let cancelRouteChange = false;\n\n        if (Array.isArray(result)) {\n          for (let i = 0; i < result.length; i++) {\n            if (typeof result[i] !== 'boolean')\n              throw new Error('restrict func returned not boolean value!');\n\n            if (!result[i]) cancelRouteChange = true;\n            else {\n              const func = arr[i];\n\n              if (func) this.restrains.delete(func);\n              if (this.restrains.size === 0)\n                this.broadcastRoutingStatus('free');\n            }\n          }\n        }\n\n        if (!cancelRouteChange) window.location.href = wantedRoute;\n      } else {\n        this.activateWantedAgents();\n      }\n    });\n  }\n\n  private broadcastRoutingStatus(status: RouterStatus) {\n    const msg = new DBusMsgRoutingStatusMsg(status);\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  activateWantedAgents(addInfo?: unknown): boolean | Error[] {\n    this.currRoute = window.location.href;\n    let activatedCount = 0;\n    const errors = [];\n\n    if (!this.options.onlyDBus && this.options.mode === '#') {\n      const agentsArr = [...this.agents];\n      for (let i = 0; i < this.agents.size; i++) {\n        if (agentsArr[i]?.path === window.location.hash) {\n          try {\n            agentsArr[i]?.callback(addInfo);\n          } catch (error) {\n            error.push(error);\n          }\n          activatedCount++;\n          break;\n        }\n      }\n\n      if (activatedCount === 0) {\n        if (\n          this.defaultAgent &&\n          this.options.defaultRoot === window.location.hash\n        ) {\n          this.defaultAgent.callback(addInfo);\n        } else {\n          errors.push(new Error('Agent is not finded'));\n        }\n      }\n    }\n\n    if (this.txs.size > 0) {\n      this.txs.forEach(tx => {\n        const msg = new DBusMsgRouteIsChangedMsg(window.location.hash, addInfo);\n        tx.transmit({\n          msg,\n          waitMode: DBusTXWaitModes.nowait,\n          prepMode: DBusTXPrepModes.freeze,\n        });\n      });\n    }\n\n    if (errors.length > 0) return errors;\n    return activatedCount > 0;\n  }\n\n  addRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.add(agent);\n  }\n\n  removeRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.delete(agent);\n  }\n\n  flushRouterAgents(): void {\n    this.agents.clear();\n  }\n\n  // /* not refactored yet\n  private watchRestrictions = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRoutingRestrainMsg) {\n      const { action, callback } = data.msg;\n      if (action === 'restrain') {\n        this.restrains.add(callback);\n        if (this.restrains.size === 1)\n          this.broadcastRoutingStatus('restrained');\n      } else {\n        this.restrains.delete(callback);\n        if (this.restrains.size === 0) this.broadcastRoutingStatus('free');\n      }\n    }\n  };\n\n  connect(int: DBusInterface): void {\n    const tx = int.getNewTX('broadcasting route changes');\n    this.txs.add(tx);\n\n    const rx = int.getNewRX(\n      this.watchRestrictions,\n      'router watch restrictions requests',\n    );\n    int.plugRX(DBusTopics.ROUTING, rx);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\n\nexport type EngineResponse = {\n  velocity: number;\n  distance: number;\n};\n\nclass RestClientEngine {\n  private resUrl = '/engine';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  toggleEngine(\n    id: number,\n    status: 'started' | 'stopped',\n  ): Promise<EngineResponse> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=${status}`;\n      console.log(url);\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as EngineResponse))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  enterDriveMode(id: number): Promise<true | false | 404> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=drive`;\n      console.log(url);\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          else if (response.status === 500) res(false);\n          else rej(new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT));\n        })\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientEngine('http://127.0.0.1:3000');\n\nconst REST_CLIENT_ENGINE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_ENGINE };\n","import { RegCarData, UnregCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { REST_CLIENT_NAMES } from '../rest-clients-names.def';\n\nclass RestClientGarage {\n  protected clientName = REST_CLIENT_NAMES.GARAGE;\n\n  private resUrl = '/garage';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getCars(\n    page?: number,\n    limit?: number,\n  ): Promise<{ limit: string; cars: RegCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      const url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res({ limit: limitResponse, cars: json as RegCarData[] }))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  getCar(id: number): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  createCar(unregCar: UnregCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(unregCar),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  deleteCar(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  updateCar(regCar: RegCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${regCar.id}`;\n      const data: UnregCarData = regCar;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientGarage('http://127.0.0.1:3000');\n\nconst REST_CLIENT_GARAGE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_GARAGE };\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\n\nclass RestClientWinnersSortOptions {\n  readonly id = 'id';\n\n  readonly wins = 'wins';\n\n  readonly time = 'time';\n}\n\nconst obj = new RestClientWinnersSortOptions();\n\nconst REST_CLIENT_WINNERS_SORT_OPTIONS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS_SORT_OPTIONS };\n\nexport type RestClientWinnersSortOptionsList =\n  keyof RestClientWinnersSortOptions;\n","import { WinnerCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { RestClientWinnersSortOptionsList } from './rest-client-winners.def';\n\nclass RestClientWinners {\n  private resUrl = '/winners';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getWinners(\n    page = 0,\n    limit?: number,\n    sort?: RestClientWinnersSortOptionsList,\n    order?: 'ASC' | 'DESC',\n  ): Promise<{ limit: string; cars: WinnerCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      let url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      if (sort) url += `&_sort=${sort}`;\n      if (order) url += `&_order=${order}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json =>\n          res({ limit: limitResponse, cars: json as WinnerCarData[] }),\n        )\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  getWinner(id: number): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  createWinner(winnerCarData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(winnerCarData),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  deleteWinner(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  updateWinner(winnerData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${winnerData.id}`;\n      const data: WinnerCarData = winnerData;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientWinners('http://127.0.0.1:3000');\n\nconst REST_CLIENT_WINNERS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nconst restClientError = {\n  UNEXPECTED_RESULT: 'UNEXPECTED_RESULT',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n  CONNECTION_REFUSED: 'CONNECTION_REFUSED',\n};\n\nconst REST_CLIENT_ERROR = OBJ_PROCESSOR.deepFreeze(\n  restClientError,\n) as typeof restClientError;\n\nexport { REST_CLIENT_ERROR };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nclass RestClientNames {\n  readonly GARAGE = 'GARAGE';\n\n  readonly WINNERS = 'WINNERS';\n}\n\nconst REST_CLIENT_NAMES = new RestClientNames();\n\nOBJ_PROCESSOR.deepFreeze(REST_CLIENT_NAMES);\n\nexport { REST_CLIENT_NAMES };\n\nexport type RestClientNamesList = keyof RestClientNames;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { App } from './app/app';\n\nwindow.addEventListener('load', () => {\n  const appDiv = document.createElement('div');\n  document.body.append(appDiv);\n  const app = new App(appDiv);\n});\n"],"sourceRoot":""}