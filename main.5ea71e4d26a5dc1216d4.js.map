{"version":3,"sources":["webpack://async-race/./src/components/garage/garage.scss?dc9e","webpack://async-race/./src/components/garage/subcomps/car/car.scss?1a27","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.scss?4682","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.scss?1eb1","webpack://async-race/./src/components/garage/subcomps/track/track.scss?9419","webpack://async-race/./src/components/header/header.scss?92c0","webpack://async-race/./src/components/winners/winners.scss?feec","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.scss?0629","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.scss?22c3","webpack://async-race/./src/styles.scss?cfb3","webpack://async-race/./src/app.ts","webpack://async-race/./src/components/garage/car-actions.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-action-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-created-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-remove-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-select-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-request-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-status-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-req-msg.def.ts","webpack://async-race/./src/components/garage/garage-controller.ts","webpack://async-race/./src/components/garage/garage-driver.ts","webpack://async-race/./src/components/garage/garage-servant.ts","webpack://async-race/./src/components/garage/garage.ts","webpack://async-race/./src/components/garage/subcomps/car/car.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-create.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-proto.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/dbus-msgs/generate-cars-msg.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.ts","webpack://async-race/./src/components/garage/subcomps/track/track.ts","webpack://async-race/./src/components/header/header.ts","webpack://async-race/./src/components/header/subcomps/nav-item/nav-item.ts","webpack://async-race/./src/components/winners/subcomps/winner-entry.ts","webpack://async-race/./src/components/winners/winners.ts","webpack://async-race/./src/definitions/car-random-data.def.ts","webpack://async-race/./src/lib/components/base-comp/base-comp.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/404/popup-404.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.ts","webpack://async-race/./src/lib/components/popups/standalone/popup-standalone.ts","webpack://async-race/./src/lib/convertors/colors.ts","webpack://async-race/./src/lib/generators/generators.ts","webpack://async-race/./src/lib/interfaces/notifiable.ts","webpack://async-race/./src/lib/processors/obj-processor.ts","webpack://async-race/./src/lib/services/dbus/dbus.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-common-responses.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-errors.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-hub-names.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-interface.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-rx/dbus-rx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-topics.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data-headers.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/msgs/dbus-msg.def.ts","webpack://async-race/./src/lib/services/pager/pager.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/dbus-msg-routing-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg.ts","webpack://async-race/./src/lib/services/simple-router/simple-router-agent.ts","webpack://async-race/./src/lib/services/simple-router/simple-router.ts","webpack://async-race/./src/services/rest-clients/client-engine/rest-client-engine.ts","webpack://async-race/./src/services/rest-clients/client-garage/rest-client-garage.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.def.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.ts","webpack://async-race/./src/services/rest-clients/rest-clients-errors.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-names.def.ts","webpack://async-race/webpack/bootstrap","webpack://async-race/webpack/runtime/define property getters","webpack://async-race/webpack/runtime/hasOwnProperty shorthand","webpack://async-race/webpack/runtime/make namespace object","webpack://async-race/./src/entry.ts"],"names":["rootElement","hubName","DBUS_HUB_NAMES","APP","loadedMainComponents","defaultRouterAgent","SimpleRouterAgent","this","loadMainComponent","router","SimpleRouter","mode","defaultRoot","defaultAgent","mainlineDBus","DBus","watchRouterMsgs","async","data","msg","DBusMsgRouteIsChangedMsg","newRoute","DBUS_COMMON_RESPONSES","VOID","window","addEventListener","e","console","log","preventDefault","promise","catch","error","message","REST_CLIENT_ERROR","CONNECTION_REFUSED","popup","PopupStandaloneModal404Comp","setText","show","retry","REST_CLIENT_GARAGE","getCars","hide","activateWantedAgents","Promise","res","setTimeout","classList","add","app","header","HeaderComponent","HEADER","append","attachHub","intrfce","routeRX","getNewRX","plugRX","DBusTopics","ROUTING","name","GarageComp","WinnersComp","location","hash","newComponent","currMainComponent","remove","isDBusHub","isNotifiable","notify","CarActions","DBusMsgCarActionMsg","DBusMsg","action","rxIds","prefResponseRxIds","super","CAR_ACTION","DBusMsgCarActionCreatedMsg","car","CREATED","DBusMsgCarActionRemovedMsg","nullifiedContract","REMOVED","DBusMsgCarActionSelectedMsg","notifyChanges","SELECTED","DBusMsgGarageRaceMsg","GARAGE","DBusMsgRaceRequestMsg","DBusMsgGarageRaceStatusMsg","status","DBusMsgGarageResetMsg","DBusMsgGarageResetReqMsg","GarageComponentControllerAkaDirector","tracksContainer","carCtlsBlock","GARAGE_CONTROLLER","txs","Set","entriesPerPage","pagerContainer","document","createElement","carImgRatio","scaleFactor","pagerCallback","dir","reloadData","generatorRXFunc","DBusMsgGenerateCarsMsg","garageManagersTeam","getContracts","size","racingRXFunc","pager","toogleLock","performRace","resetState","carActionsRXFunc","tryChangePage","createCarCtlBlock","index","btns","btnSelect","btnStart","btnReset","btnRm","forEach","btn","numberSpan","textContent","toString","container","connectCtlAndTrack","ctlElem","track","illuminateSelf","GarageManagersTeam","Pager","btnNextPage","getBtnNextPage","btnPrevPage","getBtnPrevPage","pagerInfo","getPagerSpan","redraw","int","getNewTX","autoConnect","carActionsMsgsRX","raceMsgsRX","generatorMsgsRX","GENERATE","rej","page","getCurrPageNumber","getEntriesPerPage","then","response","limit","cars","setEntriesCount","Number","parseInt","length","nullifyContracts","newContracts","TrackComp","carComp","CarComp","placeCar","push","addContracts","clearDOM","map","contract","geometry","calcGeometry","setStylesForTracks","drawTracks","drawCarsCtls","firstChild","style","getComputedStyle","containerHeight","parseFloat","height","paddingBottom","paddingTop","firstAutoHeight","innerWidth","heights","heightSum","contracts","factor","carTrackHeight","excessHeight","heightsReversed","sort","a","b","displacementBase","displacements","midIndex","displacement","DISPLACEMENT_FIX","paddingBase","paddingAddShift","trackHeights","setProperty","ctlBlocks","block","GarageDriverCommands","GarageDriver","Error","undefined","flags","thisDriveId","genUniqId","currDriveId","ignitionPromise","TurnOnTheIgnition","driveParams","drivePromise","drive","params","REST_CLIENT_ENGINE","toggleEngine","currCar","id","stopCar","rollBack","msgBlock","PopupStandaloneModalProgressComp","interval","updateProgress","playAwaitingAnim","clearTimeout","setInterval","lastTimeInMs","lastStart","progress","Date","now","setProgress","clearInterval","driveId","time","calculateDriveTime","start","enterDriveMode","success","rollForward","onlyAnim","broken","stop","distance","velocity","freeDrivers","busyDrivers","Map","carCtlsClickListener","target","HTMLElement","elem","HTMLButtonElement","parentElement","disabled","currRaceId","handleRemoving","startDriving","handleRestoreState","handleSelection","handleWinner","winnerCar","REST_CLIENT_WINNERS","getWinner","winnerRecord","updatedWinnerData","wins","toFixed","updateWinner","NOT_FOUND","newWinnerData","createWinner","tx","tryFreeDrivers","delete","clear","—Åontracts","newContract","prepareForRace","rollbackCars","broadcastRaceStatus","driver","get","returnToStart","choosedDriver","find","isFree","set","putBehindTheWheel","performDrivingProtocol","deleteCar","deleteWinner","transmit","prepMode","DBusTXPrepModes","freeze","waitMode","DBusTXWaitModes","nowait","genSelectCallback","rollbacks","all","thisRaceId","raceData","raceId","arrivedByOrder","notArrived","participantsCount","isFinishVisible","stratedCount","processRace","finally","result","handleDriveResult","getOutOfTheCar","has","updateData","BaseComp","isControllerWorking","mainControlsComp","MainControlsComp","carsCtlsBlock","bgVideo","bgVideoProgressListener","buffered","end","duration","bgVideoCanPlayListener","removeEventListener","controller","startWorking","reset","play","_rootElement","garage","selfCtlsBlock","bg","garage__bg","controls","loop","defaultMuted","muted","autoplay","src","attachSubHub","_currCar","canvas","tireBack","btnSelect$","btnRm$","_spanCarName","btnStart$","btnReset$","isReseted","clearAnimFromElem","anim","commitStyles","selectSpan","rmSpan","startSpan","resetSpan","drawCar","color","drawWheels","rootElem","wheelImg","Image","CAR_WHEEL_IMG_SRC","onload","backwardWheelImg","OBJ_PROCESSOR","deepClone","carData","finishPromise","resolve","playOutAnim","currOutOfSceneAnim","cancel","currAnimation","playbackRate","finished","removeProperty","playInAnim","asyncFunc","animOut","animate","opacity","easing","fill","promiseToAwait","animIn","iterations","POSITIVE_INFINITY","transform","rootStyle","selfStyle","rootWidth","width","paddingLeft","paddingRight","selfWidth","coordinateInPercents","onfinish","oncancel","pause","outOfScene","img","frameNumber","CAR_EXPLOSION_IMG_DATA","BASE_URL","EXTENSION","FRAME_TIME_MS","FRAMES_COUNT","hexColor","CAR_BODY_IMG_SRC","ctx","getContext","shadowColor","shadowBlur","drawImage","paintCarBody","imageData","getImageData","rgb","hexToRgb","j","i","red","green","blue","blueDiff","blueDiffThreshold","threshold","r","g","putImageData","TIMING_FUNCTION","CreateCompController","CreateUpdateCompControllerProto","elements","inputText","inputColor","setupBtnCreate","unregCar","value","createCar","clone","state","UpdateCompController","rxs","chooseCarListener","choosedCar","notifyCb","toogleCtlsDisabled","setupBtnUpdate","rx","updateCar","CreateUpdateComponent","type","btnText","CREATE_UPDATE","textInput","colorInput","root","MAIN_CONTROLS","createComponent","updateComponent","btnRace","btnGenerate","generateClickListener","transmissions","transmission","allSetled","allSettled","generate","genCb","resolveMsg","raceClickListener","resetClickListener","genRandomCarName","manufacturerNumber","getRandomInt","CAR_MODEL_LIST_KEYS","manufacturerName","models","CAR_MODEL_LIST","rxFuncForRaceMsgs","btnsBlock","renderBtns","span","btnBlock","total","left","cb","genLeft","unregCarData","genRandomHexColor","winner","getRandomArbitraryInt","topBlock","illuminate","track_illuminated","hasChildNodes","childNodes","child","spanCarName","buses","illuminateNavItem","anchors","anchor","getAttribute","logo","header__logo","firstSpan","secondSpan","navContainer","ul","li","svg","navItems","NavItem","item","illuminateRX","text","href","styles","iconSrc","_anchor","setAttribute","iconImage","WinnerRowComp","winnerData","indexElem","idElem","carPreviewBox","nameElem","winsElem","bestTimeElem","carPreview","genPreview","table","tableBody","tableHead","thId","thCar","thName","thWins","thBestTime","currOrder","currSort","refillTable","tableHeadClickListener","REST_CLIENT_WINNERS_SORT_OPTIONS","contains","refreshTableHeader","currSortedElem","winners","pagerBtnsContainer","pagerSpan","renderHeader","tr","thIndex","specialSort","specialOrder","order","getWinners","rows","Array","promises","indexInc","getCar","totalIndex","row","getCarPreview","TEXT_CONTENT_ENG","deepFreeze","Lamborghini","Ferrari","Koenigsegg","Object","keys","tag","PopupStandaloneModalComp","dataset","PopupStandaloneComp","closeArea","body","barContainer","bar","hex","c","test","split","slice","arr","Uint8Array","crypto","getRandomValues","join","max","Math","floor","random","min","object","obj","record","prop","isFrozen","isArray","v","n","cloneNode","Blob","k","setPrototypeOf","getPrototypeOf","network","idCounter","createdRXs","createdTXs","attachedHubs","occupiedNames","callRXFunc","headers","clonedData","func","handleClone","freezedData","handleFreeze","DBUS_ERRORS","UNEXPECTED_PREP_MODE","busId","hub","suffix","createInterfaceForHub","prefix","HUB_IS_ALREADY_ATTACHED","HUB_NAME_NOT_AUTHORIZED","HUB_NAME_IS_OCCUPIED","dbusInterface","DBusInterface","desc","genNewRX","topic","unplugRX","subHub","subSuffix","connect","regNumber","DBusTX","opts","head","DBusTXDataHeaders","DBusTXData","freezedTX","DBusRX","freezedRX","XENO_RX","TOPIC_IS_NOT_EXIST","TOPIC_HAS_NO_RXS","choosedRXs","includes","PREF_RXS_ARE_NOT_EXIST","manual","BAD_REQUEST","ROUTER","objAsRecord","arrowedGetNewTX","arrowedGetNewRX","arrowedPlugRX","arrowedUnplugRX","RXs","TXs","RXsPlugMap","txId","txRegNumber","txDesc","listCallback","firstPageNumber","currPageNumber","lastPageNumber","entriesCount","callbackIsCalled","btnNextSpan","btnPrevSpan","callCallback","lock","toggleBtnsDisabled","ceil","DBusMsgRoutingMsg","path","callback","getStateCallback","setStateCallback","options","agents","restrictions","currRoute","wantedRoute","host","values","arrow","cancelRouteChange","activatedCount","errors","onlyDBus","agentsArr","agent","baseUrl","resUrl","fullUrl","url","fetch","method","json","UNEXPECTED_RESULT","UNKNOWN_ERROR","clientName","REST_CLIENT_NAMES","limitStr","limitResponse","JSON","stringify","regCar","winnerCarData","WINNERS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","d","definition","key","o","defineProperty","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","appDiv","App"],"mappings":"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","file":"main.5ea71e4d26a5dc1216d4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"garage\":\"_21SC4SGf5mTamWfNdNRR\",\"garage__bg\":\"_2VnbeeG4HKnZfSWUedizHh\",\"garage__track-container\":\"_1rsPT6UvHnbHI-FUFvPaSe\",\"garage-bg\":\"-BA3r_cxZwAYkgGQVVZeo\",\"garage-bg__video\":\"_3byu86MCf3s6B7JQuetNAw\",\"garage-bg__car-ctl-btn\":\"_3upDU-ngLjybmFg4wiVvfl\",\"garage-bg__car-ctl-block-number\":\"_3dT19pzigDW1UKuPVLEguq\",\"garage-bg__car-ctl-block\":\"_2e0Ox8Joh0jw60ztR_rVt5\",\"garage-bg__cars-ctls-block\":\"wMVLCRcoluFnZleBHWXlm\",\"garage-bg__self-ctls-block\":\"_2VQVmkB2amN4PG9XCyFye9\",\"garage-bg__pager\":\"_2avafWgl8XDS2KLJswKq0H\",\"garage-bg__pager-span\":\"_3ktlpozBQghco3VMHLJBo1\",\"garage-bg__pager-btn\":\"_2QdjLaEnj3Balh89eZAya4\",\"synthwave-background\":\"_2pUKJme_w_0KTS_JoVNV5b\",\"synthwave-background_intro\":\"OfV0nuAQOL-MWGdjOHOsE\",\"move-grid\":\"_1MqERRNbzZtvdd9iE43L04\",\"synthwave-background_race-mode\":\"n1z9UH35nfilmkK2lmQvV\",\"race\":\"_375ItX4gjZY-ZT7KrEfBgG\"};","// extracted by mini-css-extract-plugin\nexport default {\"car-div\":\"_3pRKwGaRv59JcJqlApAnkk\",\"car-div__canvas\":\"rH6_OMXna8-zeemMHF11D\",\"car-div__wheel\":\"_3WNDl-LGGtViqzAfLLX4CB\",\"car-div__wheel_forward\":\"_3Rdh32fs7fi-95LcabV_Ed\",\"car-div__wheel_backward\":\"_3xptMXOOFn6YcMVYMigRMa\",\"car-div__explosion\":\"_3w8-mlW0m2zLABohqiDQ3e\",\"car-div_rollForward\":\"_3xWmq3Q2UpNiq2nICrGAIN\",\"car-div-anim\":\"_381V-1xCMVwSdGT0FxnQiO\",\"tire-anim\":\"_2Qs9DAZPIqZivw_0ON2Vot\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2uo9WXSTJyDD3jBlT_quev\",\"text-input\":\"_2YNdYEaErpy02Ske_bZONx\",\"color-input\":\"_3Ye7rbfoBnq4HZn4H-yDB8\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-controls\":\"_2b_svto1O0DGSO3_579_Xj\",\"btn-block\":\"_262VSHreYXfZUHLGeCJEvZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"track\":\"_2hDrLwwwZMiv2NrI-XZZqJ\",\"track_illuminated\":\"_3zXlLAoKpXJ_jlpauHLjHR\",\"track__controls-block\":\"_3pqcODoHFqX9rxmLKBnhD4\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_3TTTWNe5aoHesw4iV0YUGU\",\"header__logo\":\"_2idUQTZia_1M_0xkhMkXf8\",\"header-nav\":\"_7vejZGT8OzUejTiWyGs1P\",\"header-nav__item\":\"_1NYwlHRXmh2YGu63soBsjx\",\"header-nav__anchor\":\"_2n39qEg5Iz5Tym2Z0Jrjz9\",\"header-nav__anchor_active\":\"_2bRvd3RlExbbSpyXLuxSdS\",\"header-nav__svg\":\"_2FCXcgNK7Jgl9f3ZK-O56I\",\"header-nav__span\":\"_1NVrpdaSQLvqho4VNqQqit\",\"header-nav__list\":\"_1vy8OijKt-Cy7SGXyM4ek9\",\"header-nav__list_disabled\":\"_25SilQm6mkAlbl-WpajKBY\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"HVDfoBgyIQ4teF5EKFzcD\",\"table\":\"_3mJKnd573Tt4WspNl7gf1J\",\"table__car-preview-box\":\"_86kcZK8UgXIsvYD-wpDED\",\"table__can-be-sorted\":\"_3Xa74hpyx3g6XUuZ9fB9Cm\",\"table__sorted-elem\":\"rfPuVNCW0Sd4nzQGO8-R8\",\"table__sorted-elem_asc\":\"N6296gY2c5AFEX4KjE4I4\",\"table__sorted-elem_desc\":\"_37bMOUs2OF28ZqMubJCPnM\",\"pager\":\"_2q-noyJbwIpKOMhl7AWlq5\",\"pager-span\":\"_1O8erRuDz9RWa3C9tqnUm-\",\"pager-btn\":\"_3OktYstRgXgDE6zlpOM6LA\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup-modal\":\"_3KlZOyoPt2P4FT1Ofdi1oz\",\"popup-bg\":\"_1QGzfQYEHvrYonFptRzkG6\",\"popup-body\":\"_3zDyJwNy615xogiYvCl4vt\",\"popup-body-header\":\"_2DglTs5KJlA1QJriRI6bVZ\",\"popup-body-text\":\"_2oMxBL_Jv1KW3bHu3sVdaA\",\"popup-body__btn-close\":\"HV1Imp7Np5N8O5nUXwQsS\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1KBIW4BNGKHwQtRcKc6JIF\",\"hue-rotate\":\"_1t6lrd-wEBCB6ei-o9kDmk\",\"bar\":\"_2DWg3PnmWwM25SBd7sLJQK\",\"body\":\"_24wm1l_qZHsMTx2Oy-enF4\",\"text\":\"_1UFV3thankQQ1R2Ly1Zle2\"};","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"_2ljk-3_Qk7EjDct5a15qZP\",\"main-component\":\"_394erWdWCWrQmkYlaBZ1L5\",\"btn\":\"_3cliA46UjEIGfEKGRnJzCZ\",\"btn-1\":\"_7q7sGuJSjnM-fV8DfMtl5\",\"btn-4\":\"KE9Fso9VtLV8xX_x8IAiF\",\"btn-6\":\"_35BryCkuNmCUsRxmBw_Y1\",\"btn-9\":\"_9jiLaDmXVuzxrmO3P-9mb\",\"btn-13\":\"_1872fOtVBrHuR0iXYtVhRT\",\"btn-15\":\"TNTO3dtfSfS40M6g8U274\",\"glitched-text\":\"xB_2phBrodgB6jPUYYf8V\",\"glitch-animation-1\":\"_2N8U2GaQpCAdpuVv32CY9B\",\"glitch-animation-2\":\"_1g8DjVAkpXimf-Ld9-LLk8\"};","import { BaseComp } from './lib/components/base-comp/base-comp';\nimport { SimpleRouterAgent } from './lib/services/simple-router/simple-router-agent';\nimport { SimpleRouter } from './lib/services/simple-router/simple-router';\nimport { DBus } from './lib/services/dbus/dbus';\nimport { DBusMsgRouteIsChangedMsg } from './lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { DBusTopics } from './lib/services/dbus/defs/dbus-topics.def';\nimport { DBUS_COMMON_RESPONSES } from './lib/services/dbus/defs/dbus-common-responses.def';\nimport { HeaderComponent } from './components/header/header';\n\nimport sharedStyles from './styles.scss';\nimport { DBusTXData } from './lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { GarageComp } from './components/garage/garage';\nimport {\n  DBusHub,\n  isDBusHub,\n  DBusInterface,\n} from './lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './lib/services/dbus/defs/dbus-hub-names.def';\nimport { WinnersComp } from './components/winners/winners';\nimport { REST_CLIENT_ERROR } from './services/rest-clients/rest-clients-errors.def';\nimport { isNotifiable } from './lib/interfaces/notifiable';\nimport { PopupStandaloneModal404Comp } from './lib/components/popups/standalone/modal/404/popup-404';\nimport { REST_CLIENT_GARAGE } from './services/rest-clients/client-garage/rest-client-garage';\n\nexport class App implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.APP;\n\n  protected loadedMainComponents: Record<string, BaseComp> = {};\n\n  protected currMainComponent: BaseComp | undefined;\n\n  protected defaultRouterAgent = new SimpleRouterAgent('hash', '', () =>\n    this.loadMainComponent('default'),\n  );\n\n  protected router = new SimpleRouter({\n    mode: '#',\n    defaultRoot: '',\n    defaultAgent: this.defaultRouterAgent,\n  });\n\n  protected mainlineDBus = new DBus();\n\n  // protected garageRestClient = new RestClientGarage('http://127.0.0.1:3000');\n\n  constructor(private readonly rootElement: HTMLElement) {\n    window.addEventListener('error', e => console.log(e));\n    window.addEventListener('unhandledrejection', e => {\n      e.preventDefault();\n      e.promise.catch((error: Error) => {\n        if (\n          error.message in REST_CLIENT_ERROR &&\n          error.message === REST_CLIENT_ERROR.CONNECTION_REFUSED\n        ) {\n          const popup = new PopupStandaloneModal404Comp();\n          popup.setText(`No connection, check if server is started!`).show();\n          const retry = async () => {\n            try {\n              await REST_CLIENT_GARAGE.getCars();\n              popup.hide();\n              this.router.activateWantedAgents();\n            } catch {\n              await new Promise(res => setTimeout(res, 1000));\n              retry();\n            }\n          };\n          retry();\n        }\n      });\n    });\n\n    this.rootElement.classList.add(sharedStyles.app);\n\n    // asyncFunc();\n    const header = new HeaderComponent(DBUS_HUB_NAMES.HEADER);\n    this.rootElement.append(header.rootElement);\n\n    // this.garage.rootElement.classList.add(sharedStyles['main-component']);\n    // this.rootElement.append(this.garage.rootElement);\n\n    this.mainlineDBus.attachHub(header);\n    this.mainlineDBus.attachHub(this);\n    this.mainlineDBus.attachHub(this.router);\n\n    this.router.activateWantedAgents();\n  }\n\n  connect(intrfce: DBusInterface) {\n    const routeRX = intrfce.getNewRX(this.watchRouterMsgs);\n    intrfce.plugRX(DBusTopics.ROUTING, routeRX);\n  }\n\n  private watchRouterMsgs = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      // TODO: Rework with enum!?\n      this.loadMainComponent(msg.newRoute);\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private loadMainComponent(name: string): void {\n    if (!(name in this.loadedMainComponents)) {\n      switch (name) {\n        case '#garage':\n          this.loadedMainComponents[`${name}`] = new GarageComp();\n          break;\n        case '#winners':\n          this.loadedMainComponents[`${name}`] = new WinnersComp();\n          break;\n        default:\n          window.location.hash = '#garage';\n          break;\n      }\n    }\n    const newComponent = this.loadedMainComponents[`${name}`];\n\n    if (newComponent) {\n      if (this.currMainComponent) {\n        this.currMainComponent.rootElement.remove();\n      }\n\n      this.currMainComponent = newComponent;\n      newComponent.rootElement.classList.add(sharedStyles['main-component']);\n      this.rootElement.append(newComponent.rootElement);\n\n      if (isDBusHub(this.currMainComponent)) {\n        try {\n          this.mainlineDBus.attachHub(this.currMainComponent);\n        } catch {\n          // no need to catch\n        }\n      }\n      if (isNotifiable(this.currMainComponent)) {\n        console.log('notify');\n        this.currMainComponent.notify(null);\n      }\n    }\n  }\n}\n","export enum CarActions {\n  CREATED,\n  SELECTED,\n  REMOVED,\n  UPDATED,\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { CarActions } from '../../../car-actions.def';\n\nexport class DBusMsgCarActionMsg extends DBusMsg {\n  constructor(\n    readonly action: CarActions,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.CAR_ACTION, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionCreatedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.CREATED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { GarageServicemanContract } from '../../../garage-serviceman-contract.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionRemovedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly nullifiedContract: GarageServicemanContract,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.REMOVED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionSelectedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly notifyChanges?: (car: RegCarData) => unknown,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.SELECTED, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageRaceMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgRaceRequestMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { RaceStatusesList } from '../../../race-statuses.def';\nimport { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgGarageRaceStatusMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly status: RaceStatusesList,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageResetMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageResetMsg } from './garage-reset-msg.def';\n\nexport class DBusMsgGarageResetReqMsg extends DBusMsgGarageResetMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { UnregCarData } from '../../definitions/car-data.def';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageManagersTeam } from './garage-servant';\nimport { CarComp } from './subcomps/car/car';\nimport { TrackComp } from './subcomps/track/track';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { DBusMsgCarActionCreatedMsg } from './dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport { DBusMsgRaceRequestMsg } from './dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport { DBusMsgGarageResetReqMsg } from './dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Pager } from '../../lib/services/pager/pager';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\nimport { DBusMsgGenerateCarsMsg } from './subcomps/main-controls/dbus-msgs/generate-cars-msg.def';\n\ntype TracksGeometry = {\n  trackHeights: number[];\n  displacements: number[];\n  paddingBase: number;\n  paddingAddShift: number;\n};\n\nexport class GarageComponentControllerAkaDirector implements DBusHub {\n  static readonly DISPLACEMENT_FIX = -20;\n\n  readonly hubName = DBUS_HUB_NAMES.GARAGE_CONTROLLER;\n\n  protected txs = new Set<DBusTX>();\n\n  private garageManagersTeam: GarageManagersTeam;\n\n  private pager: Pager;\n\n  private entriesPerPage = 7;\n\n  private pagerContainer = document.createElement('div');\n\n  private readonly carImgRatio = 3.78;\n\n  private readonly scaleFactor = 0.95;\n\n  constructor(\n    private tracksContainer: HTMLElement,\n    private carCtlsBlock: HTMLElement,\n  ) {\n    this.garageManagersTeam = new GarageManagersTeam(\n      tracksContainer,\n      carCtlsBlock,\n    );\n\n    this.pagerContainer.classList.add(styles['garage-bg__pager']);\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n\n    const btnNextPage = this.pager.getBtnNextPage();\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n\n    const pagerInfo = this.pager.getPagerSpan();\n    pagerInfo.classList.add(styles['garage-bg__pager-span']);\n\n    this.pagerContainer.append(btnPrevPage, btnNextPage, pagerInfo);\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.reloadData(dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  async startWorking(): Promise<boolean> {\n    try {\n      await this.reloadData('no');\n      window.addEventListener('resize', () => this.redraw());\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  async connect(int: DBusInterface) {\n    this.txs.add(int.getNewTX('send requests to REST Garage client'));\n    this.garageManagersTeam.autoConnect(int);\n\n    const carActionsMsgsRX = int.getNewRX(\n      this.carActionsRXFunc,\n      'monitor cars removes',\n    );\n    int.plugRX(DBusTopics.CAR_ACTION, carActionsMsgsRX);\n\n    const raceMsgsRX = int.getNewRX(this.racingRXFunc, 'handle race requsets');\n    int.plugRX(DBusTopics.GARAGE, raceMsgsRX);\n\n    const generatorMsgsRX = int.getNewRX(this.generatorRXFunc);\n    int.plugRX(DBusTopics.GENERATE, generatorMsgsRX);\n  }\n\n  private generatorRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgGenerateCarsMsg &&\n      data.msg.status === 'end'\n    ) {\n      const contracts = this.garageManagersTeam.getContracts();\n\n      if (contracts.size < 7) this.reloadData('no');\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private racingRXFunc = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRaceRequestMsg) {\n      this.pager.toogleLock(true);\n      await this.performRace();\n      this.pager.toogleLock(false);\n      return true;\n    }\n    if (data.msg instanceof DBusMsgGarageResetReqMsg) {\n      return this.resetState();\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private async resetState() {\n    const reseted = await this.garageManagersTeam.resetState();\n    return reseted;\n  }\n\n  private async performRace() {\n    await this.garageManagersTeam.performRace();\n  }\n\n  private carActionsRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgCarActionRemovedMsg ||\n      data.msg instanceof DBusMsgCarActionCreatedMsg\n    ) {\n      try {\n        this.reloadData('no');\n      } catch {\n        this.pager.tryChangePage('prev');\n      }\n    }\n\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private reloadData(dir: 'prev' | 'next' | 'no') {\n    return new Promise<boolean>((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : dir === 'prev'\n          ? this.pager.getCurrPageNumber() - 1\n          : dir === 'no'\n          ? this.pager.getCurrPageNumber()\n          : 1\n        : 1;\n      REST_CLIENT_GARAGE.getCars(page, this.pager.getEntriesPerPage()).then(\n        async response => {\n          const { limit, cars } = response;\n          this.pager.setEntriesCount(Number.parseInt(limit, 10));\n          if (cars.length === 0 && dir !== 'no') {\n            rej();\n            return;\n          }\n          await this.garageManagersTeam.nullifyContracts();\n          const newContracts: GarageServicemanContract[] = [];\n\n          cars.forEach((car, index) => {\n            const track = new TrackComp();\n            const carComp = new CarComp(car, index + 1);\n            track.placeCar(carComp);\n            newContracts.push({ track, car: carComp });\n          });\n\n          this.garageManagersTeam.addContracts(...newContracts);\n          this.garageManagersTeam.resetState();\n          this.redraw();\n          res(true);\n        },\n      );\n    });\n  }\n\n  private redraw() {\n    this.clearDOM();\n    const tracks = [...this.garageManagersTeam.getContracts()].map(\n      contract => contract.track,\n    );\n\n    const geometry = this.calcGeometry();\n    this.setStylesForTracks(geometry);\n\n    this.drawTracks();\n    this.drawCarsCtls();\n  }\n\n  private clearDOM() {\n    while (this.tracksContainer.firstChild)\n      this.tracksContainer.firstChild.remove();\n    while (this.carCtlsBlock.firstChild) this.carCtlsBlock.firstChild.remove();\n  }\n\n  private calcGeometry(): TracksGeometry {\n    const style = window.getComputedStyle(this.tracksContainer);\n    const containerHeight =\n      Number.parseFloat(style.height) -\n      Number.parseFloat(style.paddingBottom) -\n      Number.parseFloat(style.paddingTop);\n    const firstAutoWidth = window.innerWidth * 0.2;\n    const firstAutoHeight = firstAutoWidth / this.carImgRatio;\n    const heights: number[] = [];\n    let heightSum = 0;\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      const factor = this.scaleFactor ** index;\n      const carTrackHeight = firstAutoHeight * factor;\n      heightSum += carTrackHeight;\n      heights.push(carTrackHeight);\n    });\n\n    const excessHeight = heightSum - containerHeight;\n    const heightsReversed = heights.sort((a, b) => a - b);\n    const displacementBase =\n      excessHeight > 0\n        ? excessHeight / this.garageManagersTeam.getContracts().size - 2\n        : 0;\n\n    const displacements: number[] = [];\n    const midIndex = (contracts.length - 1) / 2;\n\n    contracts.forEach((contract, index) => {\n      const diff = index - midIndex;\n      const displacement =\n        displacementBase * -diff +\n        GarageComponentControllerAkaDirector.DISPLACEMENT_FIX;\n      displacements.push(displacement);\n    });\n\n    const paddingBase = (heightsReversed[0] as number) * this.carImgRatio;\n    const paddingAddShift = (20 * window.innerWidth) / 1920; // 20 - is good looking on 1920\n\n    return {\n      trackHeights: heightsReversed,\n      displacements,\n      paddingBase,\n      paddingAddShift,\n    };\n  }\n\n  private setStylesForTracks(geometry: TracksGeometry) {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      contract.track.rootElement.style.setProperty(\n        'height',\n        `${geometry.trackHeights[index]}px`,\n      );\n\n      // if (index !== 0) {\n      contract.track.rootElement.style.setProperty(\n        'top',\n        `${geometry.displacements[index]}px`,\n      );\n      // }\n\n      contract.track.rootElement.style.setProperty('z-index', `${index + 1}`);\n\n      contract.track.rootElement.style.setProperty(\n        '--padding-w',\n        `${\n          (geometry.trackHeights[\n            geometry.trackHeights.length - 1 - index\n          ] as number) *\n            this.carImgRatio -\n          geometry.paddingBase +\n          geometry.paddingAddShift * (contracts.length - 1 - index)\n        }px`,\n      );\n    });\n  }\n\n  private drawTracks() {\n    this.tracksContainer.append(\n      this.pagerContainer,\n      ...[...this.garageManagersTeam.getContracts()].map(\n        contract => contract.track.rootElement,\n      ),\n    );\n  }\n\n  private drawCarsCtls() {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n    const ctlBlocks = contracts.map((contract, index) => {\n      const block = this.createCarCtlBlock(contract.car, index + 1);\n      this.connectCtlAndTrack(block, contract.track);\n      return block;\n    });\n    this.carCtlsBlock.append(...ctlBlocks);\n  }\n\n  private createCarCtlBlock = (car: CarComp, index: number): HTMLElement => {\n    const btns = [car.btnSelect, car.btnStart, car.btnReset, car.btnRm];\n\n    car.btnStart.classList.add(sharedStyles['btn-15']);\n    car.btnSelect.classList.add(sharedStyles['btn-13']);\n    car.btnReset.classList.add(sharedStyles['btn-9']);\n    car.btnRm.classList.add(sharedStyles['btn-4']);\n\n    btns.forEach(btn => {\n      btn.classList.add(sharedStyles.btn, styles['garage-bg__car-ctl-btn']);\n    });\n\n    const numberSpan = document.createElement('span');\n    numberSpan.classList.add(styles['garage-bg__car-ctl-block-number']);\n    numberSpan.textContent = index.toString();\n    const container = document.createElement('div');\n    container.classList.add(styles['garage-bg__car-ctl-block']);\n    container.append(numberSpan, ...btns);\n    return container;\n  };\n\n  private connectCtlAndTrack = (ctlElem: HTMLElement, track: TrackComp) => {\n    ctlElem.addEventListener(\n      'mouseover',\n      () => track.illuminateSelf(true),\n      true,\n    );\n    ctlElem.addEventListener(\n      'mouseout',\n      () => track.illuminateSelf(false),\n      true,\n    );\n  };\n}\n","import { RegCarData } from '../../definitions/car-data.def';\nimport { PopupStandaloneModal404Comp } from '../../lib/components/popups/standalone/modal/404/popup-404';\nimport { PopupStandaloneModalComp } from '../../lib/components/popups/standalone/modal/popup-standalone-modal';\nimport { PopupStandaloneModalProgressComp } from '../../lib/components/popups/standalone/modal/progress/popup-progress';\nimport { genUniqId } from '../../lib/generators/generators';\nimport {\n  EngineResponse,\n  REST_CLIENT_ENGINE,\n} from '../../services/rest-clients/client-engine/rest-client-engine';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { CarComp } from './subcomps/car/car';\n\nexport enum GarageDriverCommands {\n  START_DRIVING,\n  STOP_DRIVING,\n}\n\nexport class GarageDriver {\n  private contract: GarageServicemanContract | undefined;\n\n  private currDriveId: string | undefined;\n\n  private drivePromise: Promise<unknown> | undefined;\n\n  private ignitionPromise: Promise<unknown> | undefined;\n\n  private lastStart: number | undefined;\n\n  private lastTimeInMs: number | undefined;\n\n  public isFree(): boolean {\n    if (!this.contract) return true;\n    return false;\n  }\n\n  putBehindTheWheel(contract: GarageServicemanContract): void {\n    if (this.contract) throw new Error('ALREADY IN CAR');\n    this.contract = contract;\n  }\n\n  async getOutOfTheCar() {\n    this.contract = undefined;\n  }\n\n  async performDrivingProtocol(flags?: Record<string, unknown>) {\n    const newPromise = new Promise<{\n      driveParams: EngineResponse;\n      drivePromise: Promise<number | false>;\n    }>((res, rej) => {\n      const thisDriveId = genUniqId();\n      this.currDriveId = thisDriveId;\n      this.ignitionPromise = this.TurnOnTheIgnition()\n        .then(driveParams => {\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          console.log(driveParams);\n          const drivePromise = this.drive(driveParams, thisDriveId, flags);\n          res({\n            driveParams,\n            drivePromise,\n          });\n        })\n        .catch((error: Error) => {\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          else rej(error);\n        });\n    });\n    return newPromise;\n  }\n\n  private async TurnOnTheIgnition() {\n    if (!this.contract) throw new Error('NOT_BEHIND_THE_WHEEL');\n    if (this.drivePromise) await this.drivePromise;\n    const params = await REST_CLIENT_ENGINE.toggleEngine(\n      this.contract.car.currCar.id,\n      'started',\n    );\n    console.log('ENGINE STARTED');\n    return params;\n  }\n\n  // !!! If animation fails, this promise never resolves!\n  async returnToStart() {\n    this.currDriveId = undefined;\n    if (this.contract) {\n      if (this.ignitionPromise) await this.ignitionPromise;\n      if (this.drivePromise) {\n        await this.stopCar(true, false);\n        await this.contract.car.rollBack(this.drivePromise);\n        const msgBlock = document.createElement('div');\n        msgBlock.style.setProperty('height', '100%');\n        msgBlock.style.setProperty('width', '40%');\n        msgBlock.style.setProperty('position', 'absolute');\n        msgBlock.style.setProperty('right', '0px');\n        msgBlock.style.setProperty('top', '100%');\n        msgBlock.style.setProperty('transform', 'translate(-40%, -120%)');\n        this.contract.track.rootElement.append(msgBlock);\n        const popup = new PopupStandaloneModalProgressComp();\n\n        popup\n          .setText(\n            `I can't let the engine start again until\n          the server finishes its business, read the notes, please.`,\n          )\n          .show(msgBlock);\n        const interval = this.updateProgress(popup);\n        await this.contract.car.playAwaitingAnim(this.drivePromise);\n        if (interval) clearTimeout(interval);\n        popup.hide();\n        msgBlock.remove();\n      } else {\n        await this.stopCar(false, false);\n        await this.contract.car.rollBack();\n      }\n    }\n    return true;\n  }\n\n  private updateProgress(\n    popup: PopupStandaloneModalProgressComp,\n  ): NodeJS.Timeout {\n    const interval = setInterval(() => {\n      if (this.lastTimeInMs && this.lastStart) {\n        const progress =\n          ((Date.now() - this.lastStart) / this.lastTimeInMs) * 100;\n        console.log(progress);\n        popup.setProgress(progress);\n      } else clearInterval(interval);\n    }, 500);\n    return interval;\n  }\n\n  private async drive(\n    driveParams: EngineResponse,\n    driveId: string,\n    flags?: Record<string, unknown>,\n  ): Promise<false | number> {\n    return new Promise<false | number>((res, rej) => {\n      if (this.contract) {\n        const { contract } = this;\n        const time = GarageDriver.calculateDriveTime(driveParams);\n        this.lastStart = Date.now();\n        this.lastTimeInMs = time * 1000;\n        const start = Date.now();\n        this.drivePromise = REST_CLIENT_ENGINE.enterDriveMode(\n          contract.car.currCar.id,\n        ).then(success => {\n          if (\n            !(contract === this.contract) ||\n            !(driveId === this.currDriveId)\n          ) {\n            rej(new Error('interrupted'));\n          } else if (success) {\n            res(time);\n            console.log('stop car finish');\n            this.stopCar(true, false, flags);\n          } else {\n            console.log('stop car broken');\n            this.stopCar(true, true, flags);\n            res(false);\n          }\n          console.log(`time from start: ${Date.now() - start}`);\n        });\n        contract.car.rollForward(time).catch(() => {\n          res(false);\n        });\n      } else rej(new Error('No car'));\n    });\n  }\n\n  private async stopCar(\n    onlyAnim = false,\n    broken = false,\n    flags?: Record<string, unknown>,\n  ) {\n    if (this.contract) {\n      if (!broken && !onlyAnim) {\n        const response = await REST_CLIENT_ENGINE.toggleEngine(\n          this.contract.car.currCar.id,\n          'stopped',\n        );\n        console.log('stopped by server', response);\n      }\n      this.contract.car.stop(broken, flags);\n      return true;\n    }\n    throw new Error('No car');\n  }\n\n  private static calculateDriveTime(params: EngineResponse) {\n    const time = params.distance / 1000 / params.velocity; /// !!! distance units???\n    return time;\n  }\n}\n","import { RegCarData, WinnerCarData } from '../../definitions/car-data.def';\nimport { DBusInterface } from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgCarActionSelectedMsg } from './dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { GarageDriver, GarageDriverCommands } from './garage-driver';\nimport { genUniqId } from '../../lib/generators/generators';\n\nimport styles from './garage.scss';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\nimport { DBusMsgGarageRaceStatusMsg } from './dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { RaceStatusesList } from './race-statuses.def';\n\ntype RaceData = {\n  raceId: string;\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n  participantsCount: number;\n  flags: Record<string, unknown>;\n  stratedCount: number;\n};\n\ntype RaceResults = {\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n};\nexport class GarageManagersTeam implements DBusPort {\n  protected txs = new Set<DBusTX>();\n\n  protected contracts = new Set<GarageServicemanContract>();\n\n  protected freeDrivers = new Set<GarageDriver>();\n\n  protected busyDrivers = new Map<GarageServicemanContract, GarageDriver>();\n\n  protected currRaceId: string | undefined;\n\n  constructor(\n    private readonly tracksContainer: HTMLElement,\n    private readonly carCtlsBlock: HTMLElement,\n  ) {\n    this.carCtlsBlock.addEventListener('click', this.carCtlsClickListener);\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('garage serviceman');\n    this.txs.add(tx);\n  }\n\n  public getContracts() {\n    return this.contracts;\n  }\n\n  async nullifyContracts(contracts?: GarageServicemanContract[]) {\n    if (contracts) {\n      this.tryFreeDrivers(...contracts);\n      contracts.forEach(contract => {\n        this.contracts.delete(contract);\n      });\n    } else {\n      this.tryFreeDrivers(...this.contracts);\n      this.contracts.clear();\n    }\n  }\n\n  addContracts(...—Åontracts: GarageServicemanContract[]) {\n    —Åontracts.forEach(newContract => this.contracts.add(newContract));\n  }\n\n  private carCtlsClickListener = (e: Event) => {\n    if (e.target instanceof HTMLElement) {\n      const elem = e.target;\n      let btn: HTMLButtonElement | undefined;\n\n      if (elem instanceof HTMLButtonElement) btn = elem;\n      else if (elem.parentElement instanceof HTMLButtonElement)\n        btn = elem.parentElement;\n\n      if (btn && btn.disabled !== true) {\n        this.contracts.forEach(contract => {\n          if (this.currRaceId) return;\n          if (btn === contract.car.btnSelect) {\n            this.handleSelection(contract);\n            return;\n          }\n          if (btn === contract.car.btnRm) {\n            contract.car.btnRm.disabled = true;\n            this.handleRemoving(contract);\n            return;\n          }\n          if (btn === contract.car.btnStart) {\n            contract.car.btnStart.disabled = true;\n            this.startDriving(contract);\n            return;\n          }\n          if (btn === contract.car.btnReset) {\n            contract.car.btnReset.disabled = true;\n            this.handleRestoreState(contract);\n          }\n        });\n      }\n    }\n  };\n\n  async resetState(prepareForRace?: boolean) {\n    if (!prepareForRace) this.currRaceId = undefined;\n\n    this.tracksContainer.classList.remove(\n      styles['synthwave-background_race-mode'],\n    );\n    await this.rollbackCars();\n\n    if (!prepareForRace) {\n      this.broadcastRaceStatus('READY_TO_GO');\n    }\n  }\n\n  private async handleRestoreState(contract: GarageServicemanContract) {\n    const driver = this.busyDrivers.get(contract);\n    if (driver) {\n      await driver.returnToStart();\n    }\n  }\n\n  private async startDriving(\n    contract: GarageServicemanContract,\n    flags?: Record<string, unknown>,\n  ) {\n    let choosedDriver = this.busyDrivers.get(contract);\n\n    if (!choosedDriver) {\n      // !!! excess check?\n      choosedDriver = [...this.freeDrivers].find(driver => driver.isFree());\n\n      if (choosedDriver) {\n        this.freeDrivers.delete(choosedDriver);\n      } else {\n        choosedDriver = new GarageDriver();\n      }\n\n      this.busyDrivers.set(contract, choosedDriver);\n\n      choosedDriver.putBehindTheWheel(contract);\n    }\n\n    return choosedDriver.performDrivingProtocol(flags);\n  }\n\n  private handleRemoving(contract: GarageServicemanContract) {\n    REST_CLIENT_GARAGE.deleteCar(contract.car.currCar.id).then(async () => {\n      await REST_CLIENT_WINNERS.deleteWinner(contract.car.currCar.id).catch(\n        () => {},\n      );\n      this.tryFreeDrivers(contract);\n      this.contracts.delete(contract);\n      const msg = new DBusMsgCarActionRemovedMsg(\n        contract.car.currCar,\n        contract,\n      );\n      this.txs.forEach(tx => {\n        tx.transmit({\n          msg,\n          prepMode: DBusTXPrepModes.freeze,\n          waitMode: DBusTXWaitModes.nowait,\n        });\n      });\n    });\n  }\n\n  private handleSelection(contract: GarageServicemanContract) {\n    const msg = new DBusMsgCarActionSelectedMsg(\n      contract.car.currCar,\n      this.genSelectCallback(contract),\n    );\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  private async rollbackCars() {\n    this.tracksContainer.style.setProperty('--translate-x', '0px');\n    // rollback cars\n    const rollbacks: Promise<unknown>[] = [];\n    this.busyDrivers.forEach(driver => {\n      rollbacks.push(driver.returnToStart());\n    });\n    await Promise.all(rollbacks);\n  }\n\n  async performRace() {\n    // prepare\n    const thisRaceId = genUniqId();\n    this.currRaceId = thisRaceId;\n    await this.resetState(true);\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    // process race\n    const raceData: RaceData = {\n      raceId: thisRaceId,\n      arrivedByOrder: [],\n      notArrived: [],\n      participantsCount: this.contracts.size,\n      flags: {\n        isFinishVisible: false,\n      },\n      stratedCount: 0,\n    };\n    this.broadcastRaceStatus('IN_PROCESS');\n    await this.processRace(raceData)\n      .catch((error: Error) => {\n        if (!(thisRaceId !== this.currRaceId)) throw error;\n      })\n      .finally(() => {\n        this.tracksContainer.classList.remove(\n          styles['synthwave-background_race-mode'],\n        );\n      });\n\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    console.log(raceData);\n\n    this.broadcastRaceStatus('NEED_RESET');\n    // TODO: Do something else?\n  }\n\n  private broadcastRaceStatus(status: RaceStatusesList) {\n    const msg = new DBusMsgGarageRaceStatusMsg(status);\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  // false if race was interrupted\n  private processRace(raceData: RaceData) {\n    return new Promise<RaceData | false>(res => {\n      this.contracts.forEach(contract => {\n        this.startDriving(contract, raceData.flags).then(response => {\n          if (raceData.raceId !== this.currRaceId) {\n            res(false);\n            return;\n          }\n\n          if (raceData.stratedCount === raceData.participantsCount - 1) {\n            this.tracksContainer.classList.add(\n              styles['synthwave-background_race-mode'],\n            );\n          } else raceData.stratedCount++;\n\n          if (!(response instanceof Error)) {\n            response.drivePromise\n              .then(result =>\n                this.handleDriveResult(raceData, contract, result),\n              )\n              .catch((error: Error) => {\n                if (error.message === 'interrupted') res(false);\n                raceData.notArrived.push(contract);\n              })\n              .finally(() => {\n                if (\n                  raceData.arrivedByOrder.length +\n                    raceData.notArrived.length ===\n                  raceData.participantsCount\n                )\n                  res(raceData);\n              });\n          } else {\n            throw response;\n          }\n        });\n      });\n    });\n  }\n\n  private handleDriveResult(\n    raceData: RaceData,\n    contract: GarageServicemanContract,\n    result: number | false,\n  ) {\n    if (raceData.raceId !== this.currRaceId) return;\n    if (result !== false) {\n      if (raceData.arrivedByOrder.length === 0) {\n        raceData.flags.isFinishVisible = true;\n        this.tracksContainer.classList.remove(\n          styles['synthwave-background_race-mode'],\n        );\n        this.handleWinner(contract, result);\n      }\n      raceData.arrivedByOrder.push(contract);\n    }\n  }\n\n  private handleWinner = (contract: GarageServicemanContract, time: number) => {\n    const winnerCar = contract.car.currCar;\n    REST_CLIENT_WINNERS.getWinner(winnerCar.id)\n      .then(winnerRecord => {\n        const updatedWinnerData: WinnerCarData = {\n          id: winnerRecord.id,\n          wins: winnerRecord.wins + 1,\n          time:\n            time < winnerRecord.time\n              ? Number.parseFloat(time.toFixed(2))\n              : winnerRecord.time,\n        };\n        REST_CLIENT_WINNERS.updateWinner(updatedWinnerData);\n      })\n      .catch((error: Error) => {\n        if (error.message === REST_CLIENT_ERROR.NOT_FOUND) {\n          const newWinnerData: WinnerCarData = {\n            id: winnerCar.id,\n            wins: 1,\n            time: Number.parseFloat(time.toFixed(2)),\n          };\n          REST_CLIENT_WINNERS.createWinner(newWinnerData);\n        }\n      });\n  };\n\n  private tryFreeDrivers(...contracts: GarageServicemanContract[]) {\n    contracts.forEach(contract => {\n      const driver = this.busyDrivers.get(contract);\n      if (driver) {\n        driver.getOutOfTheCar().then(() => {\n          this.busyDrivers.delete(contract);\n          this.freeDrivers.add(driver);\n        });\n      }\n    });\n  }\n\n  private genSelectCallback(contract: GarageServicemanContract) {\n    return (car: RegCarData) => {\n      if (!this.contracts.has(contract)) return;\n      contract.car.updateData(car);\n    };\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { GarageComponentControllerAkaDirector } from './garage-controller';\nimport { MainControlsComp } from './subcomps/main-controls/main-controls';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\nimport { PopupStandaloneModalProgressComp } from '../../lib/components/popups/standalone/modal/progress/popup-progress';\n\nexport class GarageComp extends BaseComp implements DBusHub, Notifiable {\n  readonly hubName = DBUS_HUB_NAMES.GARAGE;\n\n  private controller: GarageComponentControllerAkaDirector;\n\n  private isControllerWorking = false;\n\n  private mainControlsComp = new MainControlsComp();\n\n  private carsCtlsBlock = document.createElement('div');\n\n  private bgVideo = document.createElement('video');\n\n  private popup = new PopupStandaloneModalProgressComp();\n\n  constructor() {\n    super('section');\n    this.popup.setText('Loading...').setProgress(1).show();\n    this._rootElement.classList.add(styles.garage);\n\n    const tracksContainer = document.createElement('div');\n    tracksContainer.classList.add(\n      styles['garage__track-container'],\n      styles['synthwave-background'],\n    );\n\n    const selfCtlsBlock = document.createElement('div');\n    selfCtlsBlock.classList.add(styles['garage-bg__self-ctls-block']);\n    selfCtlsBlock.append(this.mainControlsComp.rootElement);\n\n    const bg = document.createElement('div');\n    bg.classList.add(styles.garage__bg, styles['garage-bg']);\n\n    this.bgVideo.classList.add(styles['garage-bg__video']);\n\n    this.bgVideo.controls = false;\n    this.bgVideo.loop = true;\n    this.bgVideo.defaultMuted = true;\n    this.bgVideo.muted = true;\n    this.bgVideo.autoplay = true;\n    this.bgVideo.addEventListener('progress', this.bgVideoProgressListener);\n    this.bgVideo.addEventListener(\n      'canplaythrough',\n      this.bgVideoCanPlayListener,\n    );\n    this.bgVideo.src = './assets/videos/bg/cyberpunk2077-garage.mp4';\n\n    bg.append(this.bgVideo, selfCtlsBlock);\n    this.controller = new GarageComponentControllerAkaDirector(\n      tracksContainer,\n      this.carsCtlsBlock,\n    );\n    this.carsCtlsBlock.classList.add(styles['garage-bg__cars-ctls-block']);\n    this._rootElement.append(bg, tracksContainer, this.carsCtlsBlock);\n  }\n\n  private bgVideoProgressListener = () => {\n    if (this.bgVideo.buffered.length > 0) {\n      const progress =\n        (this.bgVideo.buffered.end(0) / this.bgVideo.duration) * 100;\n      this.popup.setProgress(progress);\n    }\n  };\n\n  private bgVideoCanPlayListener = async () => {\n    this.bgVideo.removeEventListener(\n      'canplaythrough',\n      this.bgVideoCanPlayListener,\n    );\n    this.bgVideo.removeEventListener('progress', this.bgVideoProgressListener);\n    this.isControllerWorking = await this.controller.startWorking();\n    this.popup.setProgress(100).reset().hide();\n  };\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.controller);\n    int.attachSubHub(this.mainControlsComp);\n  }\n\n  notify = async () => {\n    try {\n      this.bgVideo.play();\n    } catch {\n      // do nothing...\n    }\n    if (!this.isControllerWorking) {\n      this.popup.setProgress(1).setText('Loading...').show();\n      this.isControllerWorking = await this.controller.startWorking();\n      this.popup.reset().hide();\n    }\n  };\n}\n","import { RegCarData, UnregCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { hexToRgb } from '../../../../lib/convertors/colors';\nimport { transitionPromise } from '../../../../lib/gui/animation';\nimport { OBJ_PROCESSOR } from '../../../../lib/processors/obj-processor';\nimport styles from './car.scss';\n\nexport class CarComp extends BaseComp {\n  static readonly TIMING_FUNCTION = 'cubic-bezier(.72,.2,.54,.77)';\n\n  static readonly CAR_BODY_IMG_SRC = './assets/imgs/cars/body.gif';\n\n  static readonly CAR_WHEEL_IMG_SRC = './assets/imgs/cars/tire back.gif';\n\n  static readonly CAR_EXPLOSION_IMG_DATA = {\n    BASE_URL: './assets/imgs/cars/explosion/',\n    EXTENSION: '.png',\n    FRAMES_COUNT: 9,\n    FRAME_TIME_MS: 200,\n  };\n\n  protected canvas = document.createElement('canvas');\n\n  protected tireBack = document.createElement('img');\n\n  private btnSelect$ = document.createElement('button');\n\n  private btnRm$ = document.createElement('button');\n\n  private _spanCarName = document.createElement('span');\n\n  private btnStart$ = document.createElement('button');\n\n  private btnReset$ = document.createElement('button');\n\n  private startDrivingTime: number | undefined;\n\n  private destinationCoordinate: number | undefined;\n\n  private currAnimation: Animation | undefined;\n\n  private currOutOfSceneAnim: Animation | undefined;\n\n  private isReseted = true;\n\n  constructor(private _currCar: RegCarData, index?: number) {\n    super('div');\n\n    this._rootElement.classList.add(styles['car-div']);\n    this.canvas.classList.add(styles['car-div__canvas']);\n    this._rootElement.append(this.canvas);\n\n    const selectSpan = document.createElement('span');\n    const rmSpan = document.createElement('span');\n    const startSpan = document.createElement('span');\n    const resetSpan = document.createElement('span');\n\n    selectSpan.textContent = 'select';\n    rmSpan.textContent = 'remove';\n    startSpan.textContent = 'start!';\n    resetSpan.textContent = 'reset';\n\n    this.btnSelect$.append(selectSpan);\n    this.btnRm$.append(rmSpan);\n    this.btnReset$.append(resetSpan);\n    this.btnStart$.append(startSpan);\n\n    this.btnReset$.disabled = true;\n\n    this._spanCarName.textContent = `${index}: ${_currCar.name}`;\n\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    CarComp.drawWheels(this._rootElement);\n  }\n\n  static drawWheels(rootElem: HTMLElement) {\n    const wheelImg = new Image();\n    wheelImg.src = CarComp.CAR_WHEEL_IMG_SRC;\n    wheelImg.onload = () => {\n      wheelImg.classList.add(styles['car-div__wheel']);\n      const backwardWheelImg = OBJ_PROCESSOR.deepClone(wheelImg);\n      wheelImg.classList.add(styles['car-div__wheel_forward']);\n      backwardWheelImg.classList.add(styles['car-div__wheel_backward']);\n\n      rootElem.append(wheelImg);\n      rootElem.append(backwardWheelImg);\n    };\n  }\n\n  updateData(carData: RegCarData) {\n    this._currCar = carData;\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    // this._rootElement.style.setProperty('background-color', carData.color);\n  }\n\n  public async rollBack(finishPromise: Promise<unknown> = Promise.resolve()) {\n    return new Promise(res => {\n      const asyncFunc = async () => {\n        if (!this.isReseted) {\n          await this.playOutAnim();\n          if (this.currOutOfSceneAnim) {\n            this.currOutOfSceneAnim.cancel();\n            // await this.currOutOfSceneAnim.finished;\n            this.clearAnimFromElem(this.currOutOfSceneAnim);\n            this.currOutOfSceneAnim = undefined;\n          }\n          if (this.currAnimation) {\n            this.stop();\n            this.currAnimation.playbackRate = -10;\n            this.currAnimation.play();\n            console.log('wait curr anim');\n            await this.currAnimation.finished;\n            this.clearAnimFromElem(this.currAnimation);\n            this.currAnimation = undefined;\n            this._rootElement.classList.remove(styles['car-div_rollForward']);\n          }\n          this._rootElement.style.removeProperty('transition');\n          this._rootElement.style.removeProperty('transform');\n          await this.playInAnim();\n          this._rootElement.style.removeProperty('opacity');\n          finishPromise.finally(() => {\n            this.btnStart$.disabled = false;\n            this.btnReset$.disabled = true;\n            this.btnRm$.disabled = false;\n            this.btnSelect$.disabled = false;\n          });\n        }\n        console.log('RESETED');\n        this.isReseted = true;\n        res(true);\n      };\n      asyncFunc();\n    });\n  }\n\n  async playOutAnim() {\n    const animOut = this._rootElement.animate(\n      [\n        { opacity: `0.5` },\n        { opacity: `0.9` },\n        { opacity: `0.3` },\n        { opacity: `0.7` },\n        { opacity: `0.1` },\n        { opacity: `0.4` },\n        { opacity: `0` },\n      ],\n      {\n        duration: 300,\n        easing: 'linear',\n        fill: 'forwards',\n      },\n    );\n    await animOut.finished;\n    this.clearAnimFromElem(animOut);\n  }\n\n  async playAwaitingAnim(promiseToAwait: Promise<unknown>) {\n    const animIn = this._rootElement.animate(\n      [\n        { opacity: `0` },\n        { opacity: `0.6` },\n        { opacity: `0.3` },\n        { opacity: `0.8` },\n        { opacity: `0.3` },\n        { opacity: `0.6` },\n        { opacity: `0` },\n      ],\n      {\n        duration: 400,\n        easing: 'linear',\n        fill: 'forwards',\n        iterations: Number.POSITIVE_INFINITY,\n      },\n    );\n    await promiseToAwait.finally(() => {\n      animIn.cancel();\n      this.clearAnimFromElem(animIn);\n    });\n  }\n\n  async playInAnim() {\n    const animIn = this._rootElement.animate(\n      [\n        { opacity: `0` },\n        { opacity: `0.6` },\n        { opacity: `0.3` },\n        { opacity: `0.8` },\n        { opacity: `0.5` },\n        { opacity: `1` },\n      ],\n      {\n        duration: 300,\n        easing: 'linear',\n        fill: 'forwards',\n      },\n    );\n    await animIn.finished;\n    this.clearAnimFromElem(animIn);\n  }\n\n  private clearAnimFromElem = (a: Animation) => {\n    const anim = a as unknown as Record<string, unknown>;\n    if ('commitStyles' in anim && typeof anim.commitStyles === 'function')\n      anim.commitStyles();\n  };\n\n  private outOfScene() {\n    this.isReseted = false;\n    this.currOutOfSceneAnim = this._rootElement.animate(\n      [{ transform: `translateX(${-300}%)` }],\n      {\n        duration: 1200,\n        easing: 'ease-in',\n        fill: 'forwards',\n      },\n    );\n  }\n\n  public async rollForward(time: number) {\n    this.isReseted = false;\n    console.log(`anim time: ${time}`);\n    return new Promise((res, rej) => {\n      const start = Date.now();\n      this.btnStart$.disabled = true;\n      this.btnRm$.disabled = true;\n      this.btnSelect$.disabled = true;\n      this.btnReset$.disabled = false;\n      const rootStyle = window.getComputedStyle(\n        this._rootElement.parentElement as HTMLElement,\n      );\n      const selfStyle = window.getComputedStyle(this.rootElement);\n\n      const rootWidth =\n        Number.parseFloat(rootStyle.width) -\n        Number.parseFloat(rootStyle.paddingLeft) -\n        Number.parseFloat(rootStyle.paddingRight);\n      const selfWidth = Number.parseFloat(selfStyle.width);\n\n      const coordinateInPercents = ((rootWidth - selfWidth) / selfWidth) * 100;\n\n      this._rootElement.classList.add(styles['car-div_rollForward']);\n\n      console.log(time * 1000);\n      this.currAnimation = this._rootElement.animate(\n        [{ transform: `translateX(${coordinateInPercents}%)` }],\n        {\n          duration: time * 1000,\n          easing: 'ease-in-out',\n          fill: 'forwards',\n        },\n      );\n\n      this.currAnimation.onfinish = () => {\n        // console.log(`time from anim start: ${Date.now() - start}`);\n        // console.log('stop animation by roll forward finish');\n        // this._rootElement.classList.remove(styles['car-div_rollForward']);\n        // this.stop();\n        res(true);\n      };\n\n      this.currAnimation.oncancel = () => {\n        console.log('stop animation by roll forward cancel');\n        this._rootElement.classList.remove(styles['car-div_rollForward']);\n        rej();\n      };\n    });\n  }\n\n  public stop(broken = false, flags?: Record<string, unknown>) {\n    console.log(`stop animation, broken: ${broken}`);\n    this.rootElement.style.setProperty('transition', '');\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n    this.currAnimation?.pause();\n    if (broken) {\n      if (!flags?.isFinishVisible) {\n        // rollback\n        this.outOfScene();\n      }\n      const img = new Image();\n      let frameNumber = 0;\n      img.classList.add(styles['car-div__explosion']);\n      img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n      img.onload = async () => {\n        this._rootElement.append(img);\n        await new Promise(res =>\n          setTimeout(res, CarComp.CAR_EXPLOSION_IMG_DATA.FRAME_TIME_MS),\n        );\n        frameNumber++;\n        if (frameNumber < CarComp.CAR_EXPLOSION_IMG_DATA.FRAMES_COUNT) {\n          img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n        } else {\n          img.remove();\n        }\n      };\n    }\n  }\n\n  public get currCar(): RegCarData {\n    return this._currCar;\n  }\n\n  public get btnSelect() {\n    return this.btnSelect$;\n  }\n\n  public get btnRm() {\n    return this.btnRm$;\n  }\n\n  public get btnStart() {\n    return this.btnStart$;\n  }\n\n  public get btnReset() {\n    return this.btnReset$;\n  }\n\n  public get spanCarName() {\n    return this._spanCarName;\n  }\n\n  static drawCar(canvas: HTMLCanvasElement, hexColor: string) {\n    const img = new Image();\n    img.src = CarComp.CAR_BODY_IMG_SRC;\n    img.onload = () => {\n      canvas.height = img.height / 3;\n      canvas.width = img.width / 3;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.shadowColor = hexColor;\n        ctx.shadowBlur = 25;\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      }\n\n      CarComp.paintCarBody(canvas, hexColor);\n    };\n  }\n\n  static paintCarBody(canvas: HTMLCanvasElement, hexColor: string) {\n    const imageData = canvas\n      .getContext('2d')\n      ?.getImageData(0, 0, canvas.width, canvas.height);\n    if (imageData) {\n      const rgb = hexToRgb(hexColor);\n      for (let j = 0; j < imageData.width; j++) {\n        for (let i = 0; i < imageData.height; i++) {\n          // index: red, green, blue, alpha, red, green, blue, alpha..etc.\n          const index = i * 4 * imageData.width + j * 4;\n          const red = imageData.data[index] as number;\n          const green = imageData.data[index + 1] as number;\n          const blue = imageData.data[index + 2] as number;\n          // const alpha = imageData.data[index + 3] as number;\n\n          const blueDiff = 2 * blue - red - green;\n          const blueDiffThreshold = 10;\n          const threshold = 70;\n          if (\n            red > threshold &&\n            green > threshold &&\n            blue > threshold &&\n            blueDiff < blueDiffThreshold\n          ) {\n            imageData.data[index] = (red / 255) * rgb.r;\n            imageData.data[index + 1] = (green / 255) * rgb.g;\n            imageData.data[index + 2] = (blue / 255) * rgb.b;\n            // imageData.data[index + 3] = 225; /// !!! TEST !!!\n          }\n        }\n      }\n      canvas\n        .getContext('2d')\n        ?.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  static genPreview(car: UnregCarData): HTMLElement {\n    const container = document.createElement('div');\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles['car-div__canvas']);\n    container.append(canvas);\n    CarComp.drawWheels(container);\n    CarComp.drawCar(canvas, car.color);\n    return container;\n  }\n}\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionCreatedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class CreateCompController extends CreateUpdateCompControllerProto {\n  private txs = new Set<DBusTX>();\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnCreate();\n  }\n\n  private setupBtnCreate() {\n    this.btn.addEventListener('click', () => {\n      this.btn.disabled = true;\n      // TODO: !!! add validity check!\n      const unregCar: UnregCarData = {\n        name: this.inputText.value,\n        color: this.inputColor.value,\n      };\n      REST_CLIENT_GARAGE.createCar(unregCar)\n        .then(car => {\n          // TODO: Notify with DBus\n          const msg = new DBusMsgCarActionCreatedMsg(car);\n          this.txs.forEach(tx => {\n            tx.transmit({\n              msg,\n              prepMode: DBusTXPrepModes.clone,\n              waitMode: DBusTXWaitModes.nowait,\n            });\n          });\n        })\n        .finally(() => {\n          this.btn.disabled = false;\n        });\n    });\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('send created car msgs');\n    this.txs.add(tx);\n  }\n}\n","import { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\n\nexport interface CreateUpdateCompControllerReqElems {\n  inputText: HTMLInputElement;\n  inputColor: HTMLInputElement;\n  btn: HTMLButtonElement;\n}\n\nexport abstract class CreateUpdateCompControllerProto implements DBusPort {\n  constructor(\n    protected inputText: HTMLInputElement,\n    protected inputColor: HTMLInputElement,\n    protected btn: HTMLButtonElement,\n  ) {}\n\n  abstract autoConnect(int: DBusInterface): void | Promise<void>;\n\n  protected toogleCtlsDisabled(state: boolean) {\n    this.inputText.disabled = state;\n    this.inputColor.disabled = state;\n    this.btn.disabled = state;\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../../../lib/processors/obj-processor';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../../../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionSelectedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class UpdateCompController\n  extends CreateUpdateCompControllerProto\n  implements DBusPort\n{\n  private rxs: Set<DBusRX> = new Set();\n\n  private choosedCar: RegCarData | undefined;\n\n  private notifyCb: ((car: RegCarData) => unknown) | undefined;\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnUpdate();\n  }\n\n  autoConnect(int: DBusInterface) {\n    const rx = int.getNewRX(this.chooseCarListener, 'listen car choosing');\n    int.plugRX(DBusTopics.CAR_ACTION, rx);\n  }\n\n  private chooseCarListener = async (data: DBusTXData) => {\n    console.log(data);\n    if (data.msg instanceof DBusMsgCarActionSelectedMsg) {\n      this.choosedCar = OBJ_PROCESSOR.deepClone(data.msg.car);\n      this.notifyCb = data.msg.notifyChanges;\n      this.inputColor.value = data.msg.car.color;\n      this.inputText.value = data.msg.car.name;\n      this.toogleCtlsDisabled(false);\n    }\n  };\n\n  private setupBtnUpdate() {\n    this.toogleCtlsDisabled(true);\n    this.btn.addEventListener('click', () => {\n      this.toogleCtlsDisabled(true);\n      if (!this.choosedCar) return;\n      // TODO: !!! add validity check!\n      this.choosedCar.color = this.inputColor.value;\n      this.choosedCar.name = this.inputText.value;\n      REST_CLIENT_GARAGE.updateCar(this.choosedCar)\n        .then(car => {\n          if (this.notifyCb) this.notifyCb(car);\n        })\n        .finally(() => {\n          this.toogleCtlsDisabled(false);\n        });\n    });\n  }\n}\n","import { BaseComp } from '../../../../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { CreateCompController } from './controller-create';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\nimport { UpdateCompController } from './controller-update';\n\nimport styles from './create-update.scss';\nimport sharedStyles from '../../../../../styles.scss';\n\nexport class CreateUpdateComponent extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.CREATE_UPDATE;\n\n  protected textInput = document.createElement('input');\n\n  protected colorInput = document.createElement('input');\n\n  protected btn = document.createElement('button');\n\n  protected controller: CreateUpdateCompControllerProto;\n\n  constructor(type: 'CREATE' | 'UPDATE', btnText: string) {\n    super('div');\n    this._rootElement.classList.add(styles.root);\n    this.textInput.type = 'text';\n    this.textInput.classList.add(styles['text-input']);\n    this.colorInput.type = 'color';\n    this.colorInput.classList.add(styles['color-input']);\n    this.btn.textContent = btnText;\n    this.btn.classList.add(sharedStyles.btn);\n    this._rootElement.append(this.textInput, this.colorInput, this.btn);\n\n    const elements: CreateUpdateCompControllerReqElems = {\n      inputText: this.textInput,\n      inputColor: this.colorInput,\n      btn: this.btn,\n    };\n\n    switch (type) {\n      case 'UPDATE':\n        this.controller = new UpdateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']);\n        break;\n      case 'CREATE':\n      default:\n        this.controller = new CreateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']); // TODO: maybe change?\n        break;\n    }\n  }\n\n  connect(int: DBusInterface) {\n    this.controller.autoConnect(int);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgGenerateCarsMsg extends DBusMsg {\n  constructor(\n    readonly status: 'start' | 'end',\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GENERATE, rxIds, prefResponseRxIds);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CreateUpdateComponent } from './create-update/create-update';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from '../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport { DBusMsgRaceRequestMsg } from '../../dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusMsgGarageResetReqMsg } from '../../dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './main-controls.scss';\nimport sharedStyles from '../../../../styles.scss';\nimport { REST_CLIENT_GARAGE } from '../../../../services/rest-clients/client-garage/rest-client-garage';\nimport {\n  CAR_MODEL_LIST,\n  CAR_MODEL_LIST_KEYS,\n} from '../../../../definitions/car-random-data.def';\nimport {\n  genRandomHexColor,\n  getRandomArbitraryInt,\n  getRandomInt,\n} from '../../../../lib/generators/generators';\nimport {\n  UnregCarData,\n  WinnerCarData,\n} from '../../../../definitions/car-data.def';\nimport { REST_CLIENT_WINNERS } from '../../../../services/rest-clients/client-winners/rest-client-winners';\nimport { DBusTXData } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgGarageRaceMsg } from '../../dbus-msgs/by-topic/garage/garage-race-msg.def';\nimport { DBUS_COMMON_RESPONSES } from '../../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusMsgGarageRaceStatusMsg } from '../../dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { DBusTopics } from '../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTX } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgGenerateCarsMsg } from './dbus-msgs/generate-cars-msg.def';\nimport { PopupStandaloneModalProgressComp } from '../../../../lib/components/popups/standalone/modal/progress/popup-progress';\n\nexport class MainControlsComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.MAIN_CONTROLS;\n\n  private txs = new Set<DBusTX>();\n\n  private createComponent = new CreateUpdateComponent('CREATE', 'create');\n\n  private updateComponent = new CreateUpdateComponent('UPDATE', 'update');\n\n  private btnRace = document.createElement('button');\n\n  private btnReset = document.createElement('button');\n\n  private btnGenerate = document.createElement('button');\n\n  private popup = new PopupStandaloneModalProgressComp();\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles['main-controls']);\n\n    const btnsBlock = this.renderBtns();\n    this.btnRace.addEventListener('click', this.raceClickListener);\n    this.btnReset.addEventListener('click', this.resetClickListener);\n    this.btnGenerate.addEventListener('click', this.generateClickListener);\n\n    this.btnReset.disabled = true;\n    this.btnRace.disabled = true;\n\n    this._rootElement.append(\n      this.createComponent.rootElement,\n      this.updateComponent.rootElement,\n      btnsBlock,\n    );\n  }\n\n  private generateClickListener = async () => {\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgGenerateCarsMsg('start');\n    const transmissions: Promise<unknown>[] = [];\n    this.txs.forEach(tx => {\n      const transmission = tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      transmissions.push(transmission);\n    });\n    await Promise.allSettled(transmissions);\n    this.popup\n      .reset()\n      .setText('please wait while the entries are generated')\n      .show();\n    await this.generate(100, undefined, this.genCb);\n    this.popup.reset().hide();\n    const resolveMsg = new DBusMsgGenerateCarsMsg('end');\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg: resolveMsg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n    this.btnGenerate.disabled = false;\n  };\n\n  private genCb = (progress: number) => {\n    this.popup.setProgress(progress);\n  };\n\n  private raceClickListener = async () => {\n    if (this.txs.size === 0) return;\n    this.btnRace.disabled = true;\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgRaceRequestMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private resetClickListener = async () => {\n    if (this.txs.size === 0) return;\n    const msg = new DBusMsgGarageResetReqMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private renderBtns(): HTMLElement {\n    // setip btns\n    const span = document.createElement('span');\n    span.textContent = 'race';\n    this.btnRace.append(span);\n    this.btnRace.classList.add(sharedStyles.btn, sharedStyles['btn-15']);\n    this.btnReset.textContent = 'reset';\n    this.btnReset.classList.add(sharedStyles.btn, sharedStyles['btn-9']);\n    this.btnGenerate.textContent = 'generate cards';\n    this.btnGenerate.classList.add(sharedStyles.btn, sharedStyles['btn-1']);\n\n    const btnBlock = document.createElement('div');\n    btnBlock.classList.add(styles['btn-block']);\n    btnBlock.append(this.btnRace, this.btnReset, this.btnGenerate);\n    return btnBlock;\n  }\n\n  private async generate(\n    total: number,\n    left?: number,\n    cb?: (progress: number) => unknown,\n  ): Promise<boolean> {\n    let genLeft = left || total;\n    const randomName = this.genRandomCarName();\n    const color = genRandomHexColor();\n    const unregCarData: UnregCarData = {\n      name: randomName,\n      color,\n    };\n    const car = await REST_CLIENT_GARAGE.createCar(unregCarData);\n    const winner: WinnerCarData = {\n      id: car.id,\n      wins: getRandomArbitraryInt(1, 3),\n      time: Number.parseFloat((getRandomArbitraryInt(40, 50) / 3).toFixed(2)),\n    };\n    await REST_CLIENT_WINNERS.createWinner(winner);\n    genLeft--;\n\n    if (cb) {\n      const progress = (1 - genLeft / total) * 100;\n      cb(progress);\n    }\n\n    if (genLeft > 0) return this.generate(total, genLeft, cb);\n\n    return true;\n  }\n\n  private genRandomCarName = (): string => {\n    const manufacturerNumber = getRandomInt(CAR_MODEL_LIST_KEYS.length - 1);\n    const manufacturerName = CAR_MODEL_LIST_KEYS[\n      manufacturerNumber\n    ] as keyof typeof CAR_MODEL_LIST;\n    const models = CAR_MODEL_LIST[manufacturerName];\n    const modelNumber = getRandomInt(models.length - 1);\n    const modelName = models[modelNumber] as string;\n    return `${manufacturerName} ${modelName}`;\n  };\n\n  private rxFuncForRaceMsgs = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgGarageRaceStatusMsg) {\n      const { status } = data.msg;\n      switch (status) {\n        case 'READY_TO_GO':\n          this.btnRace.disabled = false;\n          this.btnReset.disabled = true;\n          this.btnGenerate.disabled = false;\n          // this.btnGenerate.disabled = true;\n          break;\n        case 'IN_PROCESS':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = true;\n          break;\n        case 'NEED_RESET':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = false;\n          break;\n        default:\n          break;\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.createComponent, 'cu_create');\n    int.attachSubHub(this.updateComponent, 'cu_delete');\n\n    const rx = int.getNewRX(\n      this.rxFuncForRaceMsgs,\n      'toggle btns in main-ctls-block',\n    );\n    int.plugRX(DBusTopics.GARAGE, rx);\n\n    const tx = int.getNewTX('start race | broadcast generate');\n    this.txs.add(tx);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../car/car';\n\nimport styles from './track.scss';\n\nexport class TrackComp extends BaseComp {\n  private topBlock = document.createElement('div');\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles.track);\n    this._rootElement.append();\n    this.topBlock.classList.add(styles['track__controls-block']);\n  }\n\n  illuminateSelf = (illuminate: boolean) => {\n    if (illuminate) this._rootElement.classList.add(styles.track_illuminated);\n    else this._rootElement.classList.remove(styles.track_illuminated);\n  };\n\n  placeCar(carComp: CarComp) {\n    if (this._rootElement.hasChildNodes()) {\n      this._rootElement.childNodes.forEach(child => child.remove());\n    }\n    this.topBlock.append(carComp.spanCarName);\n    this._rootElement.append(this.topBlock, carComp.rootElement);\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBus } from '../../lib/services/dbus/dbus';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgRouteIsChangedMsg } from '../../lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport styles from './header.scss';\nimport { NavItem } from './subcomps/nav-item/nav-item';\n\nexport class HeaderComponent extends BaseComp implements DBusHub {\n  private navContainer: HTMLElement;\n\n  private logo: HTMLElement;\n\n  protected anchors: HTMLAnchorElement[];\n\n  protected buses: DBus[] = [];\n\n  constructor(readonly hubName: DBusHubNamesList = DBUS_HUB_NAMES.HEADER) {\n    super('header');\n    this.rootElement.classList.add(styles.header);\n\n    // logo\n    this.logo = document.createElement('h1');\n    this.logo.classList.add(styles.header__logo);\n    const firstSpan = document.createElement('span');\n    firstSpan.textContent = 'async';\n    const secondSpan = document.createElement('span');\n    secondSpan.textContent = 'race';\n    this.logo.append(firstSpan, secondSpan);\n    this.rootElement.append(this.logo);\n\n    // nav\n    this.navContainer = document.createElement('nav');\n    this.navContainer.classList.add(styles['header-nav']);\n    this.rootElement.append(this.navContainer);\n\n    // ul\n    const ul = document.createElement('ul');\n    ul.classList.add(styles['header-nav__list']);\n    this.navContainer.append(ul);\n\n    // ul items\n    const classList = {\n      li: styles['header-nav__item'],\n      a: styles['header-nav__anchor'],\n      svg: styles['header-nav__svg'],\n      span: styles['header-nav__span'],\n    };\n\n    const garageNavItem = new NavItem('garage', '#garage', classList);\n    const winnersNavItem = new NavItem('winners', '#winners', classList);\n\n    const navItems = [garageNavItem, winnersNavItem];\n    this.anchors = navItems.map(item => item.anchor);\n\n    ul.append(...navItems.map(item => item.rootElement));\n  }\n\n  connect(int: DBusInterface) {\n    const illuminateRX = int.getNewRX(\n      this.illuminateNavItem,\n      'illuminate nav items',\n    );\n    int.plugRX(DBusTopics.ROUTING, illuminateRX);\n  }\n\n  private illuminateNavItem = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      this.anchors.forEach(anchor => {\n        if (anchor.getAttribute('href') === msg.newRoute) {\n          anchor.classList.add(styles['header-nav__anchor_active']);\n        } else {\n          anchor.classList.remove(styles['header-nav__anchor_active']);\n        }\n      });\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\n\nexport interface NavItemStyles {\n  li?: string;\n  a?: string;\n  svg?: string;\n  span?: string;\n}\n\nexport class NavItem extends BaseComp {\n  private _anchor: HTMLAnchorElement;\n\n  protected iconImage: HTMLImageElement | undefined;\n\n  protected span: HTMLSpanElement;\n\n  constructor(\n    text: string,\n    href: string,\n    styles?: NavItemStyles,\n    iconSrc?: string,\n  ) {\n    super('li');\n\n    if (styles?.li) this._rootElement.classList.add(styles.li);\n    this._anchor = document.createElement('a');\n    this._anchor.setAttribute('href', href);\n\n    if (styles?.a) this._anchor.classList.add(styles.a);\n\n    if (iconSrc) {\n      this.iconImage = document.createElement('img');\n      this.iconImage.src = iconSrc;\n\n      if (styles?.svg) this.iconImage.classList.add(styles.svg);\n      this._anchor.append(this.iconImage);\n    }\n    this.span = document.createElement('span');\n    this.span.textContent = text;\n\n    if (styles?.span) this.span.classList.add(styles.span);\n    this._anchor.append(this.span);\n\n    this.rootElement.append(this._anchor);\n  }\n\n  get anchor(): HTMLAnchorElement {\n    return this._anchor;\n  }\n}\n","import { UnregCarData, WinnerCarData } from '../../../definitions/car-data.def';\nimport { BaseComp } from '../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../../garage/subcomps/car/car';\n\nexport class WinnerRowComp extends BaseComp {\n  private indexElem = document.createElement('td');\n\n  private idElem = document.createElement('td');\n\n  private carPreviewBox = document.createElement('td');\n\n  private nameElem = document.createElement('td');\n\n  private winsElem = document.createElement('td');\n\n  private bestTimeElem = document.createElement('td');\n\n  private carPreview: HTMLElement;\n\n  constructor(index: number, winnerData: WinnerCarData, carData: UnregCarData) {\n    super('tr');\n\n    this.indexElem.textContent = index.toString();\n    this.idElem.textContent = winnerData.id.toString();\n    this.carPreview = CarComp.genPreview(carData);\n    this.carPreviewBox.append(this.carPreview);\n    this.nameElem.textContent = carData.name;\n    this.winsElem.textContent = winnerData.wins.toString();\n    this.bestTimeElem.textContent = winnerData.time.toString();\n\n    this._rootElement.append(\n      this.indexElem,\n      this.idElem,\n      this.carPreviewBox,\n      this.nameElem,\n      this.winsElem,\n      this.bestTimeElem,\n    );\n  }\n\n  public getCarPreview() {\n    return this.carPreview;\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport {\n  RestClientWinnersSortOptionsList,\n  REST_CLIENT_WINNERS_SORT_OPTIONS,\n} from '../../services/rest-clients/client-winners/rest-client-winners.def';\nimport { WinnerRowComp } from './subcomps/winner-entry';\nimport { Pager } from '../../lib/services/pager/pager';\n\nimport styles from './winners.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\n\nexport class WinnersComp extends BaseComp implements Notifiable {\n  static readonly TEXT_CONTENT_ENG = {};\n\n  private table = document.createElement('table');\n\n  private tableBody = document.createElement('tbody');\n\n  private tableHead = document.createElement('thead');\n\n  private thId = document.createElement('th');\n\n  private thCar = document.createElement('th');\n\n  private thName = document.createElement('th');\n\n  private thWins = document.createElement('th');\n\n  private thBestTime = document.createElement('th');\n\n  private currSortedElem: HTMLElement | undefined;\n\n  private pager: Pager;\n\n  private currOrder: 'ASC' | 'DESC' = 'DESC';\n\n  private currSort: RestClientWinnersSortOptionsList = 'wins';\n\n  private entriesPerPage = 10;\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.winners);\n    this._rootElement.style.setProperty(\n      'background-image',\n      `url('./assets/imgs/backgrounds/winners/anime-girl-cyberpunk-ride-4k-lx-2880x1800.jpg')`,\n    );\n\n    const pagerBtnsContainer = document.createElement('div');\n    pagerBtnsContainer.classList.add(styles.pager);\n\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    const btnNextPage = this.pager.getBtnNextPage();\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n    btnNextPage.classList.add(sharedStyles.btn);\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n\n    pagerBtnsContainer.append(btnPrevPage, btnNextPage);\n\n    const pagerSpan = this.pager.getPagerSpan();\n\n    pagerSpan.classList.add(styles['pager-span']);\n\n    this.table.append(\n      this.tableHead,\n      this.tableBody,\n      pagerBtnsContainer,\n      pagerSpan,\n    );\n    this.table.classList.add(styles.table);\n\n    this._rootElement.append(this.table);\n\n    this.renderHeader();\n    this.refillTable().then(() => this.refreshTableHeader(this.thBestTime));\n  }\n\n  notify(): void {\n    this.refillTable(this.currSort, this.currOrder).then(() =>\n      this.refreshTableHeader(this.currSortedElem || this.thBestTime),\n    );\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.refillTable(undefined, undefined, dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  private renderHeader() {\n    const tr = document.createElement('tr');\n\n    const thIndex = document.createElement('th');\n    thIndex.textContent = '‚Ññ';\n    this.thId.textContent = 'ID';\n    this.thId.classList.add(styles['table__can-be-sorted']);\n    this.thCar.textContent = 'CAR';\n    this.thName.textContent = 'NAME';\n    this.thWins.textContent = 'WINS';\n    this.thWins.classList.add(styles['table__can-be-sorted']);\n    this.thBestTime.textContent = 'BEST TIME';\n    this.thBestTime.classList.add(styles['table__can-be-sorted']);\n\n    tr.append(\n      thIndex,\n      this.thId,\n      this.thCar,\n      this.thName,\n      this.thWins,\n      this.thBestTime,\n    );\n    this.tableHead.append(tr);\n    this.tableHead.addEventListener('click', this.tableHeadClickListener);\n  }\n\n  private async refillTable(\n    specialSort?: RestClientWinnersSortOptionsList,\n    specialOrder?: 'ASC' | 'DESC',\n    dir?: 'prev' | 'next',\n  ) {\n    return new Promise((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : this.pager.getCurrPageNumber() - 1\n        : this.pager.getCurrPageNumber();\n      const order = specialOrder || this.currOrder;\n      const sort = specialSort || this.currSort;\n\n      REST_CLIENT_WINNERS.getWinners(page, 10, sort, order).then(\n        async response => {\n          this.pager.setEntriesCount(Number.parseInt(response.limit, 10));\n          if (response.cars.length === 0) {\n            rej();\n            return;\n          }\n          const rows = new Array<WinnerRowComp>(response.cars.length);\n          const promises: Promise<unknown>[] = [];\n          const indexInc = (page - 1) * 10;\n          response.cars.forEach((winner, index) => {\n            const promise = REST_CLIENT_GARAGE.getCar(winner.id).then(car => {\n              const totalIndex = index + indexInc + 1;\n              const row = new WinnerRowComp(totalIndex, winner, car);\n              rows[index] = row;\n            });\n            promises.push(promise);\n          });\n          await Promise.allSettled(promises);\n          while (this.tableBody.firstChild) this.tableBody.firstChild.remove();\n          this.tableBody.append(\n            ...rows.map(row => {\n              row\n                .getCarPreview()\n                .classList.add(styles['table__car-preview-box']);\n              return row.rootElement;\n            }),\n          );\n          res(true);\n        },\n      );\n    });\n  }\n\n  private tableHeadClickListener = async (e: Event) => {\n    let sort: RestClientWinnersSortOptionsList | undefined;\n    switch (e.target) {\n      case this.thId:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.id;\n        break;\n      case this.thWins:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.wins;\n        break;\n      case this.thBestTime:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.time;\n        break;\n      default:\n        break;\n    }\n    if (sort) {\n      // TODO: block pager\n      const elem = e.target as HTMLElement;\n      this.currOrder = elem.classList.contains(\n        styles['table__sorted-elem_desc'],\n      )\n        ? 'ASC'\n        : 'DESC';\n      this.currSort = sort;\n      await this.refillTable();\n      this.refreshTableHeader(elem);\n    }\n  };\n\n  private refreshTableHeader = (elem: HTMLElement) => {\n    if (this.currSortedElem)\n      this.currSortedElem.classList.remove(styles['table__sorted-elem']);\n\n    elem.classList.add(styles['table__sorted-elem']);\n    this.currSortedElem = elem;\n\n    if (this.currOrder === 'ASC') {\n      elem.classList.remove(styles['table__sorted-elem_desc']);\n      elem.classList.add(styles['table__sorted-elem_asc']);\n    } else {\n      elem.classList.remove(styles['table__sorted-elem_asc']);\n      elem.classList.add(styles['table__sorted-elem_desc']);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../lib/processors/obj-processor';\n\nconst models = {\n  Lamborghini: [\n    'Murci√©lago',\n    '350 GT',\n    '400 GT',\n    'Si√°n FKP 37',\n    'Essenza SCV12',\n    'Urus',\n    'Centenario',\n    'Hurac√°n',\n    'Veneno',\n    'Sesto Element–æ',\n    'Aventador',\n    'Revent√≥n',\n    'Gallardo',\n    'Diablo',\n    'LM002',\n    'Jalpa',\n    'Silhouette',\n    'Countach',\n    'Urraco',\n    'Jarama',\n    'Islero',\n    'Espada',\n    'Miura',\n  ],\n  'Aston Martin': [\n    'Project 003',\n    'Valkyrie',\n    'DBS',\n    'Vanquish Zagato',\n    'Vanquish',\n    'Virage/Virage Volante',\n    'V12 Zagato',\n    'One-77',\n    'V8 Coupe/V8 Volante',\n    'V8 Zagato',\n  ],\n  Ferrari: [\n    'Roma',\n    'Portfolio',\n    '488 GTB',\n    'California T',\n    '360 Spider',\n    '355 F1 Berlinetta',\n    'F355 GTS',\n    '456 GT',\n    'Testarossa',\n    'SF1000',\n  ],\n  Koenigsegg: [\n    'Jesko Absolut',\n    'Jesko',\n    'Agera Final',\n    'Agera XS',\n    'Agera X',\n    'Agera S',\n    'Regera',\n    'Agera RS',\n    'One:1',\n    'CCGT',\n  ],\n};\n\nconst CAR_MODEL_LIST = OBJ_PROCESSOR.deepFreeze(models);\n\nexport { CAR_MODEL_LIST };\n\nconst CAR_MODEL_LIST_KEYS = OBJ_PROCESSOR.deepFreeze(\n  Object.keys(CAR_MODEL_LIST),\n);\n\nexport { CAR_MODEL_LIST_KEYS };\n","export class BaseComp {\n  protected _rootElement: HTMLElement;\n\n  constructor(tag: keyof HTMLElementTagNameMap = 'div') {\n    this._rootElement = document.createElement(tag);\n  }\n\n  public get rootElement(): HTMLElement {\n    return this._rootElement;\n  }\n}\n","import { PopupStandaloneModalComp } from '../popup-standalone-modal';\n\nimport sharedStyles from '../../../../../../styles.scss';\n\nexport class PopupStandaloneModal404Comp extends PopupStandaloneModalComp {\n  constructor() {\n    super();\n    this.header.textContent = 'ERROR: 404';\n    this.header.dataset.textContent = this.header.textContent;\n    this.header.classList.add(sharedStyles['glitched-text']);\n    this.text.classList.add(sharedStyles['glitched-text']);\n  }\n}\n","import { PopupStandaloneComp } from '../popup-standalone';\n\nimport styles from './popup-standalone-modal.scss';\n\nexport abstract class PopupStandaloneModalComp extends PopupStandaloneComp {\n  constructor() {\n    super();\n    this._rootElement.classList.add(styles['popup-modal']);\n    const closeArea = document.createElement('div');\n    closeArea.classList.add(styles['popup-bg']);\n    this._rootElement.append(closeArea);\n    this.body.classList.add(styles['popup-body']);\n    closeArea.append(this.body);\n    this.header.classList.add(styles['popup-body-header']);\n    this.text.classList.add(styles['popup-body-text']);\n  }\n\n  setText(text: string): PopupStandaloneModalComp {\n    this.text.textContent = text;\n    this.text.dataset.textContent = text;\n    return this;\n  }\n\n  show(rootElem?: HTMLElement): PopupStandaloneModalComp {\n    const root = rootElem || document.body;\n    root.append(this._rootElement);\n    return this;\n  }\n\n  hide(): PopupStandaloneModalComp {\n    this._rootElement.remove();\n    return this;\n  }\n}\n","import { PopupStandaloneModalComp } from '../popup-standalone-modal';\n\nimport styles from './popup-progress.scss';\nimport sharedStyles from '../../../../../../styles.scss';\n\nexport class PopupStandaloneModalProgressComp extends PopupStandaloneModalComp {\n  private barContainer = document.createElement('div');\n\n  private bar = document.createElement('div');\n\n  constructor() {\n    super();\n    this.barContainer.classList.add(styles.container);\n    this.bar.classList.add(styles.bar);\n    this.barContainer.append(this.bar);\n    this.text.classList.add(styles.text, sharedStyles['glitched-text']);\n    this.body.classList.add(styles.body);\n    this.body.append(this.barContainer);\n  }\n\n  setText(text: string): PopupStandaloneModalProgressComp {\n    super.setText(text);\n    return this;\n  }\n\n  reset(): PopupStandaloneModalProgressComp {\n    this.bar.style.removeProperty('--progress');\n    this.text.textContent = '';\n    this.text.dataset.textContent = '';\n    return this;\n  }\n\n  setProgress(progress: number): PopupStandaloneModalProgressComp {\n    this.bar.style.setProperty('--progress', `${progress}%`);\n    return this;\n  }\n}\n","import { BaseComp } from '../../base-comp/base-comp';\n\nexport interface BasePopupAttrs {\n  configurable: boolean;\n}\n\nexport abstract class PopupStandaloneComp extends BaseComp {\n  protected body: HTMLElement;\n\n  protected header: HTMLHeadingElement;\n\n  protected text: HTMLParagraphElement;\n\n  constructor() {\n    super('div');\n\n    this.body = document.createElement('div');\n    this.header = document.createElement('h3');\n    this.text = document.createElement('p');\n\n    this.body.append(this.header, this.text);\n    this._rootElement.append(this.body);\n  }\n}\n","export function hexToRgb(hex: string): { r: number; g: number; b: number } {\n  let c: string[];\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    // c = hex.substring(1).split('');\n    c = hex.split('');\n    if (c.length === 4) {\n      c = [c[1], c[1], c[2], c[2], c[3], c[3]] as string[];\n    }\n    const r = Number.parseInt(hex.slice(1, 3), 16);\n    const g = Number.parseInt(hex.slice(3, 5), 16);\n    const b = Number.parseInt(hex.slice(5, 7), 16);\n    // return `rgb(${r}, ${g}, ${b})`;\n    return { r, g, b };\n  }\n  throw new Error('Bad Hex');\n}\n","export function genUniqId(): string {\n  const arr = new Uint8Array(4);\n  return window.crypto.getRandomValues(arr).join('');\n}\n\nexport function getRandomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n\nexport function getRandomArbitraryInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function genRandomHexColor(): string {\n  const color = `#${Math.floor(Math.random() * 16_777_215).toString(16)}`;\n  if (color.length === 7) return color;\n  return genRandomHexColor();\n}\n","export interface Notifiable {\n  notify: <T>(params: T) => void | Promise<void>;\n}\n\nexport function isNotifiable(object: unknown): object is Notifiable {\n  const objAsRecord = object as Record<string, unknown>;\n  return 'notify' in objAsRecord && typeof objAsRecord.notify === 'function';\n}\n","class ObjProcessor {\n  readonly deepFreeze = <T>(obj: T): T => {\n    if (typeof obj === 'object' && obj !== null) {\n      const record = obj as Record<string, unknown>;\n      Object.keys(record).forEach(prop => {\n        if (\n          typeof record[prop] === 'object' &&\n          !Object.isFrozen(record[prop])\n        ) {\n          this.deepFreeze(record[prop]);\n        }\n      });\n      return Object.freeze(obj);\n    }\n    throw new Error('not object');\n  };\n\n  readonly deepClone = <T>(target: T): T => {\n    if (Array.isArray(target)) {\n      const clone = [] as unknown[];\n      (target as unknown[]).forEach(v => {\n        clone.push(v);\n      });\n      return clone.map((n: unknown) => this.deepClone(n)) as unknown as T;\n    }\n\n    if (typeof target === 'object' && target !== null) {\n      if (target instanceof HTMLElement)\n        return target.cloneNode(true) as unknown as T;\n      if (target instanceof Blob) return target.slice() as unknown as T;\n      const clone = {\n        ...(target as unknown as { [key: string]: unknown }),\n      } as {\n        [key: string]: unknown;\n      };\n      Object.keys(clone).forEach(k => {\n        clone[k] = this.deepClone(clone[k]);\n      });\n      Object.setPrototypeOf(clone, Object.getPrototypeOf(target));\n      return clone as unknown as T;\n    }\n    return target;\n  };\n}\n\nconst OBJ_PROCESSOR = new ObjProcessor();\nOBJ_PROCESSOR.deepFreeze(OBJ_PROCESSOR);\nexport { OBJ_PROCESSOR };\n","import { DBusTopics } from './defs/dbus-topics.def';\nimport { genUniqId } from '../../generators/generators';\nimport { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_ERRORS } from './defs/dbus-errors.def';\nimport { DBusRX, DBusRXFunc } from './defs/dbus-rx/dbus-rx.def';\nimport { DBusTX } from './defs/dbus-tx/dbus-tx.def';\nimport { DBusTXOptions } from './defs/dbus-tx/dbus-tx-options.def';\nimport { DBusTXData } from './defs/dbus-tx/dbus-tx-data.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from './defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTXDataHeaders } from './defs/dbus-tx/dbus-tx-data-headers.def';\nimport { DBusHub, DBusInterface } from './defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './defs/dbus-hub-names.def';\n\nexport class DBus {\n  private network: Map<DBusTopics, Set<DBusRX>> = new Map();\n\n  private idCounter = {\n    txs: 0,\n    rxs: 0,\n  };\n\n  private createdRXs = new Set<DBusRX>();\n\n  private createdTXs = new Set<DBusTX>();\n\n  private attachedHubs = new Map<DBusHub, DBusInterface>();\n\n  private occupiedNames = new Set<string>();\n\n  readonly busId: string;\n\n  constructor() {\n    this.busId = genUniqId();\n    return Object.freeze(this) as unknown as DBus;\n  }\n\n  public attachHub(hub: DBusHub, suffix?: string): void | Promise<void> {\n    return this.createInterfaceForHub(hub, undefined, suffix);\n  }\n\n  private createInterfaceForHub(\n    hub: DBusHub,\n    prefix?: string,\n    suffix?: string,\n  ): void | Promise<void> {\n    if (this.attachedHubs.has(hub))\n      throw new Error(DBUS_ERRORS.HUB_IS_ALREADY_ATTACHED);\n\n    if (!(hub.hubName in DBUS_HUB_NAMES))\n      throw new Error(DBUS_ERRORS.HUB_NAME_NOT_AUTHORIZED);\n\n    let hubName = prefix ? `${prefix}_${hub.hubName}` : hub.hubName;\n    if (suffix) hubName += `_${suffix}`;\n\n    if (this.occupiedNames.has(hubName))\n      throw new Error(DBUS_ERRORS.HUB_NAME_IS_OCCUPIED);\n\n    const arrowedGetNewTX = (desc?: string) => this.getNewTX(hubName, desc);\n    const arrowedGetNewRX = (func: DBusRXFunc, desc?: string) =>\n      this.genNewRX(func, desc);\n    const arrowedPlugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.plugRX(topic, rx);\n    const arrowedUnplugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.unplugRX(topic, rx);\n    const decoratedAttachHub = (subHub: DBusHub, subSuffix?: string) =>\n      this.createInterfaceForHub(subHub, hubName, subSuffix);\n\n    const dbusInterface = new DBusInterface(\n      arrowedGetNewTX,\n      arrowedGetNewRX,\n      arrowedPlugRX,\n      arrowedUnplugRX,\n      decoratedAttachHub,\n    );\n\n    this.occupiedNames.add(hubName);\n    this.attachedHubs.set(hub, dbusInterface);\n\n    OBJ_PROCESSOR.deepFreeze(dbusInterface);\n\n    return hub.connect(dbusInterface);\n  }\n\n  private getNewTX(hubName: string, desc?: string): DBusTX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.txs++;\n\n    const arrowedTransmit = async (opts: DBusTXOptions) => {\n      const head = new DBusTXDataHeaders(\n        hubName,\n        id,\n        regNumber,\n        opts.waitMode,\n        opts.prepMode,\n        desc,\n      );\n      const data = new DBusTXData(head, opts.msg);\n      const result = await this.transmit(data);\n      return result;\n    };\n\n    const tx = new DBusTX(regNumber, id, this.busId, arrowedTransmit);\n\n    const freezedTX = OBJ_PROCESSOR.deepFreeze(tx);\n\n    this.createdTXs.add(freezedTX);\n\n    return freezedTX;\n  }\n\n  private genNewRX(func: DBusRXFunc, desc?: string): DBusRX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.rxs++;\n    const rx = new DBusRX(regNumber, id, this.busId, func, desc);\n    const freezedRX = OBJ_PROCESSOR.deepFreeze(rx);\n    this.createdRXs.add(freezedRX);\n    return freezedRX;\n  }\n\n  private plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.createdRXs.has(rx)) throw new Error(DBUS_ERRORS.XENO_RX);\n    if (!this.network.has(topic)) this.network.set(topic, new Set());\n    this.network.get(topic)?.add(rx);\n  }\n\n  private unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.network.get(topic)?.delete(rx);\n  }\n\n  private async transmit(data: DBusTXData): Promise<unknown> {\n    if (!this.network.has(data.msg.topic)) {\n      throw new Error(DBUS_ERRORS.TOPIC_IS_NOT_EXIST);\n    }\n\n    const rxs = this.network.get(data.msg.topic);\n\n    if (rxs === undefined || rxs.size === 0)\n      throw new Error(DBUS_ERRORS.TOPIC_HAS_NO_RXS);\n\n    let choosedRXs: DBusRX[] = [];\n\n    if (data.msg.prefResponseRxIds) {\n      rxs.forEach(rx => {\n        if (data.msg.prefResponseRxIds?.includes(rx.id)) choosedRXs.push(rx);\n      });\n      if (choosedRXs.length === 0)\n        throw new Error(DBUS_ERRORS.PREF_RXS_ARE_NOT_EXIST);\n    } else choosedRXs = [...rxs];\n\n    let result;\n    switch (data.headers.waitMode) {\n      case DBusTXWaitModes.all:\n        result = await Promise.all(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.allSetled:\n        result = await Promise.allSettled(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.manual:\n        result = choosedRXs;\n        break;\n      case DBusTXWaitModes.nowait:\n      default:\n        choosedRXs.map(rx => this.callRXFunc(data, rx));\n        result = true;\n        break;\n    }\n    return result;\n  }\n\n  private callRXFunc = (data: DBusTXData, rx: DBusRX) => {\n    const handleClone = () => {\n      const clonedData = OBJ_PROCESSOR.deepClone(data);\n      return rx.func(clonedData);\n    };\n\n    const handleFreeze = () => {\n      const freezedData = OBJ_PROCESSOR.deepFreeze(data);\n      return rx.func(freezedData);\n    };\n\n    switch (data.headers.prepMode) {\n      case DBusTXPrepModes.clone:\n        return handleClone();\n      case DBusTXPrepModes.freeze:\n        return handleFreeze();\n      default:\n        throw new Error(DBUS_ERRORS.UNEXPECTED_PREP_MODE);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusCommonResponses = {\n  VOID: 'VOID',\n  BAD_REQUEST: 'BAD_REQUEST',\n};\n\nconst DBUS_COMMON_RESPONSES = OBJ_PROCESSOR.deepFreeze(dbusCommonResponses);\n\nexport { DBUS_COMMON_RESPONSES };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusErrors = {\n  HUB_NAME_IS_OCCUPIED: 'HUB_NAME_IS_OCCUPIED',\n  HUB_IS_ALREADY_ATTACHED: 'HUB_IS_ALREADY_ATTACHED',\n  HUB_NAME_NOT_AUTHORIZED: 'HUB_NAME_NOT_AUTHORIZED',\n  XENO_RX: 'XENO_RX',\n  TOPIC_IS_NOT_EXIST: 'TOPIC_IS_NOT_EXIST',\n  TOPIC_HAS_NO_RXS: 'TOPIC_HAS_NO_RXS',\n  PREF_RXS_ARE_NOT_EXIST: 'PREF_RXS_ARE_NOT_EXIST',\n  UNEXPECTED_PREP_MODE: 'UNEXPECTED_PREP_MODE',\n};\n\nconst DBUS_ERRORS = OBJ_PROCESSOR.deepFreeze(dbusErrors);\n\nexport { DBUS_ERRORS };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nclass DBusHubNames {\n  readonly APP = 'APP';\n\n  readonly ROUTER = 'ROUTER';\n\n  readonly GARAGE = 'GARAGE';\n\n  readonly HEADER = 'HEADER';\n\n  readonly MAIN_CONTROLS = 'MAIN_CONTROLS';\n\n  readonly CREATE_UPDATE = 'CREATE_UPDATE';\n\n  readonly GARAGE_CONTROLLER = 'GARAGE_CONTROLLER';\n}\n\nconst obj = new DBusHubNames();\n\nconst DBUS_HUB_NAMES = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { DBUS_HUB_NAMES };\n\nexport type DBusHubNamesList = keyof DBusHubNames;\n","import { DBusHubNamesList, DBUS_HUB_NAMES } from './dbus-hub-names.def';\nimport { DBusRX, DBusRXFunc } from './dbus-rx/dbus-rx.def';\nimport { DBusTopics } from './dbus-topics.def';\nimport { DBusTX } from './dbus-tx/dbus-tx.def';\n\nexport interface DBusHub {\n  readonly hubName: DBusHubNamesList;\n  connect: (dbusInterface: DBusInterface) => void | Promise<void>;\n}\n\nexport function isDBusHub(object: unknown): object is DBusHub {\n  const objAsRecord = object as Record<string, unknown>;\n  return (\n    'connect' in objAsRecord &&\n    'hubName' in objAsRecord &&\n    typeof objAsRecord.hubName === 'string' &&\n    objAsRecord.hubName in DBUS_HUB_NAMES\n  );\n}\n\nexport class DBusInterface {\n  private RXs = new Set<DBusRX>();\n\n  private TXs = new Set<DBusTX>();\n\n  private RXsPlugMap = new Map<DBusTopics, Set<DBusRX>>();\n\n  constructor(\n    private readonly arrowedGetNewTX: (desc?: string) => DBusTX,\n    private readonly arrowedGetNewRX: (\n      func: DBusRXFunc,\n      desc?: string,\n    ) => DBusRX,\n    private readonly arrowedPlugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    private readonly arrowedUnplugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    public readonly attachSubHub: (\n      subHub: DBusHub,\n      subSuffix?: string,\n    ) => void | Promise<void>,\n  ) {}\n\n  getNewRX(func: DBusRXFunc, desc?: string) {\n    const rx = this.arrowedGetNewRX(func, desc);\n    this.RXs.add(rx);\n    return rx;\n  }\n\n  getNewTX(desc?: string) {\n    const tx = this.arrowedGetNewTX(desc);\n    this.TXs.add(tx);\n    return tx;\n  }\n\n  plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.RXsPlugMap.has(topic)) this.RXsPlugMap.set(topic, new Set());\n    this.RXsPlugMap.get(topic)?.add(rx);\n    this.arrowedPlugRX(topic, rx);\n  }\n\n  unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.RXsPlugMap.get(topic)?.delete(rx);\n    this.arrowedUnplugRX(topic, rx);\n  }\n}\n","import { DBusTXData } from '../dbus-tx/dbus-tx-data.def';\n\nexport type DBusRXFunc = (data: DBusTXData) => Promise<unknown>;\n\nexport class DBusRX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly func: DBusRXFunc,\n    readonly desc?: string,\n  ) {}\n}\n","export enum DBusTopics {\n  ROUTING,\n  CAR_ACTION,\n  GARAGE,\n  REST_CLIENT_REQUESTS,\n  GENERATE,\n}\n","import { DBusTXPrepModes, DBusTXWaitModes } from './dbus-tx-modes.def';\n\nexport class DBusTXDataHeaders {\n  constructor(\n    readonly hubName: string,\n    readonly txId: string,\n    readonly txRegNumber: number,\n    readonly waitMode: DBusTXWaitModes,\n    readonly prepMode: DBusTXPrepModes,\n    readonly txDesc?: string,\n  ) {}\n}\n","import { DBusMsg } from '../msgs/dbus-msg.def';\nimport { DBusTXDataHeaders } from './dbus-tx-data-headers.def';\n\nexport class DBusTXData {\n  constructor(readonly headers: DBusTXDataHeaders, readonly msg: DBusMsg) {}\n}\n","export enum DBusTXWaitModes {\n  nowait,\n  all,\n  allSetled,\n  manual,\n}\n\nexport enum DBusTXPrepModes {\n  clone,\n  freeze,\n}\n","import { DBusTXOptions } from './dbus-tx-options.def';\n\nexport class DBusTX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly transmit: (options: DBusTXOptions) => Promise<unknown>,\n  ) {}\n}\n","import { DBusTopics } from '../dbus-topics.def';\n\nexport abstract class DBusMsg {\n  constructor(\n    readonly topic: DBusTopics,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {}\n}\n","export class Pager {\n  private firstPageNumber = 1;\n\n  private currPageNumber = this.firstPageNumber;\n\n  private lastPageNumber = 0;\n\n  private pagerSpan = document.createElement('span');\n\n  private entriesCount = 0;\n\n  private callbackIsCalled = false;\n\n  constructor(\n    private entriesPerPage: number,\n    protected readonly listCallback: (dir: 'prev' | 'next') => Promise<boolean>,\n    private btnPrevPage = document.createElement('button'),\n    private btnNextPage = document.createElement('button'),\n  ) {\n    const btnNextSpan = document.createElement('span');\n    btnNextSpan.textContent = 'Next page';\n    this.btnNextPage.append(btnNextSpan);\n\n    const btnPrevSpan = document.createElement('span');\n    btnPrevSpan.textContent = 'Prev page';\n    this.btnPrevPage.append(btnPrevSpan);\n\n    this.btnNextPage.addEventListener('click', () => this.callCallback('next'));\n    this.btnPrevPage.addEventListener('click', () => this.callCallback('prev'));\n  }\n\n  public toogleLock(lock: boolean) {\n    this.toggleBtnsDisabled(lock);\n  }\n\n  public getEntriesPerPage(): number {\n    return this.entriesPerPage;\n  }\n\n  public setLastPageNumber(n: number) {\n    this.lastPageNumber = n;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public setEntriesCount(n: number) {\n    this.entriesCount = n;\n    this.lastPageNumber = Math.ceil(this.entriesCount / this.entriesPerPage);\n    this.pagerSpan.textContent = `Entries: ${n}, Pages: ${this.lastPageNumber}`;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public getCurrPageNumber() {\n    return this.currPageNumber;\n  }\n\n  public getBtnPrevPage(): HTMLSpanElement {\n    return this.btnPrevPage;\n  }\n\n  public getBtnNextPage(): HTMLSpanElement {\n    return this.btnNextPage;\n  }\n\n  public getPagerSpan(): HTMLSpanElement {\n    return this.pagerSpan;\n  }\n\n  tryChangePage(dir: 'prev' | 'next') {\n    return this.callCallback(dir);\n  }\n\n  private async callCallback(dir: 'prev' | 'next') {\n    this.callbackIsCalled = true;\n    this.toggleBtnsDisabled(true);\n    const pageIsChanged = await this.listCallback(dir);\n    if (pageIsChanged) {\n      switch (dir) {\n        case 'next':\n          this.currPageNumber++;\n          break;\n        case 'prev':\n          this.currPageNumber--;\n          break;\n        default:\n          break;\n      }\n    }\n    this.toggleBtnsDisabled(false);\n    this.callbackIsCalled = false;\n  }\n\n  private toggleBtnsDisabled(state: boolean) {\n    if (state === true) {\n      this.btnPrevPage.disabled = true;\n      this.btnNextPage.disabled = true;\n      return;\n    }\n\n    if (this.currPageNumber > this.firstPageNumber)\n      this.btnPrevPage.disabled = false;\n    else this.btnPrevPage.disabled = true;\n\n    if (this.currPageNumber < this.lastPageNumber)\n      this.btnNextPage.disabled = false;\n    else this.btnNextPage.disabled = true;\n  }\n}\n","import { DBusTopics } from '../../dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgRoutingMsg extends DBusMsg {\n  constructor(rxIds?: string[], prefResponseRxIds?: string[]) {\n    super(DBusTopics.ROUTING, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\nimport { ROUTES } from '../../routes.def';\n\nexport class DBusMsgRouteIsChangedMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly newRoute: keyof typeof ROUTES | string,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","export class SimpleRouterAgent {\n  constructor(\n    readonly type: string,\n    readonly path: string,\n    readonly callback: CallableFunction,\n    readonly getStateCallback?: CallableFunction,\n    readonly setStateCallback?: CallableFunction,\n  ) {}\n}\n","import { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_HUB_NAMES } from '../dbus/defs/dbus-hub-names.def';\nimport { DBusHub, DBusInterface } from '../dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRouteIsChangedMsg } from './dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { SimpleRouterAgent } from './simple-router-agent';\n\nexport interface RouterOptions {\n  mode: string;\n  onlyDBus?: true;\n  defaultRoot?: string;\n  defaultAgent?: SimpleRouterAgent;\n}\n\nexport class SimpleRouter implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.ROUTER;\n\n  private agents: Set<SimpleRouterAgent> = new Set();\n\n  private options: RouterOptions;\n\n  private currRoute: string | undefined;\n\n  private txs: Set<DBusTX> = new Set();\n\n  private defaultAgent: SimpleRouterAgent | undefined;\n\n  private restrictions: Set<() => Promise<boolean>> = new Set();\n\n  constructor(options: RouterOptions) {\n    switch (options.mode) {\n      case '#':\n        // just filter that # mode\n        break;\n      case '?':\n        throw new Error(`${options.mode} is not supported yet!`);\n      default:\n        throw new Error(`${options.mode} is not supported!`);\n    }\n    this.options = OBJ_PROCESSOR.deepFreeze(options);\n\n    window.addEventListener('popstate', async () => {\n      if (window.location.href === this.currRoute) return;\n\n      if (this.restrictions.size > 0) {\n        const wantedRoute = window.location.href;\n\n        if (this.currRoute) {\n          window.location.href = this.currRoute;\n        } else if (this.options.defaultRoot) {\n          window.location.href = `${window.location.host}/${this.options.defaultRoot}`;\n        }\n        const arr = [...this.restrictions.values()];\n        const promises = arr.map(arrow => arrow());\n        const result = await Promise.all(promises);\n        let cancelRouteChange = false;\n\n        if (Array.isArray(result)) {\n          for (let i = 0; i < result.length; i++) {\n            if (typeof result[i] !== 'boolean')\n              throw new Error('restrict func returned not boolean value!');\n\n            if (!result[i]) cancelRouteChange = true;\n            else {\n              const func = arr[i];\n\n              if (func) this.restrictions.delete(func);\n            }\n          }\n        }\n\n        if (!cancelRouteChange) window.location.href = wantedRoute;\n      } else {\n        this.activateWantedAgents();\n      }\n    });\n  }\n\n  activateWantedAgents(): boolean | Error[] {\n    this.currRoute = window.location.href;\n    let activatedCount = 0;\n    const errors = [];\n\n    if (!this.options.onlyDBus && this.options.mode === '#') {\n      const agentsArr = [...this.agents];\n      for (let i = 0; i < this.agents.size; i++) {\n        if (agentsArr[i]?.path === window.location.hash) {\n          try {\n            agentsArr[i]?.callback();\n          } catch (error) {\n            error.push(error);\n          }\n          activatedCount++;\n          break;\n        }\n      }\n\n      if (activatedCount === 0) {\n        if (\n          this.defaultAgent &&\n          this.options.defaultRoot === window.location.hash\n        ) {\n          this.defaultAgent.callback();\n        } else {\n          errors.push(new Error('Agent is not finded'));\n        }\n      }\n    }\n\n    if (this.txs.size > 0) {\n      this.txs.forEach(tx => {\n        const msg = new DBusMsgRouteIsChangedMsg(window.location.hash);\n        tx.transmit({\n          msg,\n          waitMode: DBusTXWaitModes.nowait,\n          prepMode: DBusTXPrepModes.freeze,\n        });\n      });\n    }\n\n    if (errors.length > 0) return errors;\n    return activatedCount > 0;\n  }\n\n  addRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.add(agent);\n  }\n\n  removeRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.delete(agent);\n  }\n\n  flushRouterAgents(): void {\n    this.agents.clear();\n  }\n\n  /* not refactored yet\n  private watchRestrictions = async (msg: DataBusRoutingMsg) => {\n    if (msg instanceof DataBusMsgRoutingRoutingRestrictMode) {\n      const func = msg.data.callbackPromiseGenerator as () => Promise<boolean>;\n\n      if (msg.data.mode) {\n        this.restrictions.add(func);\n      } else {\n        this.restrictions.delete(func);\n      }\n    }\n  };\n  */\n\n  connect(int: DBusInterface): void {\n    const tx = int.getNewTX('broadcasting route changes');\n    this.txs.add(tx);\n    // watch restriction\n    // not refactored yet\n    // const rx = bus.getNewRX();\n    // bus.registerReceiver(DataBusMsgTopics.ROUTING, msgReceiver);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\n\nexport type EngineResponse = {\n  velocity: number;\n  distance: number;\n};\n\nclass RestClientEngine {\n  private resUrl = '/engine';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  toggleEngine(\n    id: number,\n    status: 'started' | 'stopped',\n  ): Promise<EngineResponse> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=${status}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as EngineResponse))\n        .catch((error: Error) => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  enterDriveMode(id: number): Promise<true | false | 404> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=drive`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          else if (response.status === 500) res(false);\n          else rej(new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT));\n        })\n        .catch((error: Error) => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientEngine('http://127.0.0.1:3000');\n\nconst REST_CLIENT_ENGINE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_ENGINE };\n","import { RegCarData, UnregCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { REST_CLIENT_NAMES } from '../rest-clients-names.def';\n\nclass RestClientGarage {\n  protected clientName = REST_CLIENT_NAMES.GARAGE;\n\n  private resUrl = '/garage';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getCars(\n    page?: number,\n    limit?: number,\n  ): Promise<{ limit: string; cars: RegCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      const url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res({ limit: limitResponse, cars: json as RegCarData[] }))\n        .catch((error: Error) => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  getCar(id: number): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  createCar(unregCar: UnregCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(unregCar),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  deleteCar(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  updateCar(regCar: RegCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${regCar.id}`;\n      const data: UnregCarData = regCar;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientGarage('http://127.0.0.1:3000');\n\nconst REST_CLIENT_GARAGE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_GARAGE };\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\n\nclass RestClientWinnersSortOptions {\n  readonly id = 'id';\n\n  readonly wins = 'wins';\n\n  readonly time = 'time';\n}\n\nconst obj = new RestClientWinnersSortOptions();\n\nconst REST_CLIENT_WINNERS_SORT_OPTIONS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS_SORT_OPTIONS };\n\nexport type RestClientWinnersSortOptionsList =\n  keyof RestClientWinnersSortOptions;\n","import { WinnerCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { RestClientWinnersSortOptionsList } from './rest-client-winners.def';\n\nclass RestClientWinners {\n  private resUrl = '/winners';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getWinners(\n    page = 0,\n    limit?: number,\n    sort?: RestClientWinnersSortOptionsList,\n    order?: 'ASC' | 'DESC',\n  ): Promise<{ limit: string; cars: WinnerCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      let url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      if (sort) url += `&_sort=${sort}`;\n      if (order) url += `&_order=${order}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json =>\n          res({ limit: limitResponse, cars: json as WinnerCarData[] }),\n        )\n        .catch((error: Error) => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  getWinner(id: number): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  createWinner(winnerCarData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(winnerCarData),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  deleteWinner(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n\n  updateWinner(winnerData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${winnerData.id}`;\n      const data: WinnerCarData = winnerData;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message === 'Failed to fetch')\n            rej(new Error(REST_CLIENT_ERROR.CONNECTION_REFUSED));\n          else rej(REST_CLIENT_ERROR.UNKNOWN_ERROR);\n        });\n    });\n  }\n}\n\nconst obj = new RestClientWinners('http://127.0.0.1:3000');\n\nconst REST_CLIENT_WINNERS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nconst restClientError = {\n  UNEXPECTED_RESULT: 'UNEXPECTED_RESULT',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n  CONNECTION_REFUSED: 'CONNECTION_REFUSED',\n};\n\nconst REST_CLIENT_ERROR = OBJ_PROCESSOR.deepFreeze(\n  restClientError,\n) as typeof restClientError;\n\nexport { REST_CLIENT_ERROR };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nclass RestClientNames {\n  readonly GARAGE = 'GARAGE';\n\n  readonly WINNERS = 'WINNERS';\n}\n\nconst REST_CLIENT_NAMES = new RestClientNames();\n\nOBJ_PROCESSOR.deepFreeze(REST_CLIENT_NAMES);\n\nexport { REST_CLIENT_NAMES };\n\nexport type RestClientNamesList = keyof RestClientNames;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { App } from './app';\n\nwindow.addEventListener('load', () => {\n  const appDiv = document.createElement('div');\n  document.body.append(appDiv);\n  const app = new App(appDiv);\n});\n"],"sourceRoot":""}