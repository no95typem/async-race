{"version":3,"sources":["webpack://async-race/./src/components/garage/garage.scss?dc9e","webpack://async-race/./src/components/garage/subcomps/car/car.scss?1a27","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.scss?4682","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.scss?1eb1","webpack://async-race/./src/components/garage/subcomps/track/track.scss?9419","webpack://async-race/./src/components/header/header.scss?92c0","webpack://async-race/./src/components/winners/winners.scss?feec","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.scss?0629","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.scss?22c3","webpack://async-race/./src/styles.scss?cfb3","webpack://async-race/./src/app.ts","webpack://async-race/./src/components/garage/car-actions.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-action-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-created-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-remove-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/car-action/garage-car-select-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-request-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-race-status-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-msg.def.ts","webpack://async-race/./src/components/garage/dbus-msgs/by-topic/garage/garage-reset-req-msg.def.ts","webpack://async-race/./src/components/garage/garage-controller.ts","webpack://async-race/./src/components/garage/garage-driver.ts","webpack://async-race/./src/components/garage/garage-servant.ts","webpack://async-race/./src/components/garage/garage.ts","webpack://async-race/./src/components/garage/subcomps/car/car.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-create.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-proto.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/controller-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/create-update/create-update.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/dbus-msgs/generate-cars-msg.def.ts","webpack://async-race/./src/components/garage/subcomps/main-controls/main-controls.ts","webpack://async-race/./src/components/garage/subcomps/track/track.ts","webpack://async-race/./src/components/header/header.ts","webpack://async-race/./src/components/header/subcomps/nav-item/nav-item.ts","webpack://async-race/./src/components/winners/subcomps/winner-entry.ts","webpack://async-race/./src/components/winners/winners.ts","webpack://async-race/./src/definitions/car-random-data.def.ts","webpack://async-race/./src/lib/components/base-comp/base-comp.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/popup-standalone-modal.ts","webpack://async-race/./src/lib/components/popups/standalone/modal/progress/popup-progress.ts","webpack://async-race/./src/lib/components/popups/standalone/popup-standalone.ts","webpack://async-race/./src/lib/convertors/colors.ts","webpack://async-race/./src/lib/generators/generators.ts","webpack://async-race/./src/lib/interfaces/notifiable.ts","webpack://async-race/./src/lib/processors/obj-processor.ts","webpack://async-race/./src/lib/services/dbus/dbus.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-common-responses.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-errors.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-hub-names.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-interface.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-rx/dbus-rx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-topics.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data-headers.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-data.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def.ts","webpack://async-race/./src/lib/services/dbus/defs/dbus-tx/dbus-tx.def.ts","webpack://async-race/./src/lib/services/dbus/defs/msgs/dbus-msg.def.ts","webpack://async-race/./src/lib/services/pager/pager.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/dbus-msg-routing-msg.def.ts","webpack://async-race/./src/lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg.ts","webpack://async-race/./src/lib/services/simple-router/simple-router-agent.ts","webpack://async-race/./src/lib/services/simple-router/simple-router.ts","webpack://async-race/./src/services/rest-clients/client-engine/rest-client-engine.ts","webpack://async-race/./src/services/rest-clients/client-garage/dbus-msgs.defs/requests-msgs/create-car-msg.def.ts","webpack://async-race/./src/services/rest-clients/client-garage/dbus-msgs.defs/requests-msgs/delete-car-msg.def.ts","webpack://async-race/./src/services/rest-clients/client-garage/rest-client-garage.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.def.ts","webpack://async-race/./src/services/rest-clients/client-winners/rest-client-winners.ts","webpack://async-race/./src/services/rest-clients/dbus-msgs/request-msgs/req-msg.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-errors.def.ts","webpack://async-race/./src/services/rest-clients/rest-clients-names.def.ts","webpack://async-race/webpack/bootstrap","webpack://async-race/webpack/runtime/define property getters","webpack://async-race/webpack/runtime/hasOwnProperty shorthand","webpack://async-race/webpack/runtime/make namespace object","webpack://async-race/./src/entry.ts"],"names":["rootElement","hubName","DBUS_HUB_NAMES","APP","loadedMainComponents","defaultRouterAgent","SimpleRouterAgent","this","loadMainComponent","router","SimpleRouter","mode","defaultRoot","defaultAgent","mainlineDBus","DBus","watchRouterMsgs","async","data","msg","DBusMsgRouteIsChangedMsg","newRoute","DBUS_COMMON_RESPONSES","VOID","window","addEventListener","e","console","log","preventDefault","promise","catch","error","message","REST_CLIENT_ERROR","classList","add","app","header","HeaderComponent","HEADER","append","attachHub","activateWantedAgents","intrfce","routeRX","getNewRX","plugRX","DBusTopics","ROUTING","name","GarageComp","WinnersComp","location","hash","newComponent","currMainComponent","remove","isDBusHub","isNotifiable","notify","CarActions","DBusMsgCarActionMsg","DBusMsg","action","rxIds","prefResponseRxIds","super","CAR_ACTION","DBusMsgCarActionCreatedMsg","car","CREATED","DBusMsgCarActionRemovedMsg","nullifiedContract","REMOVED","DBusMsgCarActionSelectedMsg","notifyChanges","SELECTED","DBusMsgGarageRaceMsg","GARAGE","DBusMsgRaceRequestMsg","DBusMsgGarageRaceStatusMsg","status","DBusMsgGarageResetMsg","DBusMsgGarageResetReqMsg","GarageComponentControllerAkaDirector","tracksContainer","carCtlsBlock","GARAGE_CONTROLLER","txs","Set","entriesPerPage","pagerContainer","document","createElement","carImgRatio","scaleFactor","pagerCallback","dir","reloadData","racingRXFunc","pager","toogleLock","performRace","resetState","carActionsRXFunc","tryChangePage","createCarCtlBlock","index","btns","btnSelect","btnStart","btnReset","btnRm","forEach","btn","numberSpan","textContent","toString","container","connectCtlAndTrack","ctlElem","track","illuminateSelf","garageManagersTeam","GarageManagersTeam","Pager","btnNextPage","getBtnNextPage","btnPrevPage","getBtnPrevPage","pagerInfo","getPagerSpan","redraw","int","getNewTX","autoConnect","carActionsMsgsRX","raceMsgsRX","Promise","res","rej","page","getCurrPageNumber","REST_CLIENT_GARAGE","getCars","getEntriesPerPage","then","response","limit","cars","setEntriesCount","Number","parseInt","length","nullifyContracts","newContracts","TrackComp","carComp","CarComp","placeCar","push","addContracts","clearDOM","getContracts","map","contract","geometry","calcGeometry","setStylesForTracks","drawTracks","drawCarsCtls","firstChild","style","getComputedStyle","containerHeight","parseFloat","height","paddingBottom","paddingTop","firstAutoHeight","innerWidth","heights","heightSum","contracts","factor","carTrackHeight","excessHeight","heightsReversed","sort","a","b","displacementBase","size","displacements","midIndex","displacement","DISPLACEMENT_FIX","paddingBase","paddingAddShift","trackHeights","setProperty","ctlBlocks","block","GarageDriverCommands","GarageDriver","Error","undefined","flags","thisDriveId","genUniqId","currDriveId","TurnOnTheIgnition","driveParams","drivePromise","drive","params","REST_CLIENT_ENGINE","toggleEngine","currCar","id","stopCar","time","rollBack","driveId","calculateDriveTime","enterDriveMode","rollForward","broken","stop","distance","velocity","freeDrivers","busyDrivers","Map","carCtlsClickListener","target","HTMLElement","elem","HTMLButtonElement","parentElement","currRaceId","handleSelection","handleRemoving","startDriving","handleRestoreState","handleWinner","winnerCar","REST_CLIENT_WINNERS","getWinner","winnerRecord","updatedWinnerData","wins","toFixed","updateWinner","NOT_FOUND","newWinnerData","createWinner","tx","tryFreeDrivers","delete","clear","—Åontracts","newContract","prepareForRace","rollbackCars","broadcastRaceStatus","driver","get","returnToStart","choosedDriver","find","isFree","set","putBehindTheWheel","performDrivingProtocol","deleteCar","deleteWinner","transmit","prepMode","DBusTXPrepModes","freeze","waitMode","DBusTXWaitModes","nowait","genSelectCallback","rollbacks","all","thisRaceId","raceData","raceId","arrivedByOrder","notArrived","participantsCount","isFinishVisible","stratedCount","processRace","finally","result","handleDriveResult","getOutOfTheCar","has","updateData","BaseComp","mainControlsComp","MainControlsComp","carsCtlsBlock","_rootElement","garage","selfCtlsBlock","bg","garage__bg","bgVideo","controls","loop","defaultMuted","muted","autoplay","src","controller","onloadeddata","startWorking","attachSubHub","_currCar","canvas","tireBack","btnSelect$","btnRm$","_spanCarName","btnStart$","btnReset$","selectSpan","rmSpan","startSpan","resetSpan","disabled","drawCar","color","drawWheels","rootElem","wheelImg","Image","CAR_WHEEL_IMG_SRC","onload","backwardWheelImg","OBJ_PROCESSOR","deepClone","carData","currAnimation","playbackRate","play","onfinish","anim","commitStyles","rootStyle","selfStyle","rootWidth","width","paddingLeft","paddingRight","selfWidth","coordinateInPercents","animate","transform","duration","easing","fill","oncancel","pause","img","frameNumber","CAR_EXPLOSION_IMG_DATA","BASE_URL","EXTENSION","setTimeout","FRAME_TIME_MS","FRAMES_COUNT","hexColor","CAR_BODY_IMG_SRC","ctx","getContext","shadowColor","shadowBlur","drawImage","paintCarBody","imageData","getImageData","rgb","hexToRgb","j","i","red","green","blue","blueDiff","blueDiffThreshold","threshold","r","g","putImageData","TIMING_FUNCTION","CreateCompController","CreateUpdateCompControllerProto","elements","inputText","inputColor","setupBtnCreate","unregCar","value","createCar","clone","state","UpdateCompController","rxs","chooseCarListener","choosedCar","notifyCb","toogleCtlsDisabled","setupBtnUpdate","rx","updateCar","CreateUpdateComponent","type","btnText","CREATE_UPDATE","textInput","colorInput","root","DBusMsgGenerateCarsMsg","GENERATE","MAIN_CONTROLS","createComponent","updateComponent","btnRace","btnGenerate","popup","PopupStandaloneModalProgressComp","generateClickListener","transmissions","transmission","allSetled","allSettled","reset","setText","show","generate","genCb","hide","resolveMsg","progress","setProgress","raceClickListener","resetClickListener","genRandomCarName","manufacturerNumber","getRandomInt","CAR_MODEL_LIST_KEYS","manufacturerName","models","CAR_MODEL_LIST","rxFuncForRaceMsgs","btnsBlock","renderBtns","span","btnBlock","total","left","cb","genLeft","unregCarData","genRandomHexColor","winner","getRandomArbitraryInt","topBlock","illuminate","track_illuminated","hasChildNodes","childNodes","child","spanCarName","buses","illuminateNavItem","anchors","anchor","getAttribute","logo","header__logo","firstSpan","secondSpan","navContainer","ul","li","svg","navItems","NavItem","item","illuminateRX","text","href","styles","iconSrc","_anchor","setAttribute","iconImage","WinnerRowComp","winnerData","indexElem","idElem","carPreviewBox","nameElem","winsElem","bestTimeElem","carPreview","genPreview","table","tableBody","tableHead","thId","thCar","thName","thWins","thBestTime","currOrder","currSort","refillTable","tableHeadClickListener","REST_CLIENT_WINNERS_SORT_OPTIONS","contains","refreshTableHeader","currSortedElem","winners","pagerBtnsContainer","pagerSpan","renderHeader","tr","thIndex","specialSort","specialOrder","order","getWinners","rows","Array","promises","indexInc","getCar","totalIndex","row","getCarPreview","TEXT_CONTENT_ENG","deepFreeze","Lamborghini","Ferrari","Koenigsegg","Object","keys","tag","PopupStandaloneModalComp","PopupStandaloneComp","closeArea","body","barContainer","bar","dataset","removeProperty","hex","c","test","split","slice","arr","Uint8Array","crypto","getRandomValues","join","max","Math","floor","random","min","object","obj","record","prop","isFrozen","isArray","v","n","cloneNode","Blob","k","setPrototypeOf","getPrototypeOf","network","idCounter","createdRXs","createdTXs","attachedHubs","occupiedNames","callRXFunc","headers","clonedData","func","handleClone","freezedData","handleFreeze","DBUS_ERRORS","UNEXPECTED_PREP_MODE","busId","hub","suffix","createInterfaceForHub","prefix","HUB_IS_ALREADY_ATTACHED","HUB_NAME_NOT_AUTHORIZED","HUB_NAME_IS_OCCUPIED","dbusInterface","DBusInterface","desc","genNewRX","topic","unplugRX","subHub","subSuffix","connect","regNumber","DBusTX","opts","head","DBusTXDataHeaders","DBusTXData","freezedTX","DBusRX","freezedRX","XENO_RX","TOPIC_IS_NOT_EXIST","TOPIC_HAS_NO_RXS","choosedRXs","includes","PREF_RXS_ARE_NOT_EXIST","manual","BAD_REQUEST","ROUTER","objAsRecord","arrowedGetNewTX","arrowedGetNewRX","arrowedPlugRX","arrowedUnplugRX","RXs","TXs","RXsPlugMap","txId","txRegNumber","txDesc","listCallback","firstPageNumber","currPageNumber","lastPageNumber","entriesCount","callbackIsCalled","btnNextSpan","btnPrevSpan","callCallback","lock","toggleBtnsDisabled","ceil","DBusMsgRoutingMsg","path","callback","getStateCallback","setStateCallback","options","agents","restrictions","currRoute","wantedRoute","host","values","arrow","cancelRouteChange","activatedCount","errors","onlyDBus","agentsArr","agent","baseUrl","resUrl","fullUrl","url","fetch","method","json","UNEXPECTED_RESULT","UNKNOWN_ERROR","DBusMsgRESTReqGarageCreateCarMsg","DBusMsgRESTReqMsg","REST_CLIENT_NAMES","DBusMsgRESTReqGarageDeleteCarMsg","clientName","requestRXFunc","destClient","requestRX","REST_CLIENT_REQUESTS","limitStr","limitResponse","JSON","stringify","regCar","winnerCarData","WINNERS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","d","definition","key","o","defineProperty","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","appDiv","App"],"mappings":"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","file":"main.fc1f9c110a74d08da8bd.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"garage\":\"_21SC4SGf5mTamWfNdNRR\",\"garage__bg\":\"_2VnbeeG4HKnZfSWUedizHh\",\"garage__track-container\":\"_1rsPT6UvHnbHI-FUFvPaSe\",\"garage-bg\":\"-BA3r_cxZwAYkgGQVVZeo\",\"garage-bg__video\":\"_3byu86MCf3s6B7JQuetNAw\",\"garage-bg__car-ctl-btn\":\"_3upDU-ngLjybmFg4wiVvfl\",\"garage-bg__car-ctl-block-number\":\"_3dT19pzigDW1UKuPVLEguq\",\"garage-bg__car-ctl-block\":\"_2e0Ox8Joh0jw60ztR_rVt5\",\"garage-bg__cars-ctls-block\":\"wMVLCRcoluFnZleBHWXlm\",\"garage-bg__self-ctls-block\":\"_2VQVmkB2amN4PG9XCyFye9\",\"garage-bg__pager\":\"_2avafWgl8XDS2KLJswKq0H\",\"garage-bg__pager-span\":\"_3ktlpozBQghco3VMHLJBo1\",\"garage-bg__pager-btn\":\"_2QdjLaEnj3Balh89eZAya4\",\"synthwave-background\":\"_2pUKJme_w_0KTS_JoVNV5b\",\"synthwave-background_intro\":\"OfV0nuAQOL-MWGdjOHOsE\",\"move-grid\":\"_1MqERRNbzZtvdd9iE43L04\",\"synthwave-background_race-mode\":\"n1z9UH35nfilmkK2lmQvV\",\"race\":\"_375ItX4gjZY-ZT7KrEfBgG\"};","// extracted by mini-css-extract-plugin\nexport default {\"car-div\":\"_3pRKwGaRv59JcJqlApAnkk\",\"car-div__canvas\":\"rH6_OMXna8-zeemMHF11D\",\"car-div__wheel\":\"_3WNDl-LGGtViqzAfLLX4CB\",\"car-div__wheel_forward\":\"_3Rdh32fs7fi-95LcabV_Ed\",\"car-div__wheel_backward\":\"_3xptMXOOFn6YcMVYMigRMa\",\"car-div__explosion\":\"_3w8-mlW0m2zLABohqiDQ3e\",\"car-div_rollForward\":\"_3xWmq3Q2UpNiq2nICrGAIN\",\"car-div-anim\":\"_381V-1xCMVwSdGT0FxnQiO\",\"tire-anim\":\"_2Qs9DAZPIqZivw_0ON2Vot\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_2uo9WXSTJyDD3jBlT_quev\",\"text-input\":\"_2YNdYEaErpy02Ske_bZONx\",\"color-input\":\"_3Ye7rbfoBnq4HZn4H-yDB8\"};","// extracted by mini-css-extract-plugin\nexport default {\"main-controls\":\"_2b_svto1O0DGSO3_579_Xj\",\"btn-block\":\"_262VSHreYXfZUHLGeCJEvZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"track\":\"_2hDrLwwwZMiv2NrI-XZZqJ\",\"track_illuminated\":\"_3zXlLAoKpXJ_jlpauHLjHR\",\"track__controls-block\":\"_3pqcODoHFqX9rxmLKBnhD4\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_3TTTWNe5aoHesw4iV0YUGU\",\"header__logo\":\"_2idUQTZia_1M_0xkhMkXf8\",\"header-nav\":\"_7vejZGT8OzUejTiWyGs1P\",\"header-nav__item\":\"_1NYwlHRXmh2YGu63soBsjx\",\"header-nav__anchor\":\"_2n39qEg5Iz5Tym2Z0Jrjz9\",\"header-nav__anchor_active\":\"_2bRvd3RlExbbSpyXLuxSdS\",\"header-nav__svg\":\"_2FCXcgNK7Jgl9f3ZK-O56I\",\"header-nav__span\":\"_1NVrpdaSQLvqho4VNqQqit\",\"header-nav__list\":\"_1vy8OijKt-Cy7SGXyM4ek9\",\"header-nav__list_disabled\":\"_25SilQm6mkAlbl-WpajKBY\"};","// extracted by mini-css-extract-plugin\nexport default {\"winners\":\"HVDfoBgyIQ4teF5EKFzcD\",\"table\":\"_3mJKnd573Tt4WspNl7gf1J\",\"table__car-preview-box\":\"_86kcZK8UgXIsvYD-wpDED\",\"table__can-be-sorted\":\"_3Xa74hpyx3g6XUuZ9fB9Cm\",\"table__sorted-elem\":\"rfPuVNCW0Sd4nzQGO8-R8\",\"table__sorted-elem_asc\":\"N6296gY2c5AFEX4KjE4I4\",\"table__sorted-elem_desc\":\"_37bMOUs2OF28ZqMubJCPnM\",\"pager\":\"_2q-noyJbwIpKOMhl7AWlq5\",\"pager-span\":\"_1O8erRuDz9RWa3C9tqnUm-\",\"pager-btn\":\"_3OktYstRgXgDE6zlpOM6LA\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup-modal\":\"_3KlZOyoPt2P4FT1Ofdi1oz\",\"popup-bg\":\"_1QGzfQYEHvrYonFptRzkG6\",\"popup-body\":\"_3zDyJwNy615xogiYvCl4vt\",\"popup-body-header\":\"_2DglTs5KJlA1QJriRI6bVZ\",\"popup-body-text\":\"_2oMxBL_Jv1KW3bHu3sVdaA\",\"popup-body__btn-close\":\"HV1Imp7Np5N8O5nUXwQsS\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1KBIW4BNGKHwQtRcKc6JIF\",\"hue-rotate\":\"_1t6lrd-wEBCB6ei-o9kDmk\",\"bar\":\"_2DWg3PnmWwM25SBd7sLJQK\",\"body\":\"_24wm1l_qZHsMTx2Oy-enF4\",\"text\":\"_1UFV3thankQQ1R2Ly1Zle2\"};","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"_2ljk-3_Qk7EjDct5a15qZP\",\"main-component\":\"_394erWdWCWrQmkYlaBZ1L5\",\"btn\":\"_3cliA46UjEIGfEKGRnJzCZ\",\"btn-1\":\"_7q7sGuJSjnM-fV8DfMtl5\",\"btn-4\":\"KE9Fso9VtLV8xX_x8IAiF\",\"btn-6\":\"_35BryCkuNmCUsRxmBw_Y1\",\"btn-9\":\"_9jiLaDmXVuzxrmO3P-9mb\",\"btn-13\":\"_1872fOtVBrHuR0iXYtVhRT\",\"btn-15\":\"TNTO3dtfSfS40M6g8U274\",\"glitched-text\":\"xB_2phBrodgB6jPUYYf8V\",\"glitch-animation-1\":\"_2N8U2GaQpCAdpuVv32CY9B\",\"glitch-animation-2\":\"_1g8DjVAkpXimf-Ld9-LLk8\"};","import { BaseComp } from './lib/components/base-comp/base-comp';\nimport { SimpleRouterAgent } from './lib/services/simple-router/simple-router-agent';\nimport { SimpleRouter } from './lib/services/simple-router/simple-router';\nimport { DBus } from './lib/services/dbus/dbus';\nimport { DBusMsgRouteIsChangedMsg } from './lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { DBusTopics } from './lib/services/dbus/defs/dbus-topics.def';\nimport { DBUS_COMMON_RESPONSES } from './lib/services/dbus/defs/dbus-common-responses.def';\nimport { HeaderComponent } from './components/header/header';\n\nimport sharedStyles from './styles.scss';\nimport { DBusTXData } from './lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { GarageComp } from './components/garage/garage';\nimport {\n  DBusHub,\n  isDBusHub,\n  DBusInterface,\n} from './lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './lib/services/dbus/defs/dbus-hub-names.def';\nimport { WinnersComp } from './components/winners/winners';\nimport { REST_CLIENT_ERROR } from './services/rest-clients/rest-clients-errors.def';\nimport { isNotifiable } from './lib/interfaces/notifiable';\n\nexport class App implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.APP;\n\n  protected loadedMainComponents: Record<string, BaseComp> = {};\n\n  protected currMainComponent: BaseComp | undefined;\n\n  protected defaultRouterAgent = new SimpleRouterAgent('hash', '', () =>\n    this.loadMainComponent('default'),\n  );\n\n  protected router = new SimpleRouter({\n    mode: '#',\n    defaultRoot: '',\n    defaultAgent: this.defaultRouterAgent,\n  });\n\n  protected mainlineDBus = new DBus();\n\n  // protected garageRestClient = new RestClientGarage('http://127.0.0.1:3000');\n\n  constructor(private readonly rootElement: HTMLElement) {\n    window.addEventListener('error', e => console.log(e));\n    window.addEventListener('unhandledrejection', e => {\n      e.preventDefault();\n      e.promise.catch((error: Error) => {\n        if (error.message in REST_CLIENT_ERROR) console.log(error.message);\n      });\n    });\n\n    this.rootElement.classList.add(sharedStyles.app);\n\n    // asyncFunc();\n    const header = new HeaderComponent(DBUS_HUB_NAMES.HEADER);\n    this.rootElement.append(header.rootElement);\n\n    // this.garage.rootElement.classList.add(sharedStyles['main-component']);\n    // this.rootElement.append(this.garage.rootElement);\n\n    this.mainlineDBus.attachHub(header);\n    this.mainlineDBus.attachHub(this);\n    this.mainlineDBus.attachHub(this.router);\n\n    this.router.activateWantedAgents();\n  }\n\n  connect(intrfce: DBusInterface) {\n    const routeRX = intrfce.getNewRX(this.watchRouterMsgs);\n    intrfce.plugRX(DBusTopics.ROUTING, routeRX);\n  }\n\n  private watchRouterMsgs = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      // TODO: Rework with enum!?\n      this.loadMainComponent(msg.newRoute);\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private loadMainComponent(name: string): void {\n    if (!(name in this.loadedMainComponents)) {\n      switch (name) {\n        case '#garage':\n          this.loadedMainComponents[`${name}`] = new GarageComp();\n          break;\n        case '#winners':\n          this.loadedMainComponents[`${name}`] = new WinnersComp();\n          break;\n        default:\n          window.location.hash = '#garage';\n          break;\n      }\n    }\n    const newComponent = this.loadedMainComponents[`${name}`];\n\n    if (newComponent) {\n      if (this.currMainComponent) {\n        this.currMainComponent.rootElement.remove();\n      }\n\n      this.currMainComponent = newComponent;\n      newComponent.rootElement.classList.add(sharedStyles['main-component']);\n      this.rootElement.append(newComponent.rootElement);\n\n      if (isDBusHub(this.currMainComponent)) {\n        try {\n          this.mainlineDBus.attachHub(this.currMainComponent);\n        } catch {\n          // no need to catch\n        }\n      }\n      if (isNotifiable(this.currMainComponent)) {\n        console.log('notify');\n        this.currMainComponent.notify(null);\n      }\n    }\n  }\n}\n","export enum CarActions {\n  CREATED,\n  SELECTED,\n  REMOVED,\n  UPDATED,\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { CarActions } from '../../../car-actions.def';\n\nexport class DBusMsgCarActionMsg extends DBusMsg {\n  constructor(\n    readonly action: CarActions,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.CAR_ACTION, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionCreatedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.CREATED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { GarageServicemanContract } from '../../../garage-serviceman-contract.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionRemovedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly nullifiedContract: GarageServicemanContract,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.REMOVED, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { CarActions } from '../../../car-actions.def';\nimport { DBusMsgCarActionMsg } from './garage-car-action-msg.def';\n\nexport class DBusMsgCarActionSelectedMsg extends DBusMsgCarActionMsg {\n  constructor(\n    readonly car: RegCarData,\n    readonly notifyChanges?: (car: RegCarData) => unknown,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(CarActions.SELECTED, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageRaceMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgRaceRequestMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { RaceStatusesList } from '../../../race-statuses.def';\nimport { DBusMsgGarageRaceMsg } from './garage-race-msg.def';\n\nexport class DBusMsgGarageRaceStatusMsg extends DBusMsgGarageRaceMsg {\n  constructor(\n    readonly status: RaceStatusesList,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgGarageResetMsg extends DBusMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgGarageResetMsg } from './garage-reset-msg.def';\n\nexport class DBusMsgGarageResetReqMsg extends DBusMsgGarageResetMsg {\n  constructor(\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","import { UnregCarData } from '../../definitions/car-data.def';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageManagersTeam } from './garage-servant';\nimport { CarComp } from './subcomps/car/car';\nimport { TrackComp } from './subcomps/track/track';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { DBusMsgCarActionCreatedMsg } from './dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport { DBusMsgRaceRequestMsg } from './dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport { DBusMsgGarageResetReqMsg } from './dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Pager } from '../../lib/services/pager/pager';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\nimport { DBusMsgGenerateCarsMsg } from './subcomps/main-controls/dbus-msgs/generate-cars-msg.def';\n\ntype TracksGeometry = {\n  trackHeights: number[];\n  displacements: number[];\n  paddingBase: number;\n  paddingAddShift: number;\n};\n\nexport class GarageComponentControllerAkaDirector implements DBusHub {\n  static readonly DISPLACEMENT_FIX = -20;\n\n  readonly hubName = DBUS_HUB_NAMES.GARAGE_CONTROLLER;\n\n  protected txs = new Set<DBusTX>();\n\n  private garageManagersTeam: GarageManagersTeam;\n\n  private pager: Pager;\n\n  private entriesPerPage = 7;\n\n  private pagerContainer = document.createElement('div');\n\n  private readonly carImgRatio = 3.78;\n\n  private readonly scaleFactor = 0.95;\n\n  constructor(\n    private tracksContainer: HTMLElement,\n    private carCtlsBlock: HTMLElement,\n  ) {\n    this.garageManagersTeam = new GarageManagersTeam(\n      tracksContainer,\n      carCtlsBlock,\n    );\n\n    this.pagerContainer.classList.add(styles['garage-bg__pager']);\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n\n    const btnNextPage = this.pager.getBtnNextPage();\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['garage-bg__pager-btn'],\n    );\n\n    const pagerInfo = this.pager.getPagerSpan();\n    pagerInfo.classList.add(styles['garage-bg__pager-span']);\n\n    this.pagerContainer.append(btnPrevPage, btnNextPage, pagerInfo);\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.reloadData(dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  startWorking() {\n    this.reloadData('no');\n    window.addEventListener('resize', () => this.redraw());\n  }\n\n  async connect(int: DBusInterface) {\n    this.txs.add(int.getNewTX('send requests to REST Garage client'));\n    this.garageManagersTeam.autoConnect(int);\n\n    const carActionsMsgsRX = int.getNewRX(\n      this.carActionsRXFunc,\n      'monitor cars removes',\n    );\n    int.plugRX(DBusTopics.CAR_ACTION, carActionsMsgsRX);\n\n    const raceMsgsRX = int.getNewRX(this.racingRXFunc, 'handle race requsets');\n    int.plugRX(DBusTopics.GARAGE, raceMsgsRX);\n\n    // const generatorMsgsRX = int.getNewRX(this.generatorRXFunc);\n    // int.plugRX(DBusTopics.GENERATE, generatorMsgsRX);\n  }\n\n  // private generatorRXFunc = async (data: DBusTXData) => {\n  //   if (data.msg instanceof DBusMsgGenerateCarsMsg) {\n  //     if (data.msg.status === 'start') re\n  //   }\n  //   return DBUS_COMMON_RESPONSES.VOID;\n  // };\n\n  private racingRXFunc = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgRaceRequestMsg) {\n      this.pager.toogleLock(true);\n      await this.performRace();\n      this.pager.toogleLock(false);\n      return true;\n    }\n    if (data.msg instanceof DBusMsgGarageResetReqMsg) {\n      return this.resetState();\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private async resetState() {\n    const reseted = await this.garageManagersTeam.resetState();\n    return reseted;\n  }\n\n  private async performRace() {\n    await this.garageManagersTeam.performRace();\n  }\n\n  private carActionsRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgCarActionRemovedMsg ||\n      data.msg instanceof DBusMsgCarActionCreatedMsg\n    ) {\n      try {\n        this.reloadData('no');\n      } catch {\n        this.pager.tryChangePage('prev');\n      }\n    }\n\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  private reloadData(dir: 'prev' | 'next' | 'no') {\n    return new Promise<boolean>((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : dir === 'prev'\n          ? this.pager.getCurrPageNumber() - 1\n          : dir === 'no'\n          ? this.pager.getCurrPageNumber()\n          : 1\n        : 1;\n      REST_CLIENT_GARAGE.getCars(page, this.pager.getEntriesPerPage())\n        .then(async response => {\n          const { limit, cars } = response;\n          this.pager.setEntriesCount(Number.parseInt(limit, 10));\n          if (cars.length === 0) {\n            rej();\n            return;\n          }\n          await this.garageManagersTeam.nullifyContracts();\n          const newContracts: GarageServicemanContract[] = [];\n\n          cars.forEach((car, index) => {\n            const track = new TrackComp();\n            const carComp = new CarComp(car, index + 1);\n            track.placeCar(carComp);\n            newContracts.push({ track, car: carComp });\n          });\n\n          this.garageManagersTeam.addContracts(...newContracts);\n          this.garageManagersTeam.resetState();\n          this.redraw();\n          res(true);\n        })\n        .catch(() => {});\n    });\n  }\n\n  private redraw() {\n    this.clearDOM();\n    const tracks = [...this.garageManagersTeam.getContracts()].map(\n      contract => contract.track,\n    );\n\n    const geometry = this.calcGeometry();\n    this.setStylesForTracks(geometry);\n\n    this.drawTracks();\n    this.drawCarsCtls();\n  }\n\n  private clearDOM() {\n    while (this.tracksContainer.firstChild)\n      this.tracksContainer.firstChild.remove();\n    while (this.carCtlsBlock.firstChild) this.carCtlsBlock.firstChild.remove();\n  }\n\n  private calcGeometry(): TracksGeometry {\n    const style = window.getComputedStyle(this.tracksContainer);\n    const containerHeight =\n      Number.parseFloat(style.height) -\n      Number.parseFloat(style.paddingBottom) -\n      Number.parseFloat(style.paddingTop);\n    const firstAutoWidth = window.innerWidth * 0.2;\n    const firstAutoHeight = firstAutoWidth / this.carImgRatio;\n    const heights: number[] = [];\n    let heightSum = 0;\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      const factor = this.scaleFactor ** index;\n      const carTrackHeight = firstAutoHeight * factor;\n      heightSum += carTrackHeight;\n      heights.push(carTrackHeight);\n    });\n\n    const excessHeight = heightSum - containerHeight;\n    const heightsReversed = heights.sort((a, b) => a - b);\n    const displacementBase =\n      excessHeight > 0\n        ? excessHeight / this.garageManagersTeam.getContracts().size - 2\n        : 0;\n\n    const displacements: number[] = [];\n    const midIndex = (contracts.length - 1) / 2;\n\n    contracts.forEach((contract, index) => {\n      const diff = index - midIndex;\n      const displacement =\n        displacementBase * -diff +\n        GarageComponentControllerAkaDirector.DISPLACEMENT_FIX;\n      displacements.push(displacement);\n    });\n\n    const paddingBase = (heightsReversed[0] as number) * this.carImgRatio;\n    const paddingAddShift = (20 * window.innerWidth) / 1920; // 20 - is good looking on 1920\n\n    return {\n      trackHeights: heightsReversed,\n      displacements,\n      paddingBase,\n      paddingAddShift,\n    };\n  }\n\n  private setStylesForTracks(geometry: TracksGeometry) {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n\n    contracts.forEach((contract, index) => {\n      contract.track.rootElement.style.setProperty(\n        'height',\n        `${geometry.trackHeights[index]}px`,\n      );\n\n      // if (index !== 0) {\n      contract.track.rootElement.style.setProperty(\n        'top',\n        `${geometry.displacements[index]}px`,\n      );\n      // }\n\n      contract.track.rootElement.style.setProperty('z-index', `${index + 1}`);\n\n      contract.track.rootElement.style.setProperty(\n        '--padding-w',\n        `${\n          (geometry.trackHeights[\n            geometry.trackHeights.length - 1 - index\n          ] as number) *\n            this.carImgRatio -\n          geometry.paddingBase +\n          geometry.paddingAddShift * (contracts.length - 1 - index)\n        }px`,\n      );\n    });\n  }\n\n  private drawTracks() {\n    this.tracksContainer.append(\n      this.pagerContainer,\n      ...[...this.garageManagersTeam.getContracts()].map(\n        contract => contract.track.rootElement,\n      ),\n    );\n  }\n\n  private drawCarsCtls() {\n    const contracts = [...this.garageManagersTeam.getContracts()];\n    const ctlBlocks = contracts.map((contract, index) => {\n      const block = this.createCarCtlBlock(contract.car, index + 1);\n      this.connectCtlAndTrack(block, contract.track);\n      return block;\n    });\n    this.carCtlsBlock.append(...ctlBlocks);\n  }\n\n  private createCarCtlBlock = (car: CarComp, index: number): HTMLElement => {\n    const btns = [car.btnSelect, car.btnStart, car.btnReset, car.btnRm];\n\n    car.btnStart.classList.add(sharedStyles['btn-15']);\n    car.btnSelect.classList.add(sharedStyles['btn-13']);\n    car.btnReset.classList.add(sharedStyles['btn-9']);\n    car.btnRm.classList.add(sharedStyles['btn-4']);\n\n    btns.forEach(btn => {\n      btn.classList.add(sharedStyles.btn, styles['garage-bg__car-ctl-btn']);\n    });\n\n    const numberSpan = document.createElement('span');\n    numberSpan.classList.add(styles['garage-bg__car-ctl-block-number']);\n    numberSpan.textContent = index.toString();\n    const container = document.createElement('div');\n    container.classList.add(styles['garage-bg__car-ctl-block']);\n    container.append(numberSpan, ...btns);\n    return container;\n  };\n\n  private connectCtlAndTrack = (ctlElem: HTMLElement, track: TrackComp) => {\n    ctlElem.addEventListener(\n      'mouseover',\n      () => track.illuminateSelf(true),\n      true,\n    );\n    ctlElem.addEventListener(\n      'mouseout',\n      e => {\n        console.log(e);\n        track.illuminateSelf(false);\n      },\n      true,\n    );\n  };\n}\n","import { RegCarData } from '../../definitions/car-data.def';\nimport { genUniqId } from '../../lib/generators/generators';\nimport {\n  EngineResponse,\n  REST_CLIENT_ENGINE,\n} from '../../services/rest-clients/client-engine/rest-client-engine';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { CarComp } from './subcomps/car/car';\n\nexport enum GarageDriverCommands {\n  START_DRIVING,\n  STOP_DRIVING,\n}\n\nexport class GarageDriver {\n  private contract: GarageServicemanContract | undefined;\n\n  private currDriveId: string | undefined;\n\n  public isFree(): boolean {\n    if (!this.contract) return true;\n    return false;\n  }\n\n  putBehindTheWheel(contract: GarageServicemanContract): void {\n    if (this.contract) throw new Error('ALREADY IN CAR');\n    this.contract = contract;\n  }\n\n  async getOutOfTheCar() {\n    this.contract = undefined;\n  }\n\n  async performDrivingProtocol(flags?: Record<string, unknown>) {\n    const newPromise = new Promise<{\n      driveParams: EngineResponse;\n      drivePromise: Promise<number | false>;\n    }>((res, rej) => {\n      const thisDriveId = genUniqId();\n      this.currDriveId = thisDriveId;\n      this.TurnOnTheIgnition()\n        .then(driveParams => {\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          console.log(driveParams);\n          const drivePromise = this.drive(driveParams, thisDriveId, flags);\n          res({\n            driveParams,\n            drivePromise,\n          });\n        })\n        .catch((error: Error) => {\n          if (thisDriveId !== this.currDriveId) rej(new Error('interrupted'));\n          else rej(error);\n        });\n    });\n    return newPromise;\n  }\n\n  private async TurnOnTheIgnition() {\n    if (!this.contract) throw new Error('NOT_BEHIND_THE_WHEEL');\n    const params = await REST_CLIENT_ENGINE.toggleEngine(\n      this.contract.car.currCar.id,\n      'started',\n    );\n    console.log('ENGINE STARTED');\n    return params;\n  }\n\n  // !!! If animation fails, this promise never resolves!\n  async returnToStart() {\n    this.currDriveId = undefined;\n    await this.stopCar();\n    const newPromise = new Promise<true>((res, rej) => {\n      if (this.contract) {\n        const time = 1; // !!! TODO Replace somehow?\n        this.contract.car.rollBack(time).then(() => res(true));\n      }\n    });\n    return newPromise;\n  }\n\n  private async drive(\n    driveParams: EngineResponse,\n    driveId: string,\n    flags?: Record<string, unknown>,\n  ): Promise<false | number> {\n    return new Promise<false | number>((res, rej) => {\n      if (this.contract) {\n        const { contract } = this;\n        const time = GarageDriver.calculateDriveTime(driveParams);\n        REST_CLIENT_ENGINE.enterDriveMode(contract.car.currCar.id)\n          .then(() => {\n            if (contract === this.contract && driveId === this.currDriveId) {\n              console.log('stop car finish');\n              this.stopCar();\n              res(time);\n            } else rej(new Error('interrupted'));\n          })\n          .catch(() => {\n            if (contract === this.contract && driveId === this.currDriveId) {\n              console.log('stop car broken');\n              this.stopCar(true, flags);\n              rej(new Error('BROKEN'));\n            } else rej(new Error('interrupted'));\n          });\n        contract.car\n          .rollForward(time)\n          .then(() => {\n            if (contract === this.contract && driveId === this.currDriveId) {\n              console.log('stop car finish by animation');\n              this.stopCar();\n              res(time);\n            } else rej(new Error('interrupted'));\n          })\n          .catch(() => {\n            if (contract === this.contract && driveId === this.currDriveId) {\n              console.log('stop car anim cancel by car');\n              this.stopCar(true, flags);\n              rej(new Error('BROKEN'));\n            } else rej(new Error('interrupted'));\n          });\n      } else rej(new Error('No car'));\n    });\n  }\n\n  private async stopCar(broken?: true, flags?: Record<string, unknown>) {\n    if (this.contract) {\n      try {\n        const response = await REST_CLIENT_ENGINE.toggleEngine(\n          this.contract.car.currCar.id,\n          'stopped',\n        );\n        console.log('stopped by server', response);\n        this.contract.car.stop(broken, flags);\n        return true;\n      } catch {\n        return false;\n      }\n    }\n    return undefined;\n  }\n\n  private static calculateDriveTime(params: EngineResponse) {\n    const time = params.distance / 1000 / params.velocity; /// !!! distance units???\n    return time;\n  }\n}\n","import { RegCarData, WinnerCarData } from '../../definitions/car-data.def';\nimport { DBusInterface } from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgCarActionSelectedMsg } from './dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionRemovedMsg } from './dbus-msgs/by-topic/car-action/garage-car-remove-msg.def';\nimport { GarageServicemanContract } from './garage-serviceman-contract.def';\nimport { GarageDriver, GarageDriverCommands } from './garage-driver';\nimport { genUniqId } from '../../lib/generators/generators';\n\nimport styles from './garage.scss';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport { REST_CLIENT_ERROR } from '../../services/rest-clients/rest-clients-errors.def';\nimport { DBusMsgGarageRaceStatusMsg } from './dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { RaceStatusesList } from './race-statuses.def';\n\ntype RaceData = {\n  raceId: string;\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n  participantsCount: number;\n  flags: Record<string, unknown>;\n  stratedCount: number;\n};\n\ntype RaceResults = {\n  arrivedByOrder: GarageServicemanContract[];\n  notArrived: GarageServicemanContract[];\n};\nexport class GarageManagersTeam implements DBusPort {\n  protected txs = new Set<DBusTX>();\n\n  protected contracts = new Set<GarageServicemanContract>();\n\n  protected freeDrivers = new Set<GarageDriver>();\n\n  protected busyDrivers = new Map<GarageServicemanContract, GarageDriver>();\n\n  protected currRaceId: string | undefined;\n\n  constructor(\n    private readonly tracksContainer: HTMLElement,\n    private readonly carCtlsBlock: HTMLElement,\n  ) {\n    this.carCtlsBlock.addEventListener('click', this.carCtlsClickListener);\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('garage serviceman');\n    this.txs.add(tx);\n  }\n\n  public getContracts() {\n    return this.contracts;\n  }\n\n  async nullifyContracts(contracts?: GarageServicemanContract[]) {\n    if (contracts) {\n      this.tryFreeDrivers(...contracts);\n      contracts.forEach(contract => {\n        this.contracts.delete(contract);\n      });\n    } else {\n      this.tryFreeDrivers(...this.contracts);\n      this.contracts.clear();\n    }\n  }\n\n  addContracts(...—Åontracts: GarageServicemanContract[]) {\n    —Åontracts.forEach(newContract => this.contracts.add(newContract));\n  }\n\n  private carCtlsClickListener = (e: Event) => {\n    if (e.target instanceof HTMLElement) {\n      const elem = e.target;\n      let btn: HTMLElement | undefined;\n\n      if (elem instanceof HTMLButtonElement) btn = e.target;\n      else if (elem.parentElement instanceof HTMLButtonElement)\n        btn = elem.parentElement;\n\n      if (btn) {\n        this.contracts.forEach(contract => {\n          if (this.currRaceId) return;\n          if (btn === contract.car.btnSelect) this.handleSelection(contract);\n          if (btn === contract.car.btnRm) this.handleRemoving(contract);\n          if (btn === contract.car.btnStart) this.startDriving(contract);\n          if (btn === contract.car.btnReset) this.handleRestoreState(contract);\n        });\n      }\n    }\n  };\n\n  async resetState(prepareForRace?: boolean) {\n    if (!prepareForRace) this.currRaceId = undefined;\n\n    this.tracksContainer.classList.remove(\n      styles['synthwave-background_race-mode'],\n    );\n    await this.rollbackCars();\n\n    if (!prepareForRace) {\n      this.broadcastRaceStatus('READY_TO_GO');\n    }\n  }\n\n  private async handleRestoreState(contract: GarageServicemanContract) {\n    const driver = this.busyDrivers.get(contract);\n    if (driver) {\n      await driver.returnToStart();\n    }\n  }\n\n  private async startDriving(\n    contract: GarageServicemanContract,\n    flags?: Record<string, unknown>,\n  ) {\n    let choosedDriver = this.busyDrivers.get(contract);\n\n    if (!choosedDriver) {\n      // !!! excess check?\n      choosedDriver = [...this.freeDrivers].find(driver => driver.isFree());\n\n      if (choosedDriver) {\n        this.freeDrivers.delete(choosedDriver);\n      } else {\n        choosedDriver = new GarageDriver();\n      }\n\n      this.busyDrivers.set(contract, choosedDriver);\n\n      choosedDriver.putBehindTheWheel(contract);\n    }\n\n    const result = await choosedDriver\n      .performDrivingProtocol(flags)\n      .catch((error: Error) => error);\n    return result;\n  }\n\n  private handleRemoving(contract: GarageServicemanContract) {\n    REST_CLIENT_GARAGE.deleteCar(contract.car.currCar.id).then(async () => {\n      await REST_CLIENT_WINNERS.deleteWinner(contract.car.currCar.id).catch(\n        () => {},\n      );\n      this.tryFreeDrivers(contract);\n      this.contracts.delete(contract);\n      const msg = new DBusMsgCarActionRemovedMsg(\n        contract.car.currCar,\n        contract,\n      );\n      this.txs.forEach(tx => {\n        tx.transmit({\n          msg,\n          prepMode: DBusTXPrepModes.freeze,\n          waitMode: DBusTXWaitModes.nowait,\n        });\n      });\n    });\n  }\n\n  private handleSelection(contract: GarageServicemanContract) {\n    const msg = new DBusMsgCarActionSelectedMsg(\n      contract.car.currCar,\n      this.genSelectCallback(contract),\n    );\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  private async rollbackCars() {\n    this.tracksContainer.style.setProperty('--translate-x', '0px');\n    // rollback cars\n    const rollbacks: Promise<unknown>[] = [];\n    this.busyDrivers.forEach(driver => {\n      rollbacks.push(driver.returnToStart());\n    });\n    await Promise.all(rollbacks);\n  }\n\n  async performRace() {\n    // prepare\n    const thisRaceId = genUniqId();\n    this.currRaceId = thisRaceId;\n    await this.resetState(true);\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    // process race\n    const raceData: RaceData = {\n      raceId: thisRaceId,\n      arrivedByOrder: [],\n      notArrived: [],\n      participantsCount: this.contracts.size,\n      flags: {\n        isFinishVisible: false,\n      },\n      stratedCount: 0,\n    };\n    this.broadcastRaceStatus('IN_PROCESS');\n    await this.processRace(raceData)\n      .catch((error: Error) => {\n        if (!(thisRaceId !== this.currRaceId)) throw error;\n      })\n      .finally(() => {\n        this.tracksContainer.classList.remove(\n          styles['synthwave-background_race-mode'],\n        );\n      });\n\n    // check if user cancell a race\n    if (thisRaceId !== this.currRaceId) return;\n\n    console.log(raceData);\n\n    this.broadcastRaceStatus('NEED_RESET');\n    // TODO: Do something else?\n  }\n\n  private broadcastRaceStatus(status: RaceStatusesList) {\n    const msg = new DBusMsgGarageRaceStatusMsg(status);\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n  }\n\n  // false if race was interrupted\n  private processRace(raceData: RaceData) {\n    return new Promise<RaceData | false>(res => {\n      this.contracts.forEach(contract => {\n        this.startDriving(contract, raceData.flags).then(response => {\n          if (raceData.raceId !== this.currRaceId) {\n            res(false);\n            return;\n          }\n\n          if (raceData.stratedCount === raceData.participantsCount - 1) {\n            this.tracksContainer.classList.add(\n              styles['synthwave-background_race-mode'],\n            );\n          } else raceData.stratedCount++;\n\n          if (!(response instanceof Error)) {\n            response.drivePromise\n              .then(result =>\n                this.handleDriveResult(raceData, contract, result),\n              )\n              .catch((error: Error) => {\n                if (error.message === 'interrupted') res(false);\n                raceData.notArrived.push(contract);\n              })\n              .finally(() => {\n                if (\n                  raceData.arrivedByOrder.length +\n                    raceData.notArrived.length ===\n                  raceData.participantsCount\n                )\n                  res(raceData);\n              });\n          } else {\n            throw response;\n          }\n        });\n      });\n    });\n  }\n\n  private handleDriveResult(\n    raceData: RaceData,\n    contract: GarageServicemanContract,\n    result: number | false,\n  ) {\n    if (raceData.raceId !== this.currRaceId) return;\n    if (result !== false) {\n      if (raceData.arrivedByOrder.length === 0) {\n        raceData.flags.isFinishVisible = true;\n        this.tracksContainer.classList.remove(\n          styles['synthwave-background_race-mode'],\n        );\n        this.handleWinner(contract, result);\n      }\n      raceData.arrivedByOrder.push(contract);\n    }\n  }\n\n  private handleWinner = (contract: GarageServicemanContract, time: number) => {\n    const winnerCar = contract.car.currCar;\n    REST_CLIENT_WINNERS.getWinner(winnerCar.id)\n      .then(winnerRecord => {\n        const updatedWinnerData: WinnerCarData = {\n          id: winnerRecord.id,\n          wins: winnerRecord.wins + 1,\n          time:\n            time < winnerRecord.time\n              ? Number.parseFloat(time.toFixed(2))\n              : winnerRecord.time,\n        };\n        REST_CLIENT_WINNERS.updateWinner(updatedWinnerData);\n      })\n      .catch((error: Error) => {\n        if (error.message === REST_CLIENT_ERROR.NOT_FOUND) {\n          const newWinnerData: WinnerCarData = {\n            id: winnerCar.id,\n            wins: 1,\n            time: Number.parseFloat(time.toFixed(2)),\n          };\n          REST_CLIENT_WINNERS.createWinner(newWinnerData);\n        }\n      });\n  };\n\n  private tryFreeDrivers(...contracts: GarageServicemanContract[]) {\n    contracts.forEach(contract => {\n      const driver = this.busyDrivers.get(contract);\n      if (driver) {\n        driver.getOutOfTheCar().then(() => {\n          this.busyDrivers.delete(contract);\n          this.freeDrivers.add(driver);\n        });\n      }\n    });\n  }\n\n  private genSelectCallback(contract: GarageServicemanContract) {\n    return (car: RegCarData) => {\n      if (!this.contracts.has(contract)) return;\n      contract.car.updateData(car);\n    };\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { GarageComponentControllerAkaDirector } from './garage-controller';\nimport { MainControlsComp } from './subcomps/main-controls/main-controls';\n\nimport styles from './garage.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\n\nexport class GarageComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.GARAGE;\n\n  private controller: GarageComponentControllerAkaDirector;\n\n  private mainControlsComp = new MainControlsComp();\n\n  private carsCtlsBlock = document.createElement('div');\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.garage);\n\n    const tracksContainer = document.createElement('div');\n    tracksContainer.classList.add(\n      styles['garage__track-container'],\n      styles['synthwave-background'],\n    );\n\n    const selfCtlsBlock = document.createElement('div');\n    selfCtlsBlock.classList.add(styles['garage-bg__self-ctls-block']);\n    selfCtlsBlock.append(this.mainControlsComp.rootElement);\n\n    const bg = document.createElement('div');\n    bg.classList.add(styles.garage__bg, styles['garage-bg']);\n\n    const bgVideo = document.createElement('video');\n    bgVideo.classList.add(styles['garage-bg__video']);\n\n    bgVideo.controls = false;\n    bgVideo.loop = true;\n    bgVideo.defaultMuted = true;\n    bgVideo.muted = true;\n\n    bgVideo.autoplay = true;\n\n    bgVideo.src = './assets/videos/bg/cyberpunk2077-garage.mp4';\n\n    this.controller = new GarageComponentControllerAkaDirector(\n      tracksContainer,\n      this.carsCtlsBlock,\n    );\n\n    bgVideo.onloadeddata = () => {\n      console.log('loaded');\n      this.controller.startWorking();\n    };\n    // bgVideo.play();\n\n    this.carsCtlsBlock.classList.add(styles['garage-bg__cars-ctls-block']);\n    bg.append(bgVideo, selfCtlsBlock);\n\n    this._rootElement.append(bg, tracksContainer, this.carsCtlsBlock);\n  }\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.controller);\n    int.attachSubHub(this.mainControlsComp);\n  }\n}\n","import { RegCarData, UnregCarData } from '../../../../definitions/car-data.def';\nimport { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { hexToRgb } from '../../../../lib/convertors/colors';\nimport { transitionPromise } from '../../../../lib/gui/animation';\nimport { OBJ_PROCESSOR } from '../../../../lib/processors/obj-processor';\nimport styles from './car.scss';\n\nexport class CarComp extends BaseComp {\n  static readonly TIMING_FUNCTION = 'cubic-bezier(.72,.2,.54,.77)';\n\n  static readonly CAR_BODY_IMG_SRC = './assets/imgs/cars/body.gif';\n\n  static readonly CAR_WHEEL_IMG_SRC = './assets/imgs/cars/tire back.gif';\n\n  static readonly CAR_EXPLOSION_IMG_DATA = {\n    BASE_URL: './assets/imgs/cars/explosion/',\n    EXTENSION: '.png',\n    FRAMES_COUNT: 9,\n    FRAME_TIME_MS: 200,\n  };\n\n  protected canvas = document.createElement('canvas');\n\n  protected tireBack = document.createElement('img');\n\n  private btnSelect$ = document.createElement('button');\n\n  private btnRm$ = document.createElement('button');\n\n  private _spanCarName = document.createElement('span');\n\n  private btnStart$ = document.createElement('button');\n\n  private btnReset$ = document.createElement('button');\n\n  private startDrivingTime: number | undefined;\n\n  private destinationCoordinate: number | undefined;\n\n  private currAnimation: Animation | undefined;\n\n  constructor(private _currCar: RegCarData, index?: number) {\n    super('div');\n\n    this._rootElement.classList.add(styles['car-div']);\n    this.canvas.classList.add(styles['car-div__canvas']);\n    this._rootElement.append(this.canvas);\n\n    const selectSpan = document.createElement('span');\n    const rmSpan = document.createElement('span');\n    const startSpan = document.createElement('span');\n    const resetSpan = document.createElement('span');\n\n    selectSpan.textContent = 'select';\n    rmSpan.textContent = 'remove';\n    startSpan.textContent = 'start!';\n    resetSpan.textContent = 'reset';\n\n    this.btnSelect$.append(selectSpan);\n    this.btnRm$.append(rmSpan);\n    this.btnReset$.append(resetSpan);\n    this.btnStart$.append(startSpan);\n\n    this.btnReset$.disabled = true;\n    console.log(this.btnReset$.disabled);\n\n    this._spanCarName.textContent = `${index}: ${_currCar.name}`;\n\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    CarComp.drawWheels(this._rootElement);\n  }\n\n  static drawWheels(rootElem: HTMLElement) {\n    const wheelImg = new Image();\n    wheelImg.src = CarComp.CAR_WHEEL_IMG_SRC;\n    wheelImg.onload = () => {\n      wheelImg.classList.add(styles['car-div__wheel']);\n      const backwardWheelImg = OBJ_PROCESSOR.deepClone(wheelImg);\n      wheelImg.classList.add(styles['car-div__wheel_forward']);\n      backwardWheelImg.classList.add(styles['car-div__wheel_backward']);\n\n      rootElem.append(wheelImg);\n      rootElem.append(backwardWheelImg);\n    };\n  }\n\n  updateData(carData: RegCarData) {\n    this._currCar = carData;\n    CarComp.drawCar(this.canvas, this._currCar.color);\n    // this._rootElement.style.setProperty('background-color', carData.color);\n  }\n\n  public async rollBack(time: number) {\n    return new Promise(res => {\n      if (this.currAnimation) {\n        this.currAnimation.playbackRate = -10;\n        this.currAnimation.play();\n        this.currAnimation.onfinish = () => {\n          const anim = this.currAnimation as unknown as Record<string, unknown>;\n          if ('commitStyles' in anim && typeof anim.commitStyles === 'function')\n            anim.commitStyles();\n\n          this.currAnimation = undefined;\n          this._rootElement.classList.remove(styles['car-div_rollForward']);\n          this.stop();\n          console.log('finish listener rollback');\n\n          this.btnStart$.disabled = false;\n          this.btnReset$.disabled = true;\n          this.btnRm$.disabled = false;\n          this.btnSelect$.disabled = false;\n          res(true);\n        };\n      } else res(false);\n    });\n  }\n\n  public async rollForward(time: number) {\n    return new Promise((res, rej) => {\n      this.btnStart$.disabled = true;\n      this.btnRm$.disabled = true;\n      this.btnSelect$.disabled = true;\n      this.btnReset$.disabled = false;\n      const rootStyle = window.getComputedStyle(\n        this._rootElement.parentElement as HTMLElement,\n      );\n      const selfStyle = window.getComputedStyle(this.rootElement);\n\n      const rootWidth =\n        Number.parseFloat(rootStyle.width) -\n        Number.parseFloat(rootStyle.paddingLeft) -\n        Number.parseFloat(rootStyle.paddingRight);\n      const selfWidth = Number.parseFloat(selfStyle.width);\n\n      const coordinateInPercents = ((rootWidth - selfWidth) / selfWidth) * 100;\n\n      this._rootElement.classList.add(styles['car-div_rollForward']);\n\n      this.currAnimation = this._rootElement.animate(\n        [{ transform: `translateX(${coordinateInPercents}%)` }],\n        {\n          duration: time * 1000,\n          easing: 'ease-in-out',\n          fill: 'forwards',\n        },\n      );\n\n      this.currAnimation.onfinish = () => {\n        this._rootElement.classList.remove(styles['car-div_rollForward']);\n        this.stop();\n        console.log('finish listener');\n        res(true);\n      };\n\n      this.currAnimation.oncancel = () => {\n        this._rootElement.classList.remove(styles['car-div_rollForward']);\n        console.log('cancelled anim');\n        rej();\n      };\n    });\n  }\n\n  public stop(broken?: true, flags?: Record<string, unknown>) {\n    this.rootElement.style.setProperty('transition', '');\n    this._rootElement.classList.remove(styles['car-div_rollForward']);\n\n    console.log('pause anim');\n    this.currAnimation?.pause();\n    if (broken) {\n      console.log(broken);\n      if (!flags?.isFinishVisible) {\n        // rollback\n      }\n\n      const img = new Image();\n      let frameNumber = 0;\n      img.classList.add(styles['car-div__explosion']);\n      img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n      img.onload = async () => {\n        this._rootElement.append(img);\n        await new Promise(res =>\n          setTimeout(res, CarComp.CAR_EXPLOSION_IMG_DATA.FRAME_TIME_MS),\n        );\n        frameNumber++;\n        if (frameNumber < CarComp.CAR_EXPLOSION_IMG_DATA.FRAMES_COUNT) {\n          img.src = `${CarComp.CAR_EXPLOSION_IMG_DATA.BASE_URL}${frameNumber}${CarComp.CAR_EXPLOSION_IMG_DATA.EXTENSION}`;\n        } else {\n          img.remove();\n        }\n      };\n    }\n  }\n\n  public get currCar(): RegCarData {\n    return this._currCar;\n  }\n\n  public get btnSelect() {\n    return this.btnSelect$;\n  }\n\n  public get btnRm() {\n    return this.btnRm$;\n  }\n\n  public get btnStart() {\n    return this.btnStart$;\n  }\n\n  public get btnReset() {\n    return this.btnReset$;\n  }\n\n  public get spanCarName() {\n    return this._spanCarName;\n  }\n\n  static drawCar(canvas: HTMLCanvasElement, hexColor: string) {\n    const img = new Image();\n    img.src = CarComp.CAR_BODY_IMG_SRC;\n    img.onload = () => {\n      canvas.height = img.height / 3;\n      canvas.width = img.width / 3;\n      const ctx = canvas.getContext('2d');\n\n      if (ctx) {\n        ctx.shadowColor = hexColor;\n        ctx.shadowBlur = 25;\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      }\n\n      CarComp.paintCarBody(canvas, hexColor);\n    };\n  }\n\n  static paintCarBody(canvas: HTMLCanvasElement, hexColor: string) {\n    const imageData = canvas\n      .getContext('2d')\n      ?.getImageData(0, 0, canvas.width, canvas.height);\n    if (imageData) {\n      const rgb = hexToRgb(hexColor);\n      for (let j = 0; j < imageData.width; j++) {\n        for (let i = 0; i < imageData.height; i++) {\n          // index: red, green, blue, alpha, red, green, blue, alpha..etc.\n          const index = i * 4 * imageData.width + j * 4;\n          const red = imageData.data[index] as number;\n          const green = imageData.data[index + 1] as number;\n          const blue = imageData.data[index + 2] as number;\n          // const alpha = imageData.data[index + 3] as number;\n\n          const blueDiff = 2 * blue - red - green;\n          const blueDiffThreshold = 10;\n          const threshold = 70;\n          if (\n            red > threshold &&\n            green > threshold &&\n            blue > threshold &&\n            blueDiff < blueDiffThreshold\n          ) {\n            imageData.data[index] = (red / 255) * rgb.r;\n            imageData.data[index + 1] = (green / 255) * rgb.g;\n            imageData.data[index + 2] = (blue / 255) * rgb.b;\n            // imageData.data[index + 3] = 225; /// !!! TEST !!!\n          }\n        }\n      }\n      canvas\n        .getContext('2d')\n        ?.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  static genPreview(car: UnregCarData): HTMLElement {\n    const container = document.createElement('div');\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles['car-div__canvas']);\n    container.append(canvas);\n    CarComp.drawWheels(container);\n    CarComp.drawCar(canvas, car.color);\n    return container;\n  }\n}\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionCreatedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-created-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class CreateCompController extends CreateUpdateCompControllerProto {\n  private txs = new Set<DBusTX>();\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnCreate();\n  }\n\n  private setupBtnCreate() {\n    this.btn.addEventListener('click', () => {\n      this.btn.disabled = true;\n      // TODO: !!! add validity check!\n      const unregCar: UnregCarData = {\n        name: this.inputText.value,\n        color: this.inputColor.value,\n      };\n      REST_CLIENT_GARAGE.createCar(unregCar)\n        .then(car => {\n          // TODO: Notify with DBus\n          const msg = new DBusMsgCarActionCreatedMsg(car);\n          this.txs.forEach(tx => {\n            tx.transmit({\n              msg,\n              prepMode: DBusTXPrepModes.clone,\n              waitMode: DBusTXWaitModes.nowait,\n            });\n          });\n        })\n        .finally(() => {\n          this.btn.disabled = false;\n        });\n    });\n  }\n\n  autoConnect(int: DBusInterface) {\n    const tx = int.getNewTX('send created car msgs');\n    this.txs.add(tx);\n  }\n}\n","import { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\n\nexport interface CreateUpdateCompControllerReqElems {\n  inputText: HTMLInputElement;\n  inputColor: HTMLInputElement;\n  btn: HTMLButtonElement;\n}\n\nexport abstract class CreateUpdateCompControllerProto implements DBusPort {\n  constructor(\n    protected inputText: HTMLInputElement,\n    protected inputColor: HTMLInputElement,\n    protected btn: HTMLButtonElement,\n  ) {}\n\n  abstract autoConnect(int: DBusInterface): void | Promise<void>;\n\n  protected toogleCtlsDisabled(state: boolean) {\n    this.inputText.disabled = state;\n    this.inputColor.disabled = state;\n    this.btn.disabled = state;\n  }\n}\n","import { RegCarData } from '../../../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../../../lib/processors/obj-processor';\nimport { DBusInterface } from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusRX } from '../../../../../lib/services/dbus/defs/dbus-rx/dbus-rx.def';\nimport { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { REST_CLIENT_GARAGE } from '../../../../../services/rest-clients/client-garage/rest-client-garage';\nimport { DBusMsgCarActionSelectedMsg } from '../../../dbus-msgs/by-topic/car-action/garage-car-select-msg.def';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\n\nexport class UpdateCompController\n  extends CreateUpdateCompControllerProto\n  implements DBusPort\n{\n  private rxs: Set<DBusRX> = new Set();\n\n  private choosedCar: RegCarData | undefined;\n\n  private notifyCb: ((car: RegCarData) => unknown) | undefined;\n\n  constructor(elements: CreateUpdateCompControllerReqElems) {\n    super(elements.inputText, elements.inputColor, elements.btn);\n\n    this.setupBtnUpdate();\n  }\n\n  autoConnect(int: DBusInterface) {\n    const rx = int.getNewRX(this.chooseCarListener, 'listen car choosing');\n    int.plugRX(DBusTopics.CAR_ACTION, rx);\n  }\n\n  private chooseCarListener = async (data: DBusTXData) => {\n    console.log(data);\n    if (data.msg instanceof DBusMsgCarActionSelectedMsg) {\n      this.choosedCar = OBJ_PROCESSOR.deepClone(data.msg.car);\n      this.notifyCb = data.msg.notifyChanges;\n      this.inputColor.value = data.msg.car.color;\n      this.inputText.value = data.msg.car.name;\n      this.toogleCtlsDisabled(false);\n    }\n  };\n\n  private setupBtnUpdate() {\n    this.toogleCtlsDisabled(true);\n    this.btn.addEventListener('click', () => {\n      this.toogleCtlsDisabled(true);\n      if (!this.choosedCar) return;\n      // TODO: !!! add validity check!\n      this.choosedCar.color = this.inputColor.value;\n      this.choosedCar.name = this.inputText.value;\n      REST_CLIENT_GARAGE.updateCar(this.choosedCar)\n        .then(car => {\n          if (this.notifyCb) this.notifyCb(car);\n        })\n        .finally(() => {\n          this.toogleCtlsDisabled(false);\n        });\n    });\n  }\n}\n","import { BaseComp } from '../../../../../lib/components/base-comp/base-comp';\nimport { DBUS_HUB_NAMES } from '../../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { CreateCompController } from './controller-create';\nimport {\n  CreateUpdateCompControllerProto,\n  CreateUpdateCompControllerReqElems,\n} from './controller-proto.def';\nimport { UpdateCompController } from './controller-update';\n\nimport styles from './create-update.scss';\nimport sharedStyles from '../../../../../styles.scss';\n\nexport class CreateUpdateComponent extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.CREATE_UPDATE;\n\n  protected textInput = document.createElement('input');\n\n  protected colorInput = document.createElement('input');\n\n  protected btn = document.createElement('button');\n\n  protected controller: CreateUpdateCompControllerProto;\n\n  constructor(type: 'CREATE' | 'UPDATE', btnText: string) {\n    super('div');\n    this._rootElement.classList.add(styles.root);\n    this.textInput.type = 'text';\n    this.textInput.classList.add(styles['text-input']);\n    this.colorInput.type = 'color';\n    this.colorInput.classList.add(styles['color-input']);\n    this.btn.textContent = btnText;\n    this.btn.classList.add(sharedStyles.btn);\n    this._rootElement.append(this.textInput, this.colorInput, this.btn);\n\n    const elements: CreateUpdateCompControllerReqElems = {\n      inputText: this.textInput,\n      inputColor: this.colorInput,\n      btn: this.btn,\n    };\n\n    switch (type) {\n      case 'UPDATE':\n        this.controller = new UpdateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']);\n        break;\n      case 'CREATE':\n      default:\n        this.controller = new CreateCompController(elements);\n        this.btn.classList.add(sharedStyles['btn-13']); // TODO: maybe change?\n        break;\n    }\n  }\n\n  connect(int: DBusInterface) {\n    this.controller.autoConnect(int);\n  }\n}\n","import { DBusTopics } from '../../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\n\nexport class DBusMsgGenerateCarsMsg extends DBusMsg {\n  constructor(\n    readonly status: 'start' | 'end',\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.GENERATE, rxIds, prefResponseRxIds);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CreateUpdateComponent } from './create-update/create-update';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from '../../../../lib/services/dbus/defs/dbus-hub-names.def';\nimport { DBusMsgRaceRequestMsg } from '../../dbus-msgs/by-topic/garage/garage-race-request-msg.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusMsgGarageResetReqMsg } from '../../dbus-msgs/by-topic/garage/garage-reset-req-msg.def';\n\nimport styles from './main-controls.scss';\nimport sharedStyles from '../../../../styles.scss';\nimport { REST_CLIENT_GARAGE } from '../../../../services/rest-clients/client-garage/rest-client-garage';\nimport {\n  CAR_MODEL_LIST,\n  CAR_MODEL_LIST_KEYS,\n} from '../../../../definitions/car-random-data.def';\nimport {\n  genRandomHexColor,\n  getRandomArbitraryInt,\n  getRandomInt,\n} from '../../../../lib/generators/generators';\nimport {\n  UnregCarData,\n  WinnerCarData,\n} from '../../../../definitions/car-data.def';\nimport { REST_CLIENT_WINNERS } from '../../../../services/rest-clients/client-winners/rest-client-winners';\nimport { DBusTXData } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgGarageRaceMsg } from '../../dbus-msgs/by-topic/garage/garage-race-msg.def';\nimport { DBUS_COMMON_RESPONSES } from '../../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusMsgGarageRaceStatusMsg } from '../../dbus-msgs/by-topic/garage/garage-race-status-msg.def';\nimport { DBusTopics } from '../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTX } from '../../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgGenerateCarsMsg } from './dbus-msgs/generate-cars-msg.def';\nimport { PopupStandaloneModalProgressComp } from '../../../../lib/components/popups/standalone/modal/progress/popup-progress';\n\nexport class MainControlsComp extends BaseComp implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.MAIN_CONTROLS;\n\n  private txs = new Set<DBusTX>();\n\n  private createComponent = new CreateUpdateComponent('CREATE', 'create');\n\n  private updateComponent = new CreateUpdateComponent('UPDATE', 'update');\n\n  private btnRace = document.createElement('button');\n\n  private btnReset = document.createElement('button');\n\n  private btnGenerate = document.createElement('button');\n\n  private popup = new PopupStandaloneModalProgressComp();\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles['main-controls']);\n\n    const btnsBlock = this.renderBtns();\n    this.btnRace.addEventListener('click', this.raceClickListener);\n    this.btnReset.addEventListener('click', this.resetClickListener);\n    this.btnGenerate.addEventListener('click', this.generateClickListener);\n\n    this.btnReset.disabled = true;\n    this.btnRace.disabled = true;\n\n    this._rootElement.append(\n      this.createComponent.rootElement,\n      this.updateComponent.rootElement,\n      btnsBlock,\n    );\n  }\n\n  private generateClickListener = async () => {\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgGenerateCarsMsg('start');\n    const transmissions: Promise<unknown>[] = [];\n    this.txs.forEach(tx => {\n      const transmission = tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n      transmissions.push(transmission);\n    });\n    await Promise.allSettled(transmissions);\n    this.popup\n      .reset()\n      .setText('please wait while the entries are generated')\n      .show();\n    await this.generate(100, undefined, this.genCb);\n    this.popup.reset().hide();\n    const resolveMsg = new DBusMsgGenerateCarsMsg('end');\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg: resolveMsg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.nowait,\n      });\n    });\n    this.btnGenerate.disabled = false;\n  };\n\n  private genCb = (progress: number) => {\n    this.popup.setProgress(progress);\n  };\n\n  private raceClickListener = async () => {\n    if (this.txs.size === 0) return;\n    this.btnRace.disabled = true;\n    this.btnGenerate.disabled = true;\n    const msg = new DBusMsgRaceRequestMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private resetClickListener = async () => {\n    if (this.txs.size === 0) return;\n    const msg = new DBusMsgGarageResetReqMsg();\n    this.txs.forEach(tx => {\n      tx.transmit({\n        msg,\n        prepMode: DBusTXPrepModes.freeze,\n        waitMode: DBusTXWaitModes.allSetled,\n      });\n    });\n  };\n\n  private renderBtns(): HTMLElement {\n    // setip btns\n    const span = document.createElement('span');\n    span.textContent = 'race';\n    this.btnRace.append(span);\n    this.btnRace.classList.add(sharedStyles.btn, sharedStyles['btn-15']);\n    this.btnReset.textContent = 'reset';\n    this.btnReset.classList.add(sharedStyles.btn, sharedStyles['btn-9']);\n    this.btnGenerate.textContent = 'generate cards';\n    this.btnGenerate.classList.add(sharedStyles.btn, sharedStyles['btn-1']);\n\n    const btnBlock = document.createElement('div');\n    btnBlock.classList.add(styles['btn-block']);\n    btnBlock.append(this.btnRace, this.btnReset, this.btnGenerate);\n    return btnBlock;\n  }\n\n  private async generate(\n    total: number,\n    left?: number,\n    cb?: (progress: number) => unknown,\n  ): Promise<boolean> {\n    let genLeft = left || total;\n    const randomName = this.genRandomCarName();\n    const color = genRandomHexColor();\n    const unregCarData: UnregCarData = {\n      name: randomName,\n      color,\n    };\n    const car = await REST_CLIENT_GARAGE.createCar(unregCarData);\n    const winner: WinnerCarData = {\n      id: car.id,\n      wins: getRandomArbitraryInt(1, 3),\n      time: Number.parseFloat((getRandomArbitraryInt(40, 50) / 3).toFixed(2)),\n    };\n    await REST_CLIENT_WINNERS.createWinner(winner);\n    genLeft--;\n\n    if (cb) {\n      const progress = (1 - genLeft / total) * 100;\n      cb(progress);\n    }\n\n    if (genLeft > 0) return this.generate(total, genLeft, cb);\n\n    return true;\n  }\n\n  private genRandomCarName = (): string => {\n    const manufacturerNumber = getRandomInt(CAR_MODEL_LIST_KEYS.length - 1);\n    const manufacturerName = CAR_MODEL_LIST_KEYS[\n      manufacturerNumber\n    ] as keyof typeof CAR_MODEL_LIST;\n    const models = CAR_MODEL_LIST[manufacturerName];\n    const modelNumber = getRandomInt(models.length - 1);\n    const modelName = models[modelNumber] as string;\n    return `${manufacturerName} ${modelName}`;\n  };\n\n  private rxFuncForRaceMsgs = async (data: DBusTXData) => {\n    if (data.msg instanceof DBusMsgGarageRaceStatusMsg) {\n      const { status } = data.msg;\n      switch (status) {\n        case 'READY_TO_GO':\n          this.btnRace.disabled = false;\n          this.btnReset.disabled = true;\n          this.btnGenerate.disabled = false;\n          // this.btnGenerate.disabled = true;\n          break;\n        case 'IN_PROCESS':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = true;\n          break;\n        case 'NEED_RESET':\n          this.btnRace.disabled = true;\n          this.btnReset.disabled = false;\n          this.btnGenerate.disabled = false;\n          break;\n        default:\n          break;\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  connect(int: DBusInterface) {\n    int.attachSubHub(this.createComponent, 'cu_create');\n    int.attachSubHub(this.updateComponent, 'cu_delete');\n\n    const rx = int.getNewRX(\n      this.rxFuncForRaceMsgs,\n      'toggle btns in main-ctls-block',\n    );\n    int.plugRX(DBusTopics.GARAGE, rx);\n\n    const tx = int.getNewTX('start race | broadcast generate');\n    this.txs.add(tx);\n  }\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../car/car';\n\nimport styles from './track.scss';\n\nexport class TrackComp extends BaseComp {\n  private topBlock = document.createElement('div');\n\n  constructor() {\n    super('div');\n    this._rootElement.classList.add(styles.track);\n    this._rootElement.append();\n    this.topBlock.classList.add(styles['track__controls-block']);\n  }\n\n  illuminateSelf = (illuminate: boolean) => {\n    console.log(illuminate);\n    if (illuminate) this._rootElement.classList.add(styles.track_illuminated);\n    else this._rootElement.classList.remove(styles.track_illuminated);\n  };\n\n  placeCar(carComp: CarComp) {\n    if (this._rootElement.hasChildNodes()) {\n      this._rootElement.childNodes.forEach(child => child.remove());\n    }\n    this.topBlock.append(carComp.spanCarName);\n    this._rootElement.append(this.topBlock, carComp.rootElement);\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { DBus } from '../../lib/services/dbus/dbus';\nimport { DBUS_COMMON_RESPONSES } from '../../lib/services/dbus/defs/dbus-common-responses.def';\nimport {\n  DBusHubNamesList,\n  DBUS_HUB_NAMES,\n} from '../../lib/services/dbus/defs/dbus-hub-names.def';\nimport {\n  DBusHub,\n  DBusInterface,\n} from '../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusTopics } from '../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusMsgRouteIsChangedMsg } from '../../lib/services/simple-router/dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport styles from './header.scss';\nimport { NavItem } from './subcomps/nav-item/nav-item';\n\nexport class HeaderComponent extends BaseComp implements DBusHub {\n  private navContainer: HTMLElement;\n\n  private logo: HTMLElement;\n\n  protected anchors: HTMLAnchorElement[];\n\n  protected buses: DBus[] = [];\n\n  constructor(readonly hubName: DBusHubNamesList = DBUS_HUB_NAMES.HEADER) {\n    super('header');\n    this.rootElement.classList.add(styles.header);\n\n    // logo\n    this.logo = document.createElement('h1');\n    this.logo.classList.add(styles.header__logo);\n    const firstSpan = document.createElement('span');\n    firstSpan.textContent = 'async';\n    const secondSpan = document.createElement('span');\n    secondSpan.textContent = 'race';\n    this.logo.append(firstSpan, secondSpan);\n    this.rootElement.append(this.logo);\n\n    // nav\n    this.navContainer = document.createElement('nav');\n    this.navContainer.classList.add(styles['header-nav']);\n    this.rootElement.append(this.navContainer);\n\n    // ul\n    const ul = document.createElement('ul');\n    ul.classList.add(styles['header-nav__list']);\n    this.navContainer.append(ul);\n\n    // ul items\n    const classList = {\n      li: styles['header-nav__item'],\n      a: styles['header-nav__anchor'],\n      svg: styles['header-nav__svg'],\n      span: styles['header-nav__span'],\n    };\n\n    const garageNavItem = new NavItem('garage', '#garage', classList);\n    const winnersNavItem = new NavItem('winners', '#winners', classList);\n\n    const navItems = [garageNavItem, winnersNavItem];\n    this.anchors = navItems.map(item => item.anchor);\n\n    ul.append(...navItems.map(item => item.rootElement));\n  }\n\n  connect(int: DBusInterface) {\n    const illuminateRX = int.getNewRX(\n      this.illuminateNavItem,\n      'illuminate nav items',\n    );\n    int.plugRX(DBusTopics.ROUTING, illuminateRX);\n  }\n\n  private illuminateNavItem = async (data: DBusTXData) => {\n    const { msg } = data;\n    if (msg instanceof DBusMsgRouteIsChangedMsg) {\n      this.anchors.forEach(anchor => {\n        if (anchor.getAttribute('href') === msg.newRoute) {\n          anchor.classList.add(styles['header-nav__anchor_active']);\n        } else {\n          anchor.classList.remove(styles['header-nav__anchor_active']);\n        }\n      });\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n}\n","import { BaseComp } from '../../../../lib/components/base-comp/base-comp';\n\nexport interface NavItemStyles {\n  li?: string;\n  a?: string;\n  svg?: string;\n  span?: string;\n}\n\nexport class NavItem extends BaseComp {\n  private _anchor: HTMLAnchorElement;\n\n  protected iconImage: HTMLImageElement | undefined;\n\n  protected span: HTMLSpanElement;\n\n  constructor(\n    text: string,\n    href: string,\n    styles?: NavItemStyles,\n    iconSrc?: string,\n  ) {\n    super('li');\n\n    if (styles?.li) this._rootElement.classList.add(styles.li);\n    this._anchor = document.createElement('a');\n    this._anchor.setAttribute('href', href);\n\n    if (styles?.a) this._anchor.classList.add(styles.a);\n\n    if (iconSrc) {\n      this.iconImage = document.createElement('img');\n      this.iconImage.src = iconSrc;\n\n      if (styles?.svg) this.iconImage.classList.add(styles.svg);\n      this._anchor.append(this.iconImage);\n    }\n    this.span = document.createElement('span');\n    this.span.textContent = text;\n\n    if (styles?.span) this.span.classList.add(styles.span);\n    this._anchor.append(this.span);\n\n    this.rootElement.append(this._anchor);\n  }\n\n  get anchor(): HTMLAnchorElement {\n    return this._anchor;\n  }\n}\n","import { UnregCarData, WinnerCarData } from '../../../definitions/car-data.def';\nimport { BaseComp } from '../../../lib/components/base-comp/base-comp';\nimport { CarComp } from '../../garage/subcomps/car/car';\n\nexport class WinnerRowComp extends BaseComp {\n  private indexElem = document.createElement('td');\n\n  private idElem = document.createElement('td');\n\n  private carPreviewBox = document.createElement('td');\n\n  private nameElem = document.createElement('td');\n\n  private winsElem = document.createElement('td');\n\n  private bestTimeElem = document.createElement('td');\n\n  private carPreview: HTMLElement;\n\n  constructor(index: number, winnerData: WinnerCarData, carData: UnregCarData) {\n    super('tr');\n\n    this.indexElem.textContent = index.toString();\n    this.idElem.textContent = winnerData.id.toString();\n    this.carPreview = CarComp.genPreview(carData);\n    this.carPreviewBox.append(this.carPreview);\n    this.nameElem.textContent = carData.name;\n    this.winsElem.textContent = winnerData.wins.toString();\n    this.bestTimeElem.textContent = winnerData.time.toString();\n\n    this._rootElement.append(\n      this.indexElem,\n      this.idElem,\n      this.carPreviewBox,\n      this.nameElem,\n      this.winsElem,\n      this.bestTimeElem,\n    );\n  }\n\n  public getCarPreview() {\n    return this.carPreview;\n  }\n}\n","import { BaseComp } from '../../lib/components/base-comp/base-comp';\nimport { REST_CLIENT_GARAGE } from '../../services/rest-clients/client-garage/rest-client-garage';\nimport { REST_CLIENT_WINNERS } from '../../services/rest-clients/client-winners/rest-client-winners';\nimport {\n  RestClientWinnersSortOptionsList,\n  REST_CLIENT_WINNERS_SORT_OPTIONS,\n} from '../../services/rest-clients/client-winners/rest-client-winners.def';\nimport { WinnerRowComp } from './subcomps/winner-entry';\nimport { Pager } from '../../lib/services/pager/pager';\n\nimport styles from './winners.scss';\nimport sharedStyles from '../../styles.scss';\nimport { Notifiable } from '../../lib/interfaces/notifiable';\n\nexport class WinnersComp extends BaseComp implements Notifiable {\n  static readonly TEXT_CONTENT_ENG = {};\n\n  private table = document.createElement('table');\n\n  private tableBody = document.createElement('tbody');\n\n  private tableHead = document.createElement('thead');\n\n  private thId = document.createElement('th');\n\n  private thCar = document.createElement('th');\n\n  private thName = document.createElement('th');\n\n  private thWins = document.createElement('th');\n\n  private thBestTime = document.createElement('th');\n\n  private currSortedElem: HTMLElement | undefined;\n\n  private pager: Pager;\n\n  private currOrder: 'ASC' | 'DESC' = 'DESC';\n\n  private currSort: RestClientWinnersSortOptionsList = 'wins';\n\n  private entriesPerPage = 10;\n\n  constructor() {\n    super('section');\n    this._rootElement.classList.add(styles.winners);\n    this._rootElement.style.setProperty(\n      'background-image',\n      `url('./assets/imgs/backgrounds/winners/anime-girl-cyberpunk-ride-4k-lx-2880x1800.jpg')`,\n    );\n\n    const pagerBtnsContainer = document.createElement('div');\n    pagerBtnsContainer.classList.add(styles.pager);\n\n    this.pager = new Pager(this.entriesPerPage, this.pagerCallback);\n\n    const btnPrevPage = this.pager.getBtnPrevPage();\n    const btnNextPage = this.pager.getBtnNextPage();\n    btnPrevPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n    btnNextPage.classList.add(sharedStyles.btn);\n    btnNextPage.classList.add(\n      sharedStyles.btn,\n      sharedStyles['btn-6'],\n      styles['pager-btn'],\n    );\n\n    pagerBtnsContainer.append(btnPrevPage, btnNextPage);\n\n    const pagerSpan = this.pager.getPagerSpan();\n\n    pagerSpan.classList.add(styles['pager-span']);\n\n    this.table.append(\n      this.tableHead,\n      this.tableBody,\n      pagerBtnsContainer,\n      pagerSpan,\n    );\n    this.table.classList.add(styles.table);\n\n    this._rootElement.append(this.table);\n\n    this.renderHeader();\n    this.refillTable().then(() => this.refreshTableHeader(this.thBestTime));\n  }\n\n  notify(): void {\n    this.refillTable(this.currSort, this.currOrder).then(() =>\n      this.refreshTableHeader(this.currSortedElem || this.thBestTime),\n    );\n  }\n\n  private pagerCallback = async (dir: 'prev' | 'next'): Promise<boolean> => {\n    try {\n      await this.refillTable(undefined, undefined, dir);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  private renderHeader() {\n    const tr = document.createElement('tr');\n\n    const thIndex = document.createElement('th');\n    thIndex.textContent = '‚Ññ';\n    this.thId.textContent = 'ID';\n    this.thId.classList.add(styles['table__can-be-sorted']);\n    this.thCar.textContent = 'CAR';\n    this.thName.textContent = 'NAME';\n    this.thWins.textContent = 'WINS';\n    this.thWins.classList.add(styles['table__can-be-sorted']);\n    this.thBestTime.textContent = 'BEST TIME';\n    this.thBestTime.classList.add(styles['table__can-be-sorted']);\n\n    tr.append(\n      thIndex,\n      this.thId,\n      this.thCar,\n      this.thName,\n      this.thWins,\n      this.thBestTime,\n    );\n    this.tableHead.append(tr);\n    this.tableHead.addEventListener('click', this.tableHeadClickListener);\n  }\n\n  private async refillTable(\n    specialSort?: RestClientWinnersSortOptionsList,\n    specialOrder?: 'ASC' | 'DESC',\n    dir?: 'prev' | 'next',\n  ) {\n    return new Promise((res, rej) => {\n      const page = dir\n        ? dir === 'next'\n          ? this.pager.getCurrPageNumber() + 1\n          : this.pager.getCurrPageNumber() - 1\n        : this.pager.getCurrPageNumber();\n      const order = specialOrder || this.currOrder;\n      const sort = specialSort || this.currSort;\n\n      REST_CLIENT_WINNERS.getWinners(page, 10, sort, order).then(\n        async response => {\n          this.pager.setEntriesCount(Number.parseInt(response.limit, 10));\n          if (response.cars.length === 0) {\n            rej();\n            return;\n          }\n          const rows = new Array<WinnerRowComp>(response.cars.length);\n          const promises: Promise<unknown>[] = [];\n          const indexInc = (page - 1) * 10;\n          response.cars.forEach((winner, index) => {\n            const promise = REST_CLIENT_GARAGE.getCar(winner.id).then(car => {\n              const totalIndex = index + indexInc + 1;\n              const row = new WinnerRowComp(totalIndex, winner, car);\n              rows[index] = row;\n            });\n            promises.push(promise);\n          });\n          await Promise.allSettled(promises);\n          while (this.tableBody.firstChild) this.tableBody.firstChild.remove();\n          this.tableBody.append(\n            ...rows.map(row => {\n              row\n                .getCarPreview()\n                .classList.add(styles['table__car-preview-box']);\n              return row.rootElement;\n            }),\n          );\n          res(true);\n        },\n      );\n    });\n  }\n\n  private tableHeadClickListener = async (e: Event) => {\n    let sort: RestClientWinnersSortOptionsList | undefined;\n    switch (e.target) {\n      case this.thId:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.id;\n        break;\n      case this.thWins:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.wins;\n        break;\n      case this.thBestTime:\n        sort = REST_CLIENT_WINNERS_SORT_OPTIONS.time;\n        break;\n      default:\n        break;\n    }\n    if (sort) {\n      // TODO: block pager\n      const elem = e.target as HTMLElement;\n      this.currOrder = elem.classList.contains(\n        styles['table__sorted-elem_desc'],\n      )\n        ? 'ASC'\n        : 'DESC';\n      this.currSort = sort;\n      await this.refillTable();\n      this.refreshTableHeader(elem);\n    }\n  };\n\n  private refreshTableHeader = (elem: HTMLElement) => {\n    if (this.currSortedElem)\n      this.currSortedElem.classList.remove(styles['table__sorted-elem']);\n\n    elem.classList.add(styles['table__sorted-elem']);\n    this.currSortedElem = elem;\n\n    if (this.currOrder === 'ASC') {\n      elem.classList.remove(styles['table__sorted-elem_desc']);\n      elem.classList.add(styles['table__sorted-elem_asc']);\n    } else {\n      elem.classList.remove(styles['table__sorted-elem_asc']);\n      elem.classList.add(styles['table__sorted-elem_desc']);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../lib/processors/obj-processor';\n\nconst models = {\n  Lamborghini: [\n    'Murci√©lago',\n    '350 GT',\n    '400 GT',\n    'Si√°n FKP 37',\n    'Essenza SCV12',\n    'Urus',\n    'Centenario',\n    'Hurac√°n',\n    'Veneno',\n    'Sesto Element–æ',\n    'Aventador',\n    'Revent√≥n',\n    'Gallardo',\n    'Diablo',\n    'LM002',\n    'Jalpa',\n    'Silhouette',\n    'Countach',\n    'Urraco',\n    'Jarama',\n    'Islero',\n    'Espada',\n    'Miura',\n  ],\n  'Aston Martin': [\n    'Project 003',\n    'Valkyrie',\n    'DBS',\n    'Vanquish Zagato',\n    'Vanquish',\n    'Virage/Virage Volante',\n    'V12 Zagato',\n    'One-77',\n    'V8 Coupe/V8 Volante',\n    'V8 Zagato',\n  ],\n  Ferrari: [\n    'Roma',\n    'Portfolio',\n    '488 GTB',\n    'California T',\n    '360 Spider',\n    '355 F1 Berlinetta',\n    'F355 GTS',\n    '456 GT',\n    'Testarossa',\n    'SF1000',\n  ],\n  Koenigsegg: [\n    'Jesko Absolut',\n    'Jesko',\n    'Agera Final',\n    'Agera XS',\n    'Agera X',\n    'Agera S',\n    'Regera',\n    'Agera RS',\n    'One:1',\n    'CCGT',\n  ],\n};\n\nconst CAR_MODEL_LIST = OBJ_PROCESSOR.deepFreeze(models);\n\nexport { CAR_MODEL_LIST };\n\nconst CAR_MODEL_LIST_KEYS = OBJ_PROCESSOR.deepFreeze(\n  Object.keys(CAR_MODEL_LIST),\n);\n\nexport { CAR_MODEL_LIST_KEYS };\n","export class BaseComp {\n  protected _rootElement: HTMLElement;\n\n  constructor(tag: keyof HTMLElementTagNameMap = 'div') {\n    this._rootElement = document.createElement(tag);\n  }\n\n  public get rootElement(): HTMLElement {\n    return this._rootElement;\n  }\n}\n","import { PopupStandaloneComp } from '../popup-standalone';\n\nimport styles from './popup-standalone-modal.scss';\n\nexport abstract class PopupStandaloneModalComp extends PopupStandaloneComp {\n  constructor() {\n    super();\n    this._rootElement.classList.add(styles['popup-modal']);\n    const closeArea = document.createElement('div');\n    closeArea.classList.add(styles['popup-bg']);\n    this._rootElement.append(closeArea);\n    this.body.classList.add(styles['popup-body']);\n    closeArea.append(this.body);\n    this.header.classList.add(styles['popup-body-header']);\n    this.text.classList.add(styles['popup-body-text']);\n  }\n}\n","import { PopupStandaloneModalComp } from '../popup-standalone-modal';\n\nimport styles from './popup-progress.scss';\nimport sharedStyles from '../../../../../../styles.scss';\n\nexport class PopupStandaloneModalProgressComp extends PopupStandaloneModalComp {\n  private barContainer = document.createElement('div');\n\n  private bar = document.createElement('div');\n\n  constructor() {\n    super();\n    this.barContainer.classList.add(styles.container);\n    this.bar.classList.add(styles.bar);\n    this.barContainer.append(this.bar);\n    this.text.classList.add(styles.text, sharedStyles['glitched-text']);\n    this.body.classList.add(styles.body);\n    this.body.append(this.barContainer);\n  }\n\n  setText(text: string): PopupStandaloneModalProgressComp {\n    this.text.textContent = text;\n    this.text.dataset.textContent = text;\n    return this;\n  }\n\n  reset(): PopupStandaloneModalProgressComp {\n    this.bar.style.removeProperty('--progress');\n    this.text.textContent = '';\n    this.text.dataset.textContent = '';\n    return this;\n  }\n\n  show(): PopupStandaloneModalProgressComp {\n    document.body.append(this._rootElement);\n    return this;\n  }\n\n  hide(): PopupStandaloneModalProgressComp {\n    this._rootElement.remove();\n    return this;\n  }\n\n  setProgress(progress: number): PopupStandaloneModalProgressComp {\n    this.bar.style.setProperty('--progress', `${progress}%`);\n    return this;\n  }\n}\n","import { BaseComp } from '../../base-comp/base-comp';\n\nexport interface BasePopupAttrs {\n  configurable: boolean;\n}\n\nexport abstract class PopupStandaloneComp extends BaseComp {\n  protected body: HTMLElement;\n\n  protected header: HTMLHeadingElement;\n\n  protected text: HTMLParagraphElement;\n\n  constructor() {\n    super('div');\n\n    this.body = document.createElement('div');\n    this.header = document.createElement('h3');\n    this.text = document.createElement('p');\n\n    this.body.append(this.header, this.text);\n    this._rootElement.append(this.body);\n  }\n}\n","export function hexToRgb(hex: string): { r: number; g: number; b: number } {\n  let c: string[];\n\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    // c = hex.substring(1).split('');\n    c = hex.split('');\n    if (c.length === 4) {\n      c = [c[1], c[1], c[2], c[2], c[3], c[3]] as string[];\n    }\n    const r = Number.parseInt(hex.slice(1, 3), 16);\n    const g = Number.parseInt(hex.slice(3, 5), 16);\n    const b = Number.parseInt(hex.slice(5, 7), 16);\n    // return `rgb(${r}, ${g}, ${b})`;\n    return { r, g, b };\n  }\n  throw new Error('Bad Hex');\n}\n","export function genUniqId(): string {\n  const arr = new Uint8Array(4);\n  return window.crypto.getRandomValues(arr).join('');\n}\n\nexport function getRandomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n\nexport function getRandomArbitraryInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function genRandomHexColor(): string {\n  const color = `#${Math.floor(Math.random() * 16_777_215).toString(16)}`;\n  if (color.length === 7) return color;\n  return genRandomHexColor();\n}\n","export interface Notifiable {\n  notify: <T>(params: T) => void | Promise<void>;\n}\n\nexport function isNotifiable(object: unknown): object is Notifiable {\n  const objAsRecord = object as Record<string, unknown>;\n  return 'notify' in objAsRecord && typeof objAsRecord.notify === 'function';\n}\n","class ObjProcessor {\n  readonly deepFreeze = <T>(obj: T): T => {\n    if (typeof obj === 'object' && obj !== null) {\n      const record = obj as Record<string, unknown>;\n      Object.keys(record).forEach(prop => {\n        if (\n          typeof record[prop] === 'object' &&\n          !Object.isFrozen(record[prop])\n        ) {\n          this.deepFreeze(record[prop]);\n        }\n      });\n      return Object.freeze(obj);\n    }\n    throw new Error('not object');\n  };\n\n  readonly deepClone = <T>(target: T): T => {\n    if (Array.isArray(target)) {\n      const clone = [] as unknown[];\n      (target as unknown[]).forEach(v => {\n        clone.push(v);\n      });\n      return clone.map((n: unknown) => this.deepClone(n)) as unknown as T;\n    }\n\n    if (typeof target === 'object' && target !== null) {\n      if (target instanceof HTMLElement)\n        return target.cloneNode(true) as unknown as T;\n      if (target instanceof Blob) return target.slice() as unknown as T;\n      const clone = {\n        ...(target as unknown as { [key: string]: unknown }),\n      } as {\n        [key: string]: unknown;\n      };\n      Object.keys(clone).forEach(k => {\n        clone[k] = this.deepClone(clone[k]);\n      });\n      Object.setPrototypeOf(clone, Object.getPrototypeOf(target));\n      return clone as unknown as T;\n    }\n    return target;\n  };\n}\n\nconst OBJ_PROCESSOR = new ObjProcessor();\nOBJ_PROCESSOR.deepFreeze(OBJ_PROCESSOR);\nexport { OBJ_PROCESSOR };\n","import { DBusTopics } from './defs/dbus-topics.def';\nimport { genUniqId } from '../../generators/generators';\nimport { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_ERRORS } from './defs/dbus-errors.def';\nimport { DBusRX, DBusRXFunc } from './defs/dbus-rx/dbus-rx.def';\nimport { DBusTX } from './defs/dbus-tx/dbus-tx.def';\nimport { DBusTXOptions } from './defs/dbus-tx/dbus-tx-options.def';\nimport { DBusTXData } from './defs/dbus-tx/dbus-tx-data.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from './defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTXDataHeaders } from './defs/dbus-tx/dbus-tx-data-headers.def';\nimport { DBusHub, DBusInterface } from './defs/dbus-interface.def';\nimport { DBUS_HUB_NAMES } from './defs/dbus-hub-names.def';\n\nexport class DBus {\n  private network: Map<DBusTopics, Set<DBusRX>> = new Map();\n\n  private idCounter = {\n    txs: 0,\n    rxs: 0,\n  };\n\n  private createdRXs = new Set<DBusRX>();\n\n  private createdTXs = new Set<DBusTX>();\n\n  private attachedHubs = new Map<DBusHub, DBusInterface>();\n\n  private occupiedNames = new Set<string>();\n\n  readonly busId: string;\n\n  constructor() {\n    this.busId = genUniqId();\n    return Object.freeze(this) as unknown as DBus;\n  }\n\n  public attachHub(hub: DBusHub, suffix?: string): void | Promise<void> {\n    return this.createInterfaceForHub(hub, undefined, suffix);\n  }\n\n  private createInterfaceForHub(\n    hub: DBusHub,\n    prefix?: string,\n    suffix?: string,\n  ): void | Promise<void> {\n    if (this.attachedHubs.has(hub))\n      throw new Error(DBUS_ERRORS.HUB_IS_ALREADY_ATTACHED);\n\n    if (!(hub.hubName in DBUS_HUB_NAMES))\n      throw new Error(DBUS_ERRORS.HUB_NAME_NOT_AUTHORIZED);\n\n    let hubName = prefix ? `${prefix}_${hub.hubName}` : hub.hubName;\n    if (suffix) hubName += `_${suffix}`;\n\n    if (this.occupiedNames.has(hubName))\n      throw new Error(DBUS_ERRORS.HUB_NAME_IS_OCCUPIED);\n\n    const arrowedGetNewTX = (desc?: string) => this.getNewTX(hubName, desc);\n    const arrowedGetNewRX = (func: DBusRXFunc, desc?: string) =>\n      this.genNewRX(func, desc);\n    const arrowedPlugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.plugRX(topic, rx);\n    const arrowedUnplugRX = (topic: DBusTopics, rx: DBusRX) =>\n      this.unplugRX(topic, rx);\n    const decoratedAttachHub = (subHub: DBusHub, subSuffix?: string) =>\n      this.createInterfaceForHub(subHub, hubName, subSuffix);\n\n    const dbusInterface = new DBusInterface(\n      arrowedGetNewTX,\n      arrowedGetNewRX,\n      arrowedPlugRX,\n      arrowedUnplugRX,\n      decoratedAttachHub,\n    );\n\n    this.occupiedNames.add(hubName);\n    this.attachedHubs.set(hub, dbusInterface);\n\n    OBJ_PROCESSOR.deepFreeze(dbusInterface);\n\n    return hub.connect(dbusInterface);\n  }\n\n  private getNewTX(hubName: string, desc?: string): DBusTX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.txs++;\n\n    const arrowedTransmit = async (opts: DBusTXOptions) => {\n      const head = new DBusTXDataHeaders(\n        hubName,\n        id,\n        regNumber,\n        opts.waitMode,\n        opts.prepMode,\n        desc,\n      );\n      const data = new DBusTXData(head, opts.msg);\n      const result = await this.transmit(data);\n      return result;\n    };\n\n    const tx = new DBusTX(regNumber, id, this.busId, arrowedTransmit);\n\n    const freezedTX = OBJ_PROCESSOR.deepFreeze(tx);\n\n    this.createdTXs.add(freezedTX);\n\n    return freezedTX;\n  }\n\n  private genNewRX(func: DBusRXFunc, desc?: string): DBusRX {\n    const id = genUniqId();\n    const regNumber = this.idCounter.rxs++;\n    const rx = new DBusRX(regNumber, id, this.busId, func, desc);\n    const freezedRX = OBJ_PROCESSOR.deepFreeze(rx);\n    this.createdRXs.add(freezedRX);\n    return freezedRX;\n  }\n\n  private plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.createdRXs.has(rx)) throw new Error(DBUS_ERRORS.XENO_RX);\n    if (!this.network.has(topic)) this.network.set(topic, new Set());\n    this.network.get(topic)?.add(rx);\n  }\n\n  private unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.network.get(topic)?.delete(rx);\n  }\n\n  private async transmit(data: DBusTXData): Promise<unknown> {\n    if (!this.network.has(data.msg.topic)) {\n      throw new Error(DBUS_ERRORS.TOPIC_IS_NOT_EXIST);\n    }\n\n    const rxs = this.network.get(data.msg.topic);\n\n    if (rxs === undefined || rxs.size === 0)\n      throw new Error(DBUS_ERRORS.TOPIC_HAS_NO_RXS);\n\n    let choosedRXs: DBusRX[] = [];\n\n    if (data.msg.prefResponseRxIds) {\n      rxs.forEach(rx => {\n        if (data.msg.prefResponseRxIds?.includes(rx.id)) choosedRXs.push(rx);\n      });\n      if (choosedRXs.length === 0)\n        throw new Error(DBUS_ERRORS.PREF_RXS_ARE_NOT_EXIST);\n    } else choosedRXs = [...rxs];\n\n    let result;\n    switch (data.headers.waitMode) {\n      case DBusTXWaitModes.all:\n        result = await Promise.all(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.allSetled:\n        result = await Promise.allSettled(\n          choosedRXs.map(rx => this.callRXFunc(data, rx)),\n        );\n        break;\n      case DBusTXWaitModes.manual:\n        result = choosedRXs;\n        break;\n      case DBusTXWaitModes.nowait:\n      default:\n        choosedRXs.map(rx => this.callRXFunc(data, rx));\n        result = true;\n        break;\n    }\n    return result;\n  }\n\n  private callRXFunc = (data: DBusTXData, rx: DBusRX) => {\n    const handleClone = () => {\n      const clonedData = OBJ_PROCESSOR.deepClone(data);\n      return rx.func(clonedData);\n    };\n\n    const handleFreeze = () => {\n      const freezedData = OBJ_PROCESSOR.deepFreeze(data);\n      return rx.func(freezedData);\n    };\n\n    switch (data.headers.prepMode) {\n      case DBusTXPrepModes.clone:\n        return handleClone();\n      case DBusTXPrepModes.freeze:\n        return handleFreeze();\n      default:\n        throw new Error(DBUS_ERRORS.UNEXPECTED_PREP_MODE);\n    }\n  };\n}\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusCommonResponses = {\n  VOID: 'VOID',\n  BAD_REQUEST: 'BAD_REQUEST',\n};\n\nconst DBUS_COMMON_RESPONSES = OBJ_PROCESSOR.deepFreeze(dbusCommonResponses);\n\nexport { DBUS_COMMON_RESPONSES };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nconst dbusErrors = {\n  HUB_NAME_IS_OCCUPIED: 'HUB_NAME_IS_OCCUPIED',\n  HUB_IS_ALREADY_ATTACHED: 'HUB_IS_ALREADY_ATTACHED',\n  HUB_NAME_NOT_AUTHORIZED: 'HUB_NAME_NOT_AUTHORIZED',\n  XENO_RX: 'XENO_RX',\n  TOPIC_IS_NOT_EXIST: 'TOPIC_IS_NOT_EXIST',\n  TOPIC_HAS_NO_RXS: 'TOPIC_HAS_NO_RXS',\n  PREF_RXS_ARE_NOT_EXIST: 'PREF_RXS_ARE_NOT_EXIST',\n  UNEXPECTED_PREP_MODE: 'UNEXPECTED_PREP_MODE',\n};\n\nconst DBUS_ERRORS = OBJ_PROCESSOR.deepFreeze(dbusErrors);\n\nexport { DBUS_ERRORS };\n","import { OBJ_PROCESSOR } from '../../../processors/obj-processor';\n\nclass DBusHubNames {\n  readonly APP = 'APP';\n\n  readonly ROUTER = 'ROUTER';\n\n  readonly GARAGE = 'GARAGE';\n\n  readonly HEADER = 'HEADER';\n\n  readonly MAIN_CONTROLS = 'MAIN_CONTROLS';\n\n  readonly CREATE_UPDATE = 'CREATE_UPDATE';\n\n  readonly GARAGE_CONTROLLER = 'GARAGE_CONTROLLER';\n}\n\nconst obj = new DBusHubNames();\n\nconst DBUS_HUB_NAMES = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { DBUS_HUB_NAMES };\n\nexport type DBusHubNamesList = keyof DBusHubNames;\n","import { DBusHubNamesList, DBUS_HUB_NAMES } from './dbus-hub-names.def';\nimport { DBusRX, DBusRXFunc } from './dbus-rx/dbus-rx.def';\nimport { DBusTopics } from './dbus-topics.def';\nimport { DBusTX } from './dbus-tx/dbus-tx.def';\n\nexport interface DBusHub {\n  readonly hubName: DBusHubNamesList;\n  connect: (dbusInterface: DBusInterface) => void | Promise<void>;\n}\n\nexport function isDBusHub(object: unknown): object is DBusHub {\n  const objAsRecord = object as Record<string, unknown>;\n  return (\n    'connect' in objAsRecord &&\n    'hubName' in objAsRecord &&\n    typeof objAsRecord.hubName === 'string' &&\n    objAsRecord.hubName in DBUS_HUB_NAMES\n  );\n}\n\nexport class DBusInterface {\n  private RXs = new Set<DBusRX>();\n\n  private TXs = new Set<DBusTX>();\n\n  private RXsPlugMap = new Map<DBusTopics, Set<DBusRX>>();\n\n  constructor(\n    private readonly arrowedGetNewTX: (desc?: string) => DBusTX,\n    private readonly arrowedGetNewRX: (\n      func: DBusRXFunc,\n      desc?: string,\n    ) => DBusRX,\n    private readonly arrowedPlugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    private readonly arrowedUnplugRX: (topic: DBusTopics, rx: DBusRX) => void,\n    public readonly attachSubHub: (\n      subHub: DBusHub,\n      subSuffix?: string,\n    ) => void | Promise<void>,\n  ) {}\n\n  getNewRX(func: DBusRXFunc, desc?: string) {\n    const rx = this.arrowedGetNewRX(func, desc);\n    this.RXs.add(rx);\n    return rx;\n  }\n\n  getNewTX(desc?: string) {\n    const tx = this.arrowedGetNewTX(desc);\n    this.TXs.add(tx);\n    return tx;\n  }\n\n  plugRX(topic: DBusTopics, rx: DBusRX): void {\n    if (!this.RXsPlugMap.has(topic)) this.RXsPlugMap.set(topic, new Set());\n    this.RXsPlugMap.get(topic)?.add(rx);\n    this.arrowedPlugRX(topic, rx);\n  }\n\n  unplugRX(topic: DBusTopics, rx: DBusRX): void {\n    this.RXsPlugMap.get(topic)?.delete(rx);\n    this.arrowedUnplugRX(topic, rx);\n  }\n}\n","import { DBusTXData } from '../dbus-tx/dbus-tx-data.def';\n\nexport type DBusRXFunc = (data: DBusTXData) => Promise<unknown>;\n\nexport class DBusRX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly func: DBusRXFunc,\n    readonly desc?: string,\n  ) {}\n}\n","export enum DBusTopics {\n  ROUTING,\n  CAR_ACTION,\n  GARAGE,\n  REST_CLIENT_REQUESTS,\n  GENERATE,\n}\n","import { DBusTXPrepModes, DBusTXWaitModes } from './dbus-tx-modes.def';\n\nexport class DBusTXDataHeaders {\n  constructor(\n    readonly hubName: string,\n    readonly txId: string,\n    readonly txRegNumber: number,\n    readonly waitMode: DBusTXWaitModes,\n    readonly prepMode: DBusTXPrepModes,\n    readonly txDesc?: string,\n  ) {}\n}\n","import { DBusMsg } from '../msgs/dbus-msg.def';\nimport { DBusTXDataHeaders } from './dbus-tx-data-headers.def';\n\nexport class DBusTXData {\n  constructor(readonly headers: DBusTXDataHeaders, readonly msg: DBusMsg) {}\n}\n","export enum DBusTXWaitModes {\n  nowait,\n  all,\n  allSetled,\n  manual,\n}\n\nexport enum DBusTXPrepModes {\n  clone,\n  freeze,\n}\n","import { DBusTXOptions } from './dbus-tx-options.def';\n\nexport class DBusTX {\n  constructor(\n    readonly regNumber: number,\n    readonly id: string,\n    readonly busId: string,\n    readonly transmit: (options: DBusTXOptions) => Promise<unknown>,\n  ) {}\n}\n","import { DBusTopics } from '../dbus-topics.def';\n\nexport abstract class DBusMsg {\n  constructor(\n    readonly topic: DBusTopics,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {}\n}\n","export class Pager {\n  private firstPageNumber = 1;\n\n  private currPageNumber = this.firstPageNumber;\n\n  private lastPageNumber = 0;\n\n  private pagerSpan = document.createElement('span');\n\n  private entriesCount = 0;\n\n  private callbackIsCalled = false;\n\n  constructor(\n    private entriesPerPage: number,\n    protected readonly listCallback: (dir: 'prev' | 'next') => Promise<boolean>,\n    private btnPrevPage = document.createElement('button'),\n    private btnNextPage = document.createElement('button'),\n  ) {\n    const btnNextSpan = document.createElement('span');\n    btnNextSpan.textContent = 'Next page';\n    this.btnNextPage.append(btnNextSpan);\n\n    const btnPrevSpan = document.createElement('span');\n    btnPrevSpan.textContent = 'Prev page';\n    this.btnPrevPage.append(btnPrevSpan);\n\n    this.btnNextPage.addEventListener('click', () => this.callCallback('next'));\n    this.btnPrevPage.addEventListener('click', () => this.callCallback('prev'));\n  }\n\n  public toogleLock(lock: boolean) {\n    this.toggleBtnsDisabled(lock);\n  }\n\n  public getEntriesPerPage(): number {\n    return this.entriesPerPage;\n  }\n\n  public setLastPageNumber(n: number) {\n    this.lastPageNumber = n;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public setEntriesCount(n: number) {\n    this.entriesCount = n;\n    this.lastPageNumber = Math.ceil(this.entriesCount / this.entriesPerPage);\n    this.pagerSpan.textContent = `Entries: ${n}, Pages: ${this.lastPageNumber}`;\n    if (!this.callbackIsCalled) this.toggleBtnsDisabled(false);\n  }\n\n  public getCurrPageNumber() {\n    return this.currPageNumber;\n  }\n\n  public getBtnPrevPage(): HTMLSpanElement {\n    return this.btnPrevPage;\n  }\n\n  public getBtnNextPage(): HTMLSpanElement {\n    return this.btnNextPage;\n  }\n\n  public getPagerSpan(): HTMLSpanElement {\n    return this.pagerSpan;\n  }\n\n  tryChangePage(dir: 'prev' | 'next') {\n    return this.callCallback(dir);\n  }\n\n  private async callCallback(dir: 'prev' | 'next') {\n    this.callbackIsCalled = true;\n    this.toggleBtnsDisabled(true);\n    const pageIsChanged = await this.listCallback(dir);\n    if (pageIsChanged) {\n      switch (dir) {\n        case 'next':\n          this.currPageNumber++;\n          break;\n        case 'prev':\n          this.currPageNumber--;\n          break;\n        default:\n          break;\n      }\n    }\n    this.toggleBtnsDisabled(false);\n    this.callbackIsCalled = false;\n  }\n\n  private toggleBtnsDisabled(state: boolean) {\n    if (state === true) {\n      this.btnPrevPage.disabled = true;\n      this.btnNextPage.disabled = true;\n      return;\n    }\n\n    if (this.currPageNumber > this.firstPageNumber)\n      this.btnPrevPage.disabled = false;\n    else this.btnPrevPage.disabled = true;\n\n    if (this.currPageNumber < this.lastPageNumber)\n      this.btnNextPage.disabled = false;\n    else this.btnNextPage.disabled = true;\n  }\n}\n","import { DBusTopics } from '../../dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../dbus/defs/msgs/dbus-msg.def';\n\nexport abstract class DBusMsgRoutingMsg extends DBusMsg {\n  constructor(rxIds?: string[], prefResponseRxIds?: string[]) {\n    super(DBusTopics.ROUTING, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRoutingMsg } from '../dbus-msg-routing-msg.def';\nimport { ROUTES } from '../../routes.def';\n\nexport class DBusMsgRouteIsChangedMsg extends DBusMsgRoutingMsg {\n  constructor(\n    readonly newRoute: keyof typeof ROUTES | string,\n    rxIds?: string[],\n    prefResponseRxIds?: string[],\n  ) {\n    super(rxIds, prefResponseRxIds);\n  }\n}\n","export class SimpleRouterAgent {\n  constructor(\n    readonly type: string,\n    readonly path: string,\n    readonly callback: CallableFunction,\n    readonly getStateCallback?: CallableFunction,\n    readonly setStateCallback?: CallableFunction,\n  ) {}\n}\n","import { OBJ_PROCESSOR } from '../../processors/obj-processor';\nimport { DBUS_HUB_NAMES } from '../dbus/defs/dbus-hub-names.def';\nimport { DBusHub, DBusInterface } from '../dbus/defs/dbus-interface.def';\nimport {\n  DBusTXPrepModes,\n  DBusTXWaitModes,\n} from '../dbus/defs/dbus-tx/dbus-tx-modes.def';\nimport { DBusTX } from '../dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRouteIsChangedMsg } from './dbus-msgs-defs/types/dbus-msg-route-is-chaned-msg';\nimport { SimpleRouterAgent } from './simple-router-agent';\n\nexport interface RouterOptions {\n  mode: string;\n  onlyDBus?: true;\n  defaultRoot?: string;\n  defaultAgent?: SimpleRouterAgent;\n}\n\nexport class SimpleRouter implements DBusHub {\n  readonly hubName = DBUS_HUB_NAMES.ROUTER;\n\n  private agents: Set<SimpleRouterAgent> = new Set();\n\n  private options: RouterOptions;\n\n  private currRoute: string | undefined;\n\n  private txs: Set<DBusTX> = new Set();\n\n  private defaultAgent: SimpleRouterAgent | undefined;\n\n  private restrictions: Set<() => Promise<boolean>> = new Set();\n\n  constructor(options: RouterOptions) {\n    switch (options.mode) {\n      case '#':\n        // just filter that # mode\n        break;\n      case '?':\n        throw new Error(`${options.mode} is not supported yet!`);\n      default:\n        throw new Error(`${options.mode} is not supported!`);\n    }\n    this.options = OBJ_PROCESSOR.deepFreeze(options);\n\n    window.addEventListener('popstate', async () => {\n      if (window.location.href === this.currRoute) return;\n\n      if (this.restrictions.size > 0) {\n        const wantedRoute = window.location.href;\n\n        if (this.currRoute) {\n          window.location.href = this.currRoute;\n        } else if (this.options.defaultRoot) {\n          window.location.href = `${window.location.host}/${this.options.defaultRoot}`;\n        }\n        const arr = [...this.restrictions.values()];\n        const promises = arr.map(arrow => arrow());\n        const result = await Promise.all(promises);\n        let cancelRouteChange = false;\n\n        if (Array.isArray(result)) {\n          for (let i = 0; i < result.length; i++) {\n            if (typeof result[i] !== 'boolean')\n              throw new Error('restrict func returned not boolean value!');\n\n            if (!result[i]) cancelRouteChange = true;\n            else {\n              const func = arr[i];\n\n              if (func) this.restrictions.delete(func);\n            }\n          }\n        }\n\n        if (!cancelRouteChange) window.location.href = wantedRoute;\n      } else {\n        this.activateWantedAgents();\n      }\n    });\n  }\n\n  activateWantedAgents(): boolean | Error[] {\n    this.currRoute = window.location.href;\n    let activatedCount = 0;\n    const errors = [];\n\n    if (!this.options.onlyDBus && this.options.mode === '#') {\n      const agentsArr = [...this.agents];\n      for (let i = 0; i < this.agents.size; i++) {\n        if (agentsArr[i]?.path === window.location.hash) {\n          try {\n            agentsArr[i]?.callback();\n          } catch (error) {\n            error.push(error);\n          }\n          activatedCount++;\n          break;\n        }\n      }\n\n      if (activatedCount === 0) {\n        if (\n          this.defaultAgent &&\n          this.options.defaultRoot === window.location.hash\n        ) {\n          this.defaultAgent.callback();\n        } else {\n          errors.push(new Error('Agent is not finded'));\n        }\n      }\n    }\n\n    if (this.txs.size > 0) {\n      this.txs.forEach(tx => {\n        const msg = new DBusMsgRouteIsChangedMsg(window.location.hash);\n        tx.transmit({\n          msg,\n          waitMode: DBusTXWaitModes.nowait,\n          prepMode: DBusTXPrepModes.freeze,\n        });\n      });\n    }\n\n    if (errors.length > 0) return errors;\n    return activatedCount > 0;\n  }\n\n  addRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.add(agent);\n  }\n\n  removeRouterAgent(agent: SimpleRouterAgent): void {\n    this.agents.delete(agent);\n  }\n\n  flushRouterAgents(): void {\n    this.agents.clear();\n  }\n\n  /* not refactored yet\n  private watchRestrictions = async (msg: DataBusRoutingMsg) => {\n    if (msg instanceof DataBusMsgRoutingRoutingRestrictMode) {\n      const func = msg.data.callbackPromiseGenerator as () => Promise<boolean>;\n\n      if (msg.data.mode) {\n        this.restrictions.add(func);\n      } else {\n        this.restrictions.delete(func);\n      }\n    }\n  };\n  */\n\n  connect(int: DBusInterface): void {\n    const tx = int.getNewTX('broadcasting route changes');\n    this.txs.add(tx);\n    // watch restriction\n    // not refactored yet\n    // const rx = bus.getNewRX();\n    // bus.registerReceiver(DataBusMsgTopics.ROUTING, msgReceiver);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\n\nexport type EngineResponse = {\n  velocity: number;\n  distance: number;\n};\n\nclass RestClientEngine {\n  private resUrl = '/engine';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  toggleEngine(\n    id: number,\n    status: 'started' | 'stopped',\n  ): Promise<EngineResponse> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=${status}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as EngineResponse))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  enterDriveMode(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}?id=${id}&status=drive`;\n      fetch(url, {\n        method: 'GET',\n      }).then(response => {\n        switch (response.status) {\n          case 200:\n            res(true);\n            break;\n          case 400:\n          case 404:\n          case 429:\n          case 500:\n          default:\n            rej(new Error(`${response.status}`));\n            break;\n        }\n      });\n    });\n  }\n}\n\nconst obj = new RestClientEngine('http://127.0.0.1:3000');\n\nconst REST_CLIENT_ENGINE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_ENGINE };\n","import { UnregCarData } from '../../../../../definitions/car-data.def';\nimport { DBusMsgRESTReqMsg } from '../../../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_NAMES } from '../../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqGarageCreateCarMsg extends DBusMsgRESTReqMsg {\n  constructor(\n    readonly unregCar: UnregCarData,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(REST_CLIENT_NAMES.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { DBusMsgRESTReqMsg } from '../../../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_NAMES } from '../../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqGarageDeleteCarMsg extends DBusMsgRESTReqMsg {\n  constructor(\n    readonly id: number,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(REST_CLIENT_NAMES.GARAGE, rxIds, prefResponseRxIds);\n  }\n}\n","import { RegCarData, UnregCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { DBUS_COMMON_RESPONSES } from '../../../lib/services/dbus/defs/dbus-common-responses.def';\nimport { DBusInterface } from '../../../lib/services/dbus/defs/dbus-interface.def';\nimport { DBusPort } from '../../../lib/services/dbus/defs/dbus-port.def';\nimport { DBusTopics } from '../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusTXData } from '../../../lib/services/dbus/defs/dbus-tx/dbus-tx-data.def';\nimport { DBusTX } from '../../../lib/services/dbus/defs/dbus-tx/dbus-tx.def';\nimport { DBusMsgRESTReqMsg } from '../dbus-msgs/request-msgs/req-msg.def';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport {\n  RestClientNamesList,\n  REST_CLIENT_NAMES,\n} from '../rest-clients-names.def';\nimport { DBusMsgRESTReqGarageCreateCarMsg } from './dbus-msgs.defs/requests-msgs/create-car-msg.def';\nimport { DBusMsgRESTReqGarageDeleteCarMsg } from './dbus-msgs.defs/requests-msgs/delete-car-msg.def';\n\nclass RestClientGarage implements DBusPort {\n  protected clientName = REST_CLIENT_NAMES.GARAGE;\n\n  protected txs = new Set<DBusTX>();\n\n  private resUrl = '/garage';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  autoConnect(int: DBusInterface) {\n    const requestRX = int.getNewRX(this.requestRXFunc, 'listen requests to db');\n    int.plugRX(DBusTopics.REST_CLIENT_REQUESTS, requestRX);\n  }\n\n  requestRXFunc = async (data: DBusTXData) => {\n    if (\n      data.msg instanceof DBusMsgRESTReqMsg &&\n      data.msg.destClient === this.clientName\n    ) {\n      if (data.msg instanceof DBusMsgRESTReqGarageCreateCarMsg) {\n        return this.createCar(data.msg.unregCar);\n      }\n      if (data.msg instanceof DBusMsgRESTReqGarageDeleteCarMsg) {\n        return this.deleteCar(data.msg.id);\n      }\n    }\n    return DBUS_COMMON_RESPONSES.VOID;\n  };\n\n  getCars(\n    page?: number,\n    limit?: number,\n  ): Promise<{ limit: string; cars: RegCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      const url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res({ limit: limitResponse, cars: json as RegCarData[] }))\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  getCar(id: number): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  createCar(unregCar: UnregCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(unregCar),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as RegCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  deleteCar(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  updateCar(regCar: RegCarData): Promise<RegCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${regCar.id}`;\n      const data: UnregCarData = regCar;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n}\n\nconst obj = new RestClientGarage('http://127.0.0.1:3000');\n// TODO: DEL PROPERTY\nobj.autoConnect = (int: DBusInterface) => {};\n\nconst REST_CLIENT_GARAGE = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_GARAGE };\n","import { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\n\nclass RestClientWinnersSortOptions {\n  readonly id = 'id';\n\n  readonly wins = 'wins';\n\n  readonly time = 'time';\n}\n\nconst obj = new RestClientWinnersSortOptions();\n\nconst REST_CLIENT_WINNERS_SORT_OPTIONS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS_SORT_OPTIONS };\n\nexport type RestClientWinnersSortOptionsList =\n  keyof RestClientWinnersSortOptions;\n","import { WinnerCarData } from '../../../definitions/car-data.def';\nimport { OBJ_PROCESSOR } from '../../../lib/processors/obj-processor';\nimport { REST_CLIENT_ERROR } from '../rest-clients-errors.def';\nimport { RestClientWinnersSortOptionsList } from './rest-client-winners.def';\n\nclass RestClientWinners {\n  private resUrl = '/winners';\n\n  private fullUrl: string;\n\n  constructor(private baseUrl: string) {\n    this.fullUrl = baseUrl + this.resUrl;\n  }\n\n  getWinners(\n    page = 0,\n    limit?: number,\n    sort?: RestClientWinnersSortOptionsList,\n    order?: 'ASC' | 'DESC',\n  ): Promise<{ limit: string; cars: WinnerCarData[] }> {\n    return new Promise((res, rej) => {\n      const limitStr = limit || '';\n      let url = `${this.fullUrl}?_page=${page}&_limit=${limitStr}`;\n      if (sort) url += `&_sort=${sort}`;\n      if (order) url += `&_order=${order}`;\n      let limitResponse = '';\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) {\n            limitResponse = response.headers.get('X-Total-Count') as string;\n            return response.json();\n          }\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json =>\n          res({ limit: limitResponse, cars: json as WinnerCarData[] }),\n        )\n        .catch((error: Error) => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  getWinner(id: number): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'GET',\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  createWinner(winnerCarData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      fetch(this.fullUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(winnerCarData),\n      })\n        .then(response => {\n          if (response.status === 201) return response.json();\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  deleteWinner(id: number): Promise<true> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${id}`;\n      fetch(url, {\n        method: 'DELETE',\n      })\n        .then(response => {\n          if (response.status === 200) res(true);\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n\n  updateWinner(winnerData: WinnerCarData): Promise<WinnerCarData> {\n    return new Promise((res, rej) => {\n      const url = `${this.fullUrl}/${winnerData.id}`;\n      const data: WinnerCarData = winnerData;\n      fetch(url, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n        .then(response => {\n          if (response.status === 200) return response.json();\n          if (response.status === 404)\n            throw new Error(REST_CLIENT_ERROR.NOT_FOUND);\n          throw new Error(REST_CLIENT_ERROR.UNEXPECTED_RESULT);\n        })\n        .then(json => res(json as WinnerCarData))\n        .catch(error => {\n          if (error.message in REST_CLIENT_ERROR) rej(error);\n          else rej(new Error(REST_CLIENT_ERROR.UNKNOWN_ERROR));\n        });\n    });\n  }\n}\n\nconst obj = new RestClientWinners('http://127.0.0.1:3000');\n\nconst REST_CLIENT_WINNERS = OBJ_PROCESSOR.deepFreeze(obj);\n\nexport { REST_CLIENT_WINNERS };\n","import { DBusTopics } from '../../../../lib/services/dbus/defs/dbus-topics.def';\nimport { DBusMsg } from '../../../../lib/services/dbus/defs/msgs/dbus-msg.def';\nimport { RestClientNamesList } from '../../rest-clients-names.def';\n\nexport class DBusMsgRESTReqMsg extends DBusMsg {\n  constructor(\n    readonly destClient: RestClientNamesList,\n    readonly rxIds?: string[],\n    readonly prefResponseRxIds?: string[],\n  ) {\n    super(DBusTopics.REST_CLIENT_REQUESTS, rxIds, prefResponseRxIds);\n  }\n}\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nconst restClientError = {\n  UNEXPECTED_RESULT: 'UNEXPECTED_RESULT',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  NOT_FOUND: 'NOT_FOUND',\n};\n\nconst REST_CLIENT_ERROR = OBJ_PROCESSOR.deepFreeze(\n  restClientError,\n) as typeof restClientError;\n\nexport { REST_CLIENT_ERROR };\n","import { OBJ_PROCESSOR } from '../../lib/processors/obj-processor';\n\nclass RestClientNames {\n  readonly GARAGE = 'GARAGE';\n\n  readonly WINNERS = 'WINNERS';\n}\n\nconst REST_CLIENT_NAMES = new RestClientNames();\n\nOBJ_PROCESSOR.deepFreeze(REST_CLIENT_NAMES);\n\nexport { REST_CLIENT_NAMES };\n\nexport type RestClientNamesList = keyof RestClientNames;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { App } from './app';\n\nwindow.addEventListener('load', () => {\n  const appDiv = document.createElement('div');\n  document.body.append(appDiv);\n  const app = new App(appDiv);\n});\n"],"sourceRoot":""}